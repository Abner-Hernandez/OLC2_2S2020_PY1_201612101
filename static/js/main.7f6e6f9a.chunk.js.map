{"version":3,"sources":["docs/clases/Type.js","docs/clases/Counters.js","docs/clases/SymbolTable.js","docs/clases/Value.js","docs/clases/Declaration.js","docs/clases/Function.js","docs/clases/Logical.js","docs/clases/Relational.js","docs/clases/Arithmetical.js","docs/clases/Symbol.js","docs/interprete.js","docs/clases/Print.js","docs/clases/Return.js","docs/clases/Call.js","docs/clases/IfList.js","docs/clases/While.js","docs/clases/DoWhile.js","docs/clases/Assignment.js","docs/clases/Switch.js","docs/clases/For.js","docs/clases/Unary.js","docs/clases/Break.js","docs/clases/Continue.js","docs/clases/Cast.js","Components/TextArea.js","App.js","serviceWorker.js","index.js"],"names":["Type","LEXICO","SINTACTICO","SEMANTICO","LOCAL","VOID","VAR","CONST","GLOBAL","OBJETO","PRIMITIVO","VALOR","VECTOR","CARACTER","ENTERO","DECIMAL","BOOL","CADENA","NULL","DEFAULT","SUMA","RESTA","MULTIPLICACION","DIVISION","MODULO","POTENCIA","MAYOR","MENOR","MAYORIGUAL","MENORIGUAL","IDENTICO","REFERECIA","DIFERENTE","INCREMENTO","DECREMENTO","AND","OR","NOT","XOR","ID","ACCESS","LLAMADA","require","Counter","this","clearAll","temporals","labels","output","errors","exitret","id","p","h","relative","inits","finals","Rsymbol","Rerror","Rfunction","tagsvf","setExitRet","tag","push","clearExitRet","pop","getExitRet","length","getLastFinal","getLengthFinal","pushFinal","popFinal","pushTagsvf","popTagsvf","getTagsvf","getTagsSize","getLastInit","getLengthInit","pushInit","popInit","getPPlus","r","getHPlus","getP","getH","getRelativePlus","getRelative","newRelative","resetRelative","generateInstruction","left","op","right","t","getNextTemporal","putInstruction","generateIf","getNextLabel","generateIf2","operateRelational","tv","to","t1","generateDeclaration","tipo","value","paramFunc","paramCall","ambit","n","getActualTemporal","getActualLabel","getOutput","temp","i","getGlobals","joinString","s1","putPrincipal","idd","L","instruction","getError","putError","type","row","column","message","getSymbol","putSymbol","_ambit","_type","_type_exp","_type_var","_type_c","_type_o","_id","_pointer","_tag","type_exp","type_var","type_c","type_o","pointer","getFunction","putFunction","_param","_size","_row","_col","param","size","newId","getId","SymbolTable","_tsuper","functions","symbols","tsuper","symb","exists","name","val","s","addSymbol","fun","existsFunction","f","count","Value","te","_column","tab","cont","replace","toString","startsWith","substring","ini","charCodeAt","ret","String","tag2","ERROR","Symbol","Declaration","_value","tmpExp","Array","isArray","operate","checkType","a","existsDirect","CHAR","addSymbolDirect","typ","Count","Function","_body","_idd","body","symbolTab","exit","r2","Cont","Logical","node_left","node_right","tempL","tempR","tf","Relational","Arithmetical","op1","op2","l","tagin","tagout","interprete","o","k","v","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","$VW","$VX","$VY","$VZ","$V_","$V$","$V01","parser","trace","yy","symbols_","terminals_","2","5","7","8","9","10","12","13","14","19","28","29","31","35","37","38","39","40","41","42","43","44","45","50","51","58","59","60","64","70","72","73","76","77","78","79","80","83","84","85","86","87","88","90","92","93","94","96","97","98","99","101","102","103","104","106","108","110","111","112","113","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","access","first_line","first_column","errores","error","line","e","table","3","4","1","30","46","32","47","48","33","15","34","36","18","20","21","22","23","24","25","26","27","49","55","56","57","68","71","61","100","105","107","52","62","63","65","66","69","67","109","54","89","91","95","53","114","81","74","82","75","defaultActions","150","177","181","184","185","199","216","parseError","str","hash","recoverable","Error","parse","input","self","stack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","popStack","getPrototypeOf","symbol","preErrorSymbol","state","action","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","errStr","showPosition","join","text","match","loc","last_line","last_column","range","apply","concat","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","exports","main","console","log","process","source","readFileSync","normalize","module","argv","TextArea","text_area","React","createRef","code","lineNumbers","matchBrackets","styleActiveLine","theme","mode","onBeforeChange","editor","data","setState","props","get_text","onChange","Component","App","translate_input","ejecutar_input","report_errors","report_symbols","report_ast","texto","className","role","onClick","data-toggle","href","aria-haspopup","aria-expanded","Graphviz","dot","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"gHAAA,OA4CeA,UA5CF,CACTC,OAAQ,SACRC,WAAY,aACZC,UAAW,YACXC,MAAO,QACPC,KAAM,OACNC,IAAK,MACLC,MAAO,QACPC,OAAQ,SACRC,OAAQ,SACRC,UAAW,YACXC,MAAO,QACPC,OAAQ,SACRC,SAAU,WACVC,OAAQ,SACRC,QAAS,UACTC,KAAM,OACNC,OAAQ,SACRC,KAAM,OACNC,QAAS,UACTC,KAAM,OACNC,MAAO,QACPC,eAAgB,iBAChBC,SAAU,WACVC,OAAQ,SACRC,SAAU,WACVC,MAAO,QACPC,MAAO,QACPC,WAAY,aACZC,WAAY,aACZC,SAAU,WACVC,UAAW,aACXC,UAAW,YACXC,WAAY,aACZC,WAAY,aACZC,IAAK,MACLC,GAAI,KACJC,IAAK,MACLC,IAAK,MACLC,GAAI,KACJC,OAAQ,QACRC,QAAS,Y,+BCzCb,WAAMzC,EAAO0C,EAAQ,GAErB,SAASC,IAELC,KAAKC,SAAW,WACZF,EAAQG,UAAY,EACpBH,EAAQI,OAAS,EACjBJ,EAAQK,OAAS,GACjBL,EAAQM,OAAS,GACjBN,EAAQO,QAAU,GAClBP,EAAQQ,GAAK,EACbR,EAAQS,EAAI,EACZT,EAAQU,EAAI,EACZV,EAAQW,SAAW,GACnBX,EAAQY,MAAQ,GAChBZ,EAAQa,OAAS,GACjBb,EAAQc,QAAU,GAClBd,EAAQe,OAAS,GACjBf,EAAQgB,UAAY,GACpBhB,EAAQiB,OAAS,IAGrBhB,KAAKiB,WAAa,SAAUC,GACxBnB,EAAQO,QAAQa,KAAKD,IAGzBlB,KAAKoB,aAAe,WAChBrB,EAAQO,QAAQe,OAGpBrB,KAAKsB,WAAa,WACd,OAAOvB,EAAQO,QAAQP,EAAQO,QAAQiB,OAAS,IAGpDvB,KAAKwB,aAAe,WAChB,OAAOzB,EAAQa,OAAOb,EAAQa,OAAOW,OAAS,IAGlDvB,KAAKyB,eAAiB,WAClB,OAAO1B,EAAQa,OAAOW,QAG1BvB,KAAK0B,UAAY,SAAUR,GACvBnB,EAAQa,OAAOO,KAAKD,IAGxBlB,KAAK2B,SAAW,SAAUT,GACtBnB,EAAQa,OAAOS,OAGnBrB,KAAK4B,WAAa,SAAUV,GACxBnB,EAAQiB,OAAOG,KAAKD,IAGxBlB,KAAK6B,UAAY,WACb9B,EAAQiB,OAAOK,OAGnBrB,KAAK8B,UAAY,WACb,OAAO/B,EAAQiB,OAAOjB,EAAQiB,OAAOO,OAAO,IAGhDvB,KAAK+B,YAAc,WACf,OAAOhC,EAAQiB,OAAOO,QAG1BvB,KAAKgC,YAAc,WACf,OAAOjC,EAAQY,MAAMZ,EAAQY,MAAMY,OAAS,IAGhDvB,KAAKiC,cAAgB,WACjB,OAAOlC,EAAQY,MAAMY,QAGzBvB,KAAKkC,SAAW,SAAUhB,GACtBnB,EAAQY,MAAMQ,KAAKD,IAGvBlB,KAAKmC,QAAU,SAAUjB,GACrBnB,EAAQY,MAAMU,OAGlBrB,KAAKoC,SAAW,WACZ,IAAMC,EAAItC,EAAQS,EAElB,OADAT,EAAQS,IACD6B,GAGXrC,KAAKsC,SAAW,WACZ,IAAMD,EAAItC,EAAQU,EAElB,OADAV,EAAQU,IACD4B,GAGXrC,KAAKuC,KAAO,WACR,OAAOxC,EAAQS,GAGnBR,KAAKwC,KAAO,WACR,OAAOzC,EAAQU,GAGnBT,KAAKyC,gBAAkB,WACnB,IAAMJ,EAAItC,EAAQW,SAASX,EAAQW,SAASa,OAAS,GAErD,OADAxB,EAAQW,SAASX,EAAQW,SAASa,OAAS,KACpCc,GAGXrC,KAAK0C,YAAc,WACf,OAAO3C,EAAQW,SAASX,EAAQW,SAASa,OAAS,IAGtDvB,KAAK2C,YAAc,WACf5C,EAAQW,SAASS,KAAK,IAG1BnB,KAAK4C,cAAgB,WACjB7C,EAAQW,SAASW,OAGrBrB,KAAK6C,oBAAsB,SAAUC,EAAMC,EAAIC,GAC3C,IAAIC,EAAIjD,KAAKkD,kBAEb,OADAlD,KAAKmD,eAAeF,EAAI,MAAQH,EAAO,IAAMC,EAAK,IAAMC,EAAQ,KACzDC,GAGXjD,KAAKoD,WAAa,SAAUN,EAAMC,EAAIC,GAClC,IAAIC,EAAIjD,KAAKqD,eAEb,OADArD,KAAKmD,eAAe,MAAQH,EAAQ,IAAMD,EAAK,IAAMD,EAAO,UAAYG,EAAI,KACrEA,GAGXjD,KAAKsD,YAAc,SAAUR,EAAMC,EAAIC,EAAOC,GAE1CjD,KAAKmD,eAAe,MAAQH,EAAQ,IAAMD,EAAK,IAAMD,EAAO,UAAYG,EAAI,MAIhFjD,KAAKuD,kBAAoB,SAAUT,EAAMC,EAAIC,GACzC,IAAIQ,EAAKxD,KAAKqD,eACVI,EAAKzD,KAAKqD,eACVK,EAAK1D,KAAKkD,kBAOd,OANAlD,KAAKmD,eAAe,MAAQL,EAAO,IAAMC,EAAK,IAAMC,EAAQ,UAAYQ,EAAK,KAC7ExD,KAAKmD,eAAeO,EAAK,SACzB1D,KAAKmD,eAAe,QAAUM,EAAK,KACnCzD,KAAKmD,eAAeK,EAAK,KACzBxD,KAAKmD,eAAeO,EAAK,SACzB1D,KAAKmD,eAAeM,EAAK,KAClBC,GAGX1D,KAAK2D,oBAAsB,SAAUC,EAAMC,EAAOnD,GAC9C,IAAIuC,EAAIjD,KAAKkD,kBAWb,OAVI9F,EAAKQ,QAAUgG,GACf5D,KAAKmD,eAAeF,EAAI,SACxBjD,KAAKmD,eAAe,cAEpBnD,KAAKmD,eAAe,QAAUF,EAAI,OAASY,EAAQ,OAGnD7D,KAAKmD,eAAeF,EAAI,UAAYvC,EAAW,KAC/CV,KAAKmD,eAAe,SAAWF,EAAI,OAASY,EAAQ,MAEjDZ,GAGXjD,KAAK8D,UAAY,SAAUF,EAAMlD,GAC7B,IAAIuC,EAAIjD,KAAKkD,kBAQb,OAPI9F,EAAKQ,QAAUgG,GACf5D,KAAKmD,eAAeF,EAAI,SACxBjD,KAAKmD,eAAe,eAGpBnD,KAAKmD,eAAeF,EAAI,UAAYvC,EAAW,KAE5CuC,GAGXjD,KAAK+D,UAAY,SAAUH,EAAMI,EAAOH,EAAOnD,GAC3C,IAAIuC,EAAIjD,KAAKkD,kBAWb,OAVI9F,EAAKQ,QAAUgG,GACf5D,KAAKmD,eAAeF,EAAI,SACxBjD,KAAKmD,eAAe,cAEpBnD,KAAKmD,eAAe,QAAUF,EAAI,OAASY,EAAQ,OAGnD7D,KAAKmD,eAAeF,EAAI,MAAQe,EAAQ,MAAQtD,EAAW,KAC3DV,KAAKmD,eAAe,SAAWF,EAAI,OAASY,EAAQ,MAEjDZ,GAGXjD,KAAKkD,gBAAkB,WACnB,IAAIe,EAAIlE,EAAQG,UAEhB,OADAH,EAAQG,YACD,IAAM+D,GAGjBjE,KAAKqD,aAAe,WAChB,IAAIhB,EAAItC,EAAQI,OAEhB,OADAJ,EAAQI,SACD,IAAMkC,GAGjBrC,KAAKkE,kBAAoB,WACrB,MAAO,IAAMnE,EAAQG,WAGzBF,KAAKmE,eAAiB,WAClB,MAAO,IAAMpE,EAAQI,QAGzBH,KAAKoE,UAAY,WAEb,IADA,IAAIC,EAAO,SACFC,EAAI,EAAGA,GAAKvE,EAAQG,UAAWoE,IACpCD,GAAQ,KAAOC,EAInB,OAFAD,GAAQ,uDACRtE,EAAQK,OAASiE,EAAOtE,EAAQK,OACzBL,EAAQK,QAGnBJ,KAAKuE,WAAa,WACd,IAAIlC,EAAItC,EAAQK,OAEhB,OADAL,EAAQK,OAAS,GACViC,GAGXrC,KAAKwE,WAAa,SAAUC,GACxB1E,EAAQK,OAASqE,EAAK,KAAO1E,EAAQK,QAGzCJ,KAAK0E,aAAe,SAAUC,EAAKC,GAC/B7E,EAAQK,OAAS,QAAUuE,EAAM,aAAeC,EAAI,QAAU7E,EAAQK,QAG1EJ,KAAKmD,eAAiB,SAAU0B,GAC5B9E,EAAQK,QAAUyE,EAAc,MAGpC7E,KAAK8E,SAAW,WAEZ,OAAO/E,EAAQe,QAGnBd,KAAK+E,SAAW,SAAUC,EAAMH,EAAaI,EAAKC,GAE9CnF,EAAQe,OAAOK,KAAK,CAAC6D,KAAMA,EAAMG,QAASN,EAAaI,IAAKA,EAAKC,OAAQA,KAG7ElF,KAAKoF,UAAY,WAEb,OAAOrF,EAAQc,SAGnBb,KAAKqF,UAAY,SAAUC,EAAQC,EAAOC,EAAWC,EAAYC,EAASC,EAASC,EAAKC,EAASC,GAE7F/F,EAAQc,QAAQM,KAAK,CAAC6C,MAAOsB,EAAQN,KAAMO,EAAOQ,SAAUP,EAAWQ,SAAUP,EAAWQ,OAASP,EAASQ,OAAQP,EAASpF,GAAIqF,EAAKO,QAASN,KAGrJ7F,KAAKoG,YAAc,WAEf,OAAOrG,EAAQgB,WAGnBf,KAAKqG,YAAc,SAAUf,EAAQC,EAAOC,EAAWG,EAASC,EAAKU,EAAQC,EAAOC,EAAMC,GAEtF1G,EAAQgB,UAAUI,KAAK,CAAC6C,MAAOsB,EAAQN,KAAMO,EAAOQ,SAAUP,EAAWU,OAAQP,EAASpF,GAAIqF,EAAKc,MAAOJ,EAAQK,KAAMJ,EAAOtB,IAAKuB,EAAMtB,OAAQuB,KAGtJzG,KAAK4G,MAAQ,WACT,OAAO7G,EAAQQ,MAGnBP,KAAK6G,MAAQ,WACT,OAAO9G,EAAQQ,IAKvBR,EAAQG,UAAY,EACpBH,EAAQI,OAAS,EACjBJ,EAAQK,OAAS,GACjBL,EAAQM,OAAS,GACjBN,EAAQO,QAAU,GAClBP,EAAQQ,GAAK,EACbR,EAAQS,EAAI,EACZT,EAAQU,EAAI,EACZV,EAAQW,SAAW,GACnBX,EAAQY,MAAQ,GAChBZ,EAAQa,OAAS,GACjBb,EAAQc,QAAU,GAClBd,EAAQe,OAAS,GACjBf,EAAQgB,UAAY,GACpBhB,EAAQiB,OAAS,GAEFjB,a,2DCzST+G,E,WAEF,WAAYC,GAAU,oBACH,MAAXA,IACA/G,KAAKgH,UAAYD,EAAQC,WAE7BhH,KAAKiH,QAAU,GACfjH,KAAKkH,OAASH,E,sDAeRI,GACN,OAAKnH,KAAKoH,OAAOD,EAAK5G,MAClBP,KAAKiH,QAAQ9F,KAAKgG,IACX,K,sCAKCA,GAEZ,OADAnH,KAAKiH,QAAQ9F,KAAKgG,IACX,I,gCAGDE,GACN,IAAK,IAAI/C,EAAE,EAAGA,EAAEtE,KAAKiH,QAAQ1F,OAAQ+C,IACjC,GAAI+C,IAASrH,KAAKiH,QAAQ3C,GAAG/D,GACzB,OAAOP,KAAKiH,QAAQ3C,GAG5B,OAAmB,MAAftE,KAAKkH,OACElH,KAAKkH,OAAO9B,UAAUiC,GAE1B,O,6BAGJC,GACH,IAAK,IAAIhD,EAAE,EAAGA,EAAEtE,KAAKiH,QAAQ1F,OAAQ+C,IACjC,GAAItE,KAAKiH,QAAQ3C,GAAG/D,KAAO+G,EACvB,OAAO,EAGf,OAAmB,MAAftH,KAAKkH,QACElH,KAAKkH,OAAOE,OAAOE,K,mCAKrBA,GACT,IAAK,IAAIhD,EAAE,EAAGA,EAAEtE,KAAKiH,QAAQ1F,OAAQ+C,IACjC,GAAItE,KAAKiH,QAAQ3C,GAAG/D,KAAO+G,EACvB,OAAO,EAOf,OAAO,I,kCAGCrE,GACR,IAAK,IAAIsE,KAAKtE,EAAEgE,QACZjH,KAAKwH,UAAUD,K,kCAIXE,GACR,OAAKzH,KAAK0H,eAAeD,EAAIlH,MACzBP,KAAKgH,UAAU7F,KAAKsG,IACb,K,kCAQHJ,GACR,IAAK,IAAIM,EAAG,EAAGA,EAAE3H,KAAKgH,UAAUzF,OAAQoG,IACpC,GAAIN,IAASrH,KAAKgH,UAAUW,GAAGpH,GAC3B,OAAOP,KAAKgH,UAAUW,GAG9B,OAAO,O,qCAGIL,GACX,IAAK,IAAIK,EAAI,EAAGA,EAAG3H,KAAKgH,UAAUzF,OAAQoG,IACtC,GAAI3H,KAAKgH,UAAUW,GAAGpH,KAAO+G,EACzB,OAAO,EAGf,OAAO,M,KAIAR,a,0DC5GT1J,EAAO0C,EAAQ,GACf8H,EAAQ9H,EAAQ,GAEhB+H,E,WAEF,WAAYP,EAAKrE,EAAG6E,EAAItB,EAAMuB,GAAU,yBADxC/B,SAAW,GAEPhG,KAAK6D,MAAQyD,EACbtH,KAAKgF,KAAO/B,EACZjD,KAAK+F,SAAW+B,EAChB9H,KAAKiF,IAAMuB,EACXxG,KAAKkF,OAAS6C,E,oDAGVC,GACJ,IAAMC,EAAO,IAAIL,EACjB,GAAI5H,KAAK+F,UAAY3I,EAAKW,MAEtB,OAAQiC,KAAKgF,MACT,KAAK5H,EAAKc,OAGV,KAAKd,EAAKe,QAGV,KAAKf,EAAKmB,QACN,OAAO,IAAIsJ,EAAM7H,KAAK6D,MAAO7D,KAAKgF,KAAMhF,KAAK+F,SAAU/F,KAAKiF,IAAKjF,KAAKkF,QAE1E,KAAK9H,EAAKiB,OACN2B,KAAK6D,MAAQ7D,KAAK6D,MAAMqE,QAAQ,OAAQ,MACxClI,KAAK6D,MAAQ7D,KAAK6D,MAAMqE,QAAQ,OAAQ,MACxClI,KAAK6D,MAAQ7D,KAAK6D,MAAMqE,QAAQ,OAAQ,MACpClI,KAAK6D,MAAMsE,WAAWC,WAAW,OACjCpI,KAAK6D,MAAQ7D,KAAK6D,MAAMsE,WAAWE,UAAU,EAAGrI,KAAK6D,MAAMsE,WAAW5G,OAAS,IAEnFvB,KAAK6D,MAAQ7D,KAAK6D,MAAMsE,WAAWD,QAAQ,QAAS,KAGpD,IADA,IAAII,EAAML,EAAKtE,oBAAoBvG,EAAKQ,OAAOoC,KAAK6D,MAAM0E,WAAW,GAAG,GAChEjE,EAAI,EAAGA,EAAEtE,KAAK6D,MAAMtC,OAAQ+C,IAChC2D,EAAKtE,oBAAoBvG,EAAKQ,OAAOoC,KAAK6D,MAAM0E,WAAWjE,GAAG,GAGlE,OADA2D,EAAKtE,oBAAoBvG,EAAKQ,OAAO,EAAE,GAChC,IAAIiK,EAAMS,EAAKtI,KAAKgF,KAAMhF,KAAK+F,SAAU/F,KAAKiF,IAAKjF,KAAKkF,QAEnE,KAAK9H,EAAKgB,KACN,OAAiB,GAAd4B,KAAK6D,MACG,IAAIgE,EAAM,EAAG7H,KAAKgF,KAAMhF,KAAK+F,SAAU/F,KAAKiF,IAAKjF,KAAKkF,QAE1D,IAAI2C,EAAM,EAAG7H,KAAKgF,KAAMhF,KAAK+F,SAAU/F,KAAKiF,IAAKjF,KAAKkF,QACjE,KAAK9H,EAAKkB,KACN,OAAO,IAAIuJ,EAAM,OAAQzK,EAAKkB,KAAMlB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QACnE,KAAK9H,EAAKa,SACN,IAAIuK,EAAMxI,KAAK6D,MAAMqE,QAAQ,KAAK,IAElC,MAAmB,QAAhBO,OAAOD,GACC,IAAIX,EAAM,GAAIzK,EAAKa,SAAUb,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAExD,IAAI2C,EADG,QAARW,EACW,EACH,QAARA,EACW,EAEJA,EAAID,WAAW,GAJRnL,EAAKa,SAAUb,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAKtE,KAAK9H,EAAKuC,GAEN,GADQqI,EAAIZ,OAAOpH,KAAK6D,OACjB,CACH,IAAIxB,EAAI2F,EAAI5C,UAAUpF,KAAK6D,OACrB3C,EAAMlB,KAAK4H,MAAM1E,kBACjBwF,EAAO1I,KAAK4H,MAAM1E,kBACpBb,EAAE2D,UAAY5I,EAAKQ,OACnBoC,KAAK4H,MAAMzE,eAAejC,EAAM,WAAamB,EAAEnB,IAAM,OAErDlB,KAAK4H,MAAMzE,eAAeuF,EAAO,UAAYrG,EAAE8D,QAAU,KACzDnG,KAAK4H,MAAMzE,eAAejC,EAAM,YAAcwH,EAAO,OAEzD,IAAInB,EAAI,IAAIM,EAAM3G,EAAKmB,EAAE2C,KAAM3C,EAAE0D,SAAU1D,EAAE4C,IAAK5C,EAAE6C,QAEpD,OADAqC,EAAEvB,SAAW3D,EAAE2D,SACRuB,EAMP,OAFAvH,KAAK4H,MAAM7C,SAAS3H,EAAKG,UAAW,YAAcyC,KAAK6D,MAAQ,kBAAmB7D,KAAKiF,IAAKjF,KAAKkF,QAE1F,KAEf,QAGI,OADAlF,KAAK4H,MAAM7C,SAAS3H,EAAKG,UAAW,QAAUyC,KAAKgF,KAAO,cAAehF,KAAKiF,IAAKjF,KAAKkF,QACjF,IAAI2C,EAAM,KAAMzK,EAAKuL,MAAOvL,EAAKuL,MAAO3I,KAAKiF,IAAKjF,KAAKkF,a,KAoBnE2C,a,sEC1GTD,EAAQ9H,EAAQ,GAChB8I,EAAS9I,EAAQ,IACjB+H,EAAQ/H,EAAQ,IAChB1C,EAAO0C,EAAQ,GAGf+I,E,WACF,WAAYjD,EAAKkD,EAAQvD,EAAOC,EAAWC,EAAWC,EAASC,EAASL,EAAQkB,EAAMuB,GAAU,oBAC5F/H,KAAKO,GAAKqF,EACV5F,KAAK6D,MAAQiF,EACb9I,KAAKgF,KAAOO,EACZvF,KAAK+F,SAAWP,EAChBxF,KAAKgG,SAAWP,EAChBzF,KAAKiG,OAASP,EACd1F,KAAKkG,OAASP,EACd3F,KAAKgE,MAAQsB,EACbtF,KAAKiF,IAAMuB,EACXxG,KAAKkF,OAAS6C,E,oDAGVC,GACJ,IAAMC,EAAO,IAAIL,EAGbmB,EAAS,KAEb,GAAkB,MAAd/I,KAAK6D,MAAe,CAQpB,GAPA7D,KAAK4H,MAAMzE,eAAe,+CAOZ,OAFV4F,EAHCC,MAAMC,QAAQjJ,KAAK6D,OAGX7D,KAAK6D,MAAM,GAAGqF,QAAQlB,GAFtBhI,KAAK6D,MAAMqF,QAAQlB,IAM5B,OADAC,EAAKlD,SAAS3H,EAAKG,UAAW,2DAA6DyC,KAAKO,GAAK,IAAKP,KAAKiF,IAAKjF,KAAKkF,QAClH,KAEX,GAAIlF,KAAKmJ,UAAUJ,EAAQd,GACvB,OAAO,KAGf,IAAK,IAAI3D,EAAI,EAAGA,EAAItE,KAAKO,GAAGgB,OAAQ+C,IAAK,CACrC,IAAI8E,GAAI,EAOR,GALIA,EADApJ,KAAKgG,UAAY5I,EAAKQ,OAClBoK,EAAIZ,OAAOpH,KAAKO,GAAG+D,IAEnB0D,EAAIqB,aAAarJ,KAAKO,GAAG+D,IAEjCtE,KAAK4H,MAAMzE,eAAe,4BAA8BnD,KAAKO,GAAG+D,IAClD,MAAVyE,EACA,OAAQ/I,KAAKgF,MACT,KAAK5H,EAAKe,QAGV,KAAKf,EAAKc,OACN6K,EAAS,IAAIlB,EAAM,KAAM,EAAG7H,KAAKgF,KAAMhF,KAAK+F,SAAU/F,KAAKgG,SAAUhG,KAAKgE,MAAOhE,KAAKiF,IAAKjF,KAAKkF,QAChG,MACJ,KAAK9H,EAAKkM,KACNP,EAAS,IAAIlB,EAAM,KAAM,KAAM7H,KAAKgF,KAAMhF,KAAK+F,SAAU/F,KAAKgG,SAAUhG,KAAKgE,MAAOhE,KAAKiF,IAAKjF,KAAKkF,QACnG,MACJ,KAAK9H,EAAKgB,KACN2K,EAAS,IAAIlB,EAAM,MAAM,EAAO7H,KAAKgF,KAAMhF,KAAK+F,SAAU/F,KAAKgG,SAAUhG,KAAKgE,MAAOhE,KAAKiF,IAAKjF,KAAKkF,QAIhH,GAAS,GAALkE,EAAY,CACZ,IAAI/G,EAAI4F,EAAKxF,kBACTvB,EAAM+G,EAAKtE,oBAAoB3D,KAAKgG,SAAU+C,EAAOlF,MAAOxB,GAChE2F,EAAIuB,gBAAgB,IAAIX,EAAO5I,KAAKgE,MAAO+E,EAAO/D,KAAM+D,EAAOhD,SAAU/F,KAAKgG,SAAUhG,KAAKiG,OAAQjG,KAAKkG,OAAQlG,KAAKO,GAAG+D,GAAIjC,EAAGnB,IAEjIlB,KAAK4H,MAAMvC,UAAUrF,KAAKgE,MAAO+E,EAAO/D,KAAM+D,EAAOhD,SAAU/F,KAAKgG,SAAUhG,KAAKiG,OAAQjG,KAAKkG,OAAQlG,KAAKO,GAAG+D,GAAIjC,EAAGnB,QAEvH+G,EAAKlD,SAAS3H,EAAKG,UAAW,eAAiByC,KAAKO,GAAG+D,GAAK,oCAAqCtE,KAAKiF,IAAKjF,KAAKkF,QAOxH,OAAO,O,gCAGDoC,EAAKW,GACX,OAAQjI,KAAKgF,MACT,KAAK5H,EAAKc,OACN,OAAIoJ,EAAItC,MAAQ5H,EAAKc,SAEVoJ,EAAItC,MAAQ5H,EAAKa,UACxBqJ,EAAItC,KAAO5H,EAAKc,QACT,IAEP+J,EAAKlD,SAAS3H,EAAKG,UAAW,wBAA0B+J,EAAItC,KAAO,6BAA8BhF,KAAKiF,IAAKjF,KAAKkF,SACzG,IAGf,KAAK9H,EAAKe,QACN,OAAImJ,EAAItC,MAAQ5H,EAAKe,UAEVmJ,EAAItC,MAAQ5H,EAAKc,QAGjBoJ,EAAItC,MAAQ5H,EAAKa,UAFxBqJ,EAAItC,KAAO5H,EAAKe,SACT,IAKP8J,EAAKlD,SAAS3H,EAAKG,UAAW,wBAA0B+J,EAAIkC,IAAM,6BAA8BxJ,KAAKiF,IAAKjF,KAAKkF,SACxG,IAGf,KAAK9H,EAAKa,SACN,GAAIqJ,EAAItC,MAAQ5H,EAAKa,SAEjB,OADAgK,EAAKlD,SAAS3H,EAAKG,UAAW,wBAA0B+J,EAAItC,KAAO,+BAAgChF,KAAKiF,IAAKjF,KAAKkF,SAC3G,EAGnB,OAAO,M,KAIA2D,O,+CCxHTY,EAAQ3J,EAAQ,GAChBgH,EAAchH,EAAQ,IACtB8I,EAAS9I,EAAQ,IACjB1C,EAAO0C,EAAQ,GAEf4J,E,WAEF,WAAYpE,EAAQC,EAAOC,EAAWG,EAASC,EAAKU,EAAQqD,EAAOpD,EAAOqD,EAAMpD,EAAMC,GAAO,oBACzFzG,KAAKgE,MAAQsB,EACbtF,KAAKgF,KAAOO,EACZvF,KAAK+F,SAAWP,EAChBxF,KAAKkG,OAASP,EACd3F,KAAKO,GAAKqF,EAEN5F,KAAK0G,MADK,MAAVJ,EACa,GAEAA,EAEjBtG,KAAK6J,KAAOF,EACZ3J,KAAK2G,KAAOJ,EACZvG,KAAKiF,IAAMuB,EACXxG,KAAKkF,OAASuB,EACdzG,KAAK2E,IAAMiF,EACX5J,KAAK8J,UAAY,K,yDAIjB9J,KAAK8J,UAAY,IAAIhD,EAAY,MAOjC,GADA9G,KAAK8J,UAAUP,gBAAgB,IAAIX,GAAQ,EAAG5I,KAAKgF,KAAMhF,KAAKwF,UAAWpI,EAAKI,MAAOJ,EAAKM,IAAKsC,KAAKkG,OAAQ,SAJnG,EACE,KAIO,MAAdlG,KAAK0G,MAEL,IAAK,IAAIpC,EAAI,EAAGA,EAAItE,KAAK0G,MAAMnF,OAAQ+C,IAInCtE,KAAK8J,UAAUP,gBAAgB,IAAIX,GAAQ,EAAG5I,KAAK0G,MAAMpC,GAAGU,KAAM5H,EAAKW,MAAOX,EAAKI,MAAOJ,EAAKM,IAAKsC,KAAKkG,OAAQlG,KAAK0G,MAAMpC,GAAG/D,GAAG,GAAI+D,EAAI,EAAG,O,8BAMjJ0D,GAEJ,IAAIL,EAAIK,EAAI5B,YAAYpG,KAAKO,IACzBqH,EAAQ,IAAI6B,EAChB,GAAS,MAAL9B,EAAW,CAGX,IAAIoC,EAAOnC,EAAMvE,eACjBuE,EAAM3G,WAAW8I,GACjBnC,EAAMzE,eAAe,wBAA0BnD,KAAKO,IACpDqH,EAAMzE,eAAe,QAAUnD,KAAK2E,IAAM,UAE1C3E,KAAKgE,MAAQ4D,EAAM1E,kBACnB0E,EAAMjF,cAGN3C,KAAK8J,UAAU5C,OAASc,EACxBhI,KAAK8J,UAAU9C,UAAYgB,EAAIhB,UAC/BY,EAAMzE,eAAe,8CACrB,IAAI6G,EAAKpC,EAAMnF,kBACXiG,EAAOd,EAAM9D,UAAU1G,EAAKI,MAAOwM,GAKvC,GAJApC,EAAMzE,eAAe,SAAWuF,EAAO,aAEvC1I,KAAK8J,UAAU7C,QAAQ,GAAGd,QAAU6D,EACpChK,KAAK8J,UAAU7C,QAAQ,GAAG/F,IAAMwH,EACd,MAAd1I,KAAK0G,MAEL,IAAK,IAAIpC,EAAI,EAAGA,EAAItE,KAAK0G,MAAMnF,OAAQ+C,IAAK,CACxCsD,EAAMzE,eAAe,iDAAmDmB,EAAI,IAC5E,IAAIjC,EAAIuF,EAAMnF,kBACVvB,EAAM0G,EAAM9D,UAAU1G,EAAKI,MAAO6E,GAEtCrC,KAAK8J,UAAU7C,QAAQ3C,EAAE,GAAG6B,QAAU9D,EACtCrC,KAAK8J,UAAU7C,QAAQ3C,EAAE,GAAGpD,IAAMA,EAG1C0G,EAAMzE,eAAe,qCACrB,IAASmB,EAAI,EAAGA,EAAItE,KAAK6J,KAAKtI,OAAQ+C,IAClCtE,KAAK6J,KAAKvF,GAAG4E,QAAQlJ,KAAK8J,WAC1BlC,EAAMzE,eAAe,IAqBzBnD,KAAK2G,KAAOiB,EAAMlF,cAAgB,EAElCkF,EAAMxG,eACNwG,EAAMzE,eAAe4G,EAAO,KAC5BnC,EAAMzE,eAAe,SACrByE,EAAMhF,gBACY,MAAd5C,KAAK0G,MACLkB,EAAMvB,YAAYrG,KAAKgE,MAAOhE,KAAKgF,KAAMhF,KAAK+F,SAAU/F,KAAKkG,OAAQlG,KAAKO,GAAIP,KAAK0G,MAAMnF,OAAQvB,KAAK2G,KAAM3G,KAAKiF,IAAKjF,KAAKkF,QAE3H0C,EAAMvB,YAAYrG,KAAKgE,MAAOhE,KAAKgF,KAAMhF,KAAK+F,SAAU/F,KAAKkG,OAAQlG,KAAKO,GAAI,EAAGP,KAAK2G,KAAM3G,KAAKiF,IAAKjF,KAAKkF,aAG/G0C,EAAM7C,SAAS3H,EAAKG,UAAW,iBAAmByC,KAAKO,GAAK,kBAAmBP,KAAKiF,IAAKjF,KAAKkF,QAGlG,OAAO,S,KAKAwE,O,8FC9HTtM,EAAO0C,EAAQ,GACf+H,EAAQ/H,EAAQ,IAChBmK,EAAOnK,EAAQ,GAEfoK,E,WACF,WAAYpH,EAAME,EAAOC,EAAG6E,EAAItB,EAAMuB,GAAU,oBAC5C/H,KAAKgF,KAAO/B,EACZjD,KAAKmK,UAAYrH,EACjB9C,KAAKoK,WAAapH,EAClBhD,KAAK+F,SAAW+B,EAChB9H,KAAKiF,IAAMuB,EACXxG,KAAKkF,OAAS6C,E,oDAGVC,GACJ,IAAIC,EAAO,IAAIgC,EACXI,EAAQ,KACRC,EAAQ,KAiBZ,GARuB,MAAnBtK,KAAKoK,aACLE,EAAQtK,KAAKoK,WAAWlB,QAAQlB,IAGd,MAAlBhI,KAAKmK,YACLE,EAAQrK,KAAKmK,UAAUjB,QAAQlB,IAGtB,MAATsC,GAA0B,MAATD,GACjB,GAAIA,EAAMtE,UAAY3I,EAAKW,OAASuM,EAAMvE,UAAY3I,EAAKW,OACnDsM,EAAMrF,MAAQ5H,EAAKgB,MAAQkM,EAAMtF,MAAQ5H,EAAKgB,KAAM,CACpD,GAAI,MAAQ4B,KAAKgF,KAAM,CACnB,IAAIuF,EAAKtC,EAAK5E,eACVI,EAAKwE,EAAK5E,eACVK,EAAKuE,EAAK/E,kBACd,OAAQlD,KAAKgF,MACT,KAAK5H,EAAKmC,IAqBN,OAjBA0I,EAAK9E,eAAe,MAAQkH,EAAMxG,MAAQ,eAAiB0G,EAAK,KAChEtC,EAAK9E,eAAe,MAAQmH,EAAMzG,MAAQ,eAAiB0G,EAAK,KAWhEtC,EAAK9E,eAAeO,WACpBuE,EAAK9E,eAAe,QAAUM,EAAK,KACnCwE,EAAK9E,eAAeoH,EAAK,KACzBtC,EAAK9E,eAAeO,WACpBuE,EAAK9E,eAAeM,EAAK,KAClB,IAAIoE,EAAMnE,EAAItG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC/D,KAAK9H,EAAKoC,GAoBN,OAjBAyI,EAAK9E,eAAe,MAAQkH,EAAMxG,MAAQ,eAAiB0G,EAAK,KAChEtC,EAAK9E,eAAe,MAAQmH,EAAMzG,MAAQ,eAAiB0G,EAAK,KAWhEtC,EAAK9E,eAAeO,WACpBuE,EAAK9E,eAAe,QAAUM,EAAK,KACnCwE,EAAK9E,eAAeoH,EAAK,KACzBtC,EAAK9E,eAAeO,WACpBuE,EAAK9E,eAAeM,EAAK,KAClB,IAAIoE,EAAMnE,EAAItG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC/D,KAAK9H,EAAKsC,IAmBN,OAhBAuI,EAAK9E,eAAe,MAAQkH,EAAMxG,MAAQ,OAASyG,EAAMzG,MAAQ,UAAY0G,EAAK,KAWlFtC,EAAK9E,eAAeO,WACpBuE,EAAK9E,eAAe,QAAUM,EAAK,KACnCwE,EAAK9E,eAAeoH,EAAK,KACzBtC,EAAK9E,eAAeO,WACpBuE,EAAK9E,eAAeM,EAAK,KAClB,IAAIoE,EAAMnE,EAAItG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,SAMvE+C,EAAKlD,SAAS3H,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAO,kCAAmChF,KAAKiF,IAAKjF,KAAKkF,cAGxI,GAAa,MAAToF,GAA0B,MAATD,EAAe,CACvC,GAAIA,EAAMtE,UAAY3I,EAAKW,OACnBiC,KAAKgF,MAAQ5H,EAAKqC,IAAK,CACnB8K,EAAKtC,EAAK5E,eACVI,EAAKwE,EAAK5E,eACVK,EAAKuE,EAAK/E,kBAed,OAdA+E,EAAK9E,eAAe,MAAQkH,EAAMxG,MAAQ,eAAiB0G,EAAK,KAEhEtC,EAAK9E,eAAeO,WACpBuE,EAAK9E,eAAe,QAAUM,EAAK,KACnCwE,EAAK9E,eAAeoH,EAAK,KACzBtC,EAAK9E,eAAeO,WACpBuE,EAAK9E,eAAeM,EAAK,KAQlB,IAAIoE,EAAMnE,EAAItG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAKnE+C,EAAKlD,SAAS3H,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAO,kCAAmChF,KAAKiF,IAAKjF,KAAKkF,QAEvI,OAAO,S,KAKAgF,a,sDCjJT9M,EAAO0C,EAAQ,GACf+H,EAAQ/H,EAAQ,IACf8H,EAAQ9H,EAAQ,GAEjB0K,E,WACF,WAAY1H,EAAME,EAAOC,EAAG6E,EAAItB,EAAMuB,GAAU,oBAC5C/H,KAAKgF,KAAO/B,EACZjD,KAAKmK,UAAYrH,EACjB9C,KAAKoK,WAAapH,EAClBhD,KAAK+F,SAAW+B,EAChB9H,KAAKiF,IAAMuB,EACXxG,KAAKkF,OAAS6C,E,oDAGVC,GACJ,IAAIC,EAAO,IAAIL,EACXyC,EAAQ,KACRC,EAAQ,KASZ,GARuB,MAAnBtK,KAAKoK,aACLE,EAAQtK,KAAKoK,WAAWlB,QAAQlB,IAGd,MAAlBhI,KAAKmK,YACLE,EAAQrK,KAAKmK,UAAUjB,QAAQlB,IAGtB,MAATsC,GAA0B,MAATD,GACbC,EAAMvE,UAAY3I,EAAKW,OAASsM,EAAMtE,UAAY3I,EAAKW,MAAO,CAC9D,GAAIsM,EAAMrF,MAAQ5H,EAAKc,QAAUoM,EAAMtF,MAAQ5H,EAAKc,OAChD,OAAI8B,KAAKgF,MAAQ5H,EAAK8B,SAIX,IAAI2I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QACvGlF,KAAKgF,MAAQ5H,EAAKgC,UAIlB,IAAIyI,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QACvGlF,KAAKgF,MAAQ5H,EAAK0B,MAGlB,IAAI+I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QACtGlF,KAAKgF,MAAQ5H,EAAK2B,MAIlB,IAAI8I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QACtGlF,KAAKgF,MAAQ5H,EAAK4B,WAIlB,IAAI6I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QACvGlF,KAAKgF,MAAQ5H,EAAK6B,WAIlB,IAAI4I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAE3G,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKc,QAAUoM,EAAMtF,MAAQ5H,EAAKe,QAAS,CAChE,GAAI6B,KAAKgF,MAAQ5H,EAAK8B,SAElB,OAAO,IAAI2I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAKgC,UAEzB,OAAO,IAAIyI,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAK0B,MAEzB,OAAO,IAAI+I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAK2B,MAEzB,OAAO,IAAI8I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAK4B,WAEzB,OAAO,IAAI6I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAK6B,WAEzB,OAAO,IAAI4I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,aAEhH,GAAImF,EAAMrF,MAAQ5H,EAAKe,SAAWmM,EAAMtF,MAAQ5H,EAAKc,OAAQ,CAChE,GAAI8B,KAAKgF,MAAQ5H,EAAK8B,SAElB,OAAO,IAAI2I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAKgC,UAEzB,OAAO,IAAIyI,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAK0B,MAEzB,OAAO,IAAI+I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAK2B,MAEzB,OAAO,IAAI8I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAK4B,WAEzB,OAAO,IAAI6I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAK6B,WAEzB,OAAO,IAAI4I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,aAEhH,GAAImF,EAAMrF,MAAQ5H,EAAKc,QAAUoM,EAAMtF,MAAQ5H,EAAKa,SAAU,CACjE,GAAI+B,KAAKgF,MAAQ5H,EAAK8B,SAElB,OAAO,IAAI2I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAKgC,UAEzB,OAAO,IAAIyI,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAK0B,MAEzB,OAAO,IAAI+I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAK2B,MAEzB,OAAO,IAAI8I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAK4B,WAEzB,OAAO,IAAI6I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAK6B,WAEzB,OAAO,IAAI4I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,aAEhH,GAAImF,EAAMrF,MAAQ5H,EAAKa,UAAYqM,EAAMtF,MAAQ5H,EAAKc,OAAQ,CACjE,GAAI8B,KAAKgF,MAAQ5H,EAAK8B,SAElB,OAAO,IAAI2I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAKgC,UAEzB,OAAO,IAAIyI,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAK0B,MAEzB,OAAO,IAAI+I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAK2B,MAEzB,OAAO,IAAI8I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAK4B,WAEzB,OAAO,IAAI6I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAK6B,WAEzB,OAAO,IAAI4I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,aAEhH,GAAImF,EAAMrF,MAAQ5H,EAAKe,SAAWmM,EAAMtF,MAAQ5H,EAAKa,SAAU,CAClE,GAAI+B,KAAKgF,MAAQ5H,EAAK8B,SAElB,OAAO,IAAI2I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAKgC,UAEzB,OAAO,IAAIyI,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAK0B,MAEzB,OAAO,IAAI+I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC1G,GAAIlF,KAAKgF,MAAQ5H,EAAK2B,MAEzB,OAAO,IAAI8I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC1G,GAAIlF,KAAKgF,MAAQ5H,EAAK4B,WAEzB,OAAO,IAAI6I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAK6B,WAEzB,OAAO,IAAI4I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,aAE/G,GAAImF,EAAMrF,MAAQ5H,EAAKa,UAAYqM,EAAMtF,MAAQ5H,EAAKe,QAAS,CAClE,GAAI6B,KAAKgF,MAAQ5H,EAAK8B,SAElB,OAAO,IAAI2I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAKgC,UAEzB,OAAO,IAAIyI,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAK0B,MAEzB,OAAO,IAAI+I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC1G,GAAIlF,KAAKgF,MAAQ5H,EAAK2B,MAEzB,OAAO,IAAI8I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC1G,GAAIlF,KAAKgF,MAAQ5H,EAAK4B,WAEzB,OAAO,IAAI6I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAK6B,WAEzB,OAAO,IAAI4I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,aAE/G,GAAImF,EAAMrF,MAAQ5H,EAAKe,SAAWmM,EAAMtF,MAAQ5H,EAAKe,QAAS,CACjE,GAAI6B,KAAKgF,MAAQ5H,EAAK8B,SAElB,OAAO,IAAI2I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAKgC,UAEzB,OAAO,IAAIyI,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAK0B,MAEzB,OAAO,IAAI+I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC1G,GAAIlF,KAAKgF,MAAQ5H,EAAK2B,MAEzB,OAAO,IAAI8I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC1G,GAAIlF,KAAKgF,MAAQ5H,EAAK4B,WAEzB,OAAO,IAAI6I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAK6B,WAEzB,OAAO,IAAI4I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,aAE/G,GAAImF,EAAMrF,MAAQ5H,EAAKa,UAAYqM,EAAMtF,MAAQ5H,EAAKa,SAAU,CACnE,GAAI+B,KAAKgF,MAAQ5H,EAAK8B,SAElB,OAAO,IAAI2I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAKgC,UAEzB,OAAO,IAAIyI,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAK0B,MAEzB,OAAO,IAAI+I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAK2B,MAEzB,OAAO,IAAI8I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAK4B,WAEzB,OAAO,IAAI6I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAK6B,WAEzB,OAAO,IAAI4I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,aAEhH,GAAImF,EAAMrF,MAAQ5H,EAAKiB,QAAUiM,EAAMtF,MAAQ5H,EAAKiB,OAAQ,CAC/D,GAAI2B,KAAKgF,MAAQ5H,EAAK8B,SAElB,OAAO,IAAI2I,EAAMD,EAAMrE,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAKgC,UAEzB,OAAO,IAAIyI,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC3G,GAAIlF,KAAKgF,MAAQ5H,EAAK+B,UAEzB,OAAO,IAAI0I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,IAAKyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,aAE9G,GAAImF,EAAMrF,MAAQ5H,EAAKgB,MAAQkM,EAAMtF,MAAQ5H,EAAKgB,KAAM,CAC3D,GAAI4B,KAAKgF,MAAQ5H,EAAK8B,SAElB,OAAO,IAAI2I,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAO,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC5G,GAAIlF,KAAKgF,MAAQ5H,EAAKgC,UAEzB,OAAO,IAAIyI,EAAMI,EAAK1E,kBAAkB8G,EAAMxG,MAAM,KAAMyG,EAAMzG,OAAQzG,EAAKgB,KAAMhB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,SAO9H,OADA+C,EAAKlD,SAAS3H,EAAKG,UAAU,0BAA0ByC,KAAKgF,KAAKhF,KAAKiF,IAAIjF,KAAKkF,QACxE,S,KAMAsF,a,sDC1PTpN,EAAO0C,EAAQ,GACf+H,EAAQ/H,EAAQ,IAChB2J,EAAQ3J,EAAQ,GAGhB2K,E,WAEF,WAAY3H,EAAME,EAAOC,EAAG6E,EAAItB,EAAMuB,GAAU,oBAC5C/H,KAAKgF,KAAO/B,EACZjD,KAAKmK,UAAYrH,EACjB9C,KAAKoK,WAAapH,EAClBhD,KAAK+F,SAAW+B,EAChB9H,KAAKiF,IAAMuB,EACXxG,KAAKkF,OAAS6C,E,oDAGVC,GACJ,IAAIqC,EAAQ,KACRC,EAAQ,KAmBZ,GAlBuB,MAAnBtK,KAAKoK,aAIDE,EAHCtK,KAAKoK,sBAAsBpB,MAGpBhJ,KAAKoK,WAAW,GAAGlB,QAAQlB,GAF3BhI,KAAKoK,WAAWlB,QAAQlB,IAOlB,MAAlBhI,KAAKmK,YAIDE,EAHCrK,KAAKmK,qBAAqBnB,MAGnBhJ,KAAKmK,UAAU,GAAGjB,QAAQlB,GAF1BhI,KAAKmK,UAAUjB,QAAQlB,IAO1B,MAATsC,GAA0B,MAATD,EAAe,CAChC,IAAIzC,EAAQ,IAAI6B,EAChB,GAAIa,EAAMvE,UAAY3I,EAAKW,OAASsM,EAAMtE,UAAY3I,EAAKW,MAAO,CAC9D,GAAIsM,EAAMrF,MAAQ5H,EAAKc,QAAUoM,EAAMtF,MAAQ5H,EAAKc,OAAQ,CACxD,GAAI,MAAQ8B,KAAKgF,KACb,OAAQhF,KAAKgF,MACT,KAAK5H,EAAKoB,KAEN,IAAIgK,EAAMZ,EAAM/E,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAC5D,OAAO,IAAIgE,EAAMW,EAAKpL,EAAKc,OAAQd,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAClE,KAAK9H,EAAKqB,MAEF+J,EAAMZ,EAAM/E,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAC5D,OAAO,IAAIgE,EAAMW,EAAKpL,EAAKc,OAAQd,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAClE,KAAK9H,EAAKsB,eAEF8J,EAAMZ,EAAM/E,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAC5D,OAAO,IAAIgE,EAAMW,EAAKpL,EAAKc,OAAQd,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAClE,KAAK9H,EAAKuB,SAEF6J,EAAMZ,EAAM/E,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAC5D,OAAO,IAAIgE,EAAMW,EAAKpL,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QACnE,KAAK9H,EAAKyB,SAEN,IAAI6L,EAAM9C,EAAM/E,oBAAoBwH,EAAMxG,MAAM,GAAI,IAChD8G,EAAM/C,EAAM/E,oBAAoByH,EAAMzG,MAAM,GAAI,IAChD+G,EAAIhD,EAAM/E,oBAAoB6H,EAAI,GAAI,IACtCG,EAAQjD,EAAMvE,eACdyH,EAASlD,EAAMvE,eAOnB,OANAuE,EAAMzE,eAAe0H,EAAM,KAC3BjD,EAAMzE,eAAe,SAASwH,EAAI,UAAUG,EAAO,KACnDlD,EAAMzE,eAAeyH,EAAE,MAAMA,EAAE,MAAMF,EAAI,KACzC9C,EAAMzE,eAAewH,EAAI,MAAMA,EAAI,SACnC/C,EAAMzE,eAAe,QAAQ0H,EAAM,KACnCjD,EAAMzE,eAAe2H,EAAO,KACrB,IAAIjD,EAAM+C,EAAGxN,EAAKc,OAAQd,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAChE,KAAK9H,EAAKwB,OAEF4J,EAAMZ,EAAM/E,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAC5D,OAAO,IAAIgE,EAAMW,EAAKpL,EAAKc,OAAQd,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAClE,QAEc0C,EAAM7C,SAAS3H,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAO,kCAAmChF,KAAKiF,IAAKjF,KAAKkF,QAI1J,OAAO,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKc,QAAUoM,EAAMtF,MAAQ5H,EAAKe,QAAS,CAChE,GAAI,MAAQ6B,KAAKgF,KACb,OAAQhF,KAAKgF,MACT,KAAK5H,EAAKoB,KAEN,OAAO,IAAIqJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,KAAK9H,EAAKqB,MAEN,OAAO,IAAIoJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,KAAK9H,EAAKsB,eAEN,OAAO,IAAImJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,KAAK9H,EAAKuB,SAEN,OAAO,IAAIkJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,SACc,IAAIuE,GAAQ1E,SAAS3H,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAKmD,WAAa,kCAAmCnI,KAAKiF,IAAKjF,KAAKkF,QAI3K,OAAO,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKe,SAAWmM,EAAMtF,MAAQ5H,EAAKc,OAAQ,CAChE,GAAI,MAAQ8B,KAAKgF,KACb,OAAQhF,KAAKgF,MACT,KAAK5H,EAAKoB,KAEN,OAAO,IAAIqJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,KAAK9H,EAAKqB,MAEN,OAAO,IAAIoJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,KAAK9H,EAAKsB,eAEN,OAAO,IAAImJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,KAAK9H,EAAKuB,SAEN,OAAO,IAAIkJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,SACc,IAAIuE,GAAQ1E,SAAS3H,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAKmD,WAAa,kCAAmCnI,KAAKiF,IAAKjF,KAAKkF,QAI3K,OAAO,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKc,QAAUoM,EAAMtF,MAAQ5H,EAAKa,SAAU,CACjE,GAAI,MAAQ+B,KAAKgF,KACb,OAAQhF,KAAKgF,MACT,KAAK5H,EAAKoB,KAEN,OAAO,IAAIqJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKc,OAAQd,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC7H,KAAK9H,EAAKqB,MAEN,OAAO,IAAIoJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKc,OAAQd,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC7H,KAAK9H,EAAKsB,eAEN,OAAO,IAAImJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKc,OAAQd,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC7H,KAAK9H,EAAKuB,SAEN,OAAO,IAAIkJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,SACc,IAAIuE,GAAQ1E,SAAS3H,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAKmD,WAAa,kCAAmCnI,KAAKiF,IAAKjF,KAAKkF,QAI3K,OAAO,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKa,UAAYqM,EAAMtF,MAAQ5H,EAAKc,OAAQ,CACjE,GAAI,MAAQ8B,KAAKgF,KACb,OAAQhF,KAAKgF,MACT,KAAK5H,EAAKoB,KAEN,OAAO,IAAIqJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKc,OAAQd,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC7H,KAAK9H,EAAKqB,MAEN,OAAO,IAAIoJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKc,OAAQd,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC7H,KAAK9H,EAAKsB,eAEN,OAAO,IAAImJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKc,OAAQd,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC7H,KAAK9H,EAAKuB,SAEN,OAAO,IAAIkJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,SACc,IAAIuE,GAAQ1E,SAAS3H,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAKmD,WAAa,kCAAmCnI,KAAKiF,IAAKjF,KAAKkF,QAI3K,OAAO,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKc,QAAUoM,EAAMtF,MAAQ5H,EAAKiB,OAAQ,CAC/D,GAAI,MAAQ2B,KAAKgF,KACb,OAAQhF,KAAKgF,MACT,KAAK5H,EAAKoB,KAEN,OAAO,IAAIqJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,SACc,IAAIuE,GAAQ1E,SAAS3H,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAKmD,WAAa,kCAAmCnI,KAAKiF,IAAKjF,KAAKkF,QAI3K,OAAO,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKiB,QAAUiM,EAAMtF,MAAQ5H,EAAKc,OAAQ,CAC/D,GAAI,MAAQ8B,KAAKgF,KACb,OAAQhF,KAAKgF,MACT,KAAK5H,EAAKoB,KAEN,OAAO,IAAIqJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,SACc,IAAIuE,GAAQ1E,SAAS3H,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAKmD,WAAa,kCAAmCnI,KAAKiF,IAAKjF,KAAKkF,QAI3K,OAAO,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKe,SAAWmM,EAAMtF,MAAQ5H,EAAKiB,OAAQ,CAChE,GAAI2B,KAAKgF,MAAQ5H,EAAKoB,KAElB,OAAO,IAAIqJ,EAAMwC,EAAMxG,MAAQyG,EAAMzG,MAAMsE,WAAY/K,EAAKiB,OAAQjB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAGzF,IAAIuE,EAAMrM,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAKmD,WAAa,kCAAmCnI,KAAKiF,IAAKjF,KAAKkF,QACpJ,OAAO,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKiB,QAAUiM,EAAMtF,MAAQ5H,EAAKe,QAAS,CAChE,GAAI6B,KAAKgF,MAAQ5H,EAAKoB,KAElB,OAAO,IAAIqJ,EAAMwC,EAAMxG,MAAQyG,EAAMzG,MAAMsE,WAAY/K,EAAKiB,OAAQjB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAGzF,IAAIuE,EAAMrM,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAKmD,WAAa,kCAAmCnI,KAAKiF,IAAKjF,KAAKkF,QACpJ,OAAO,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKe,SAAWmM,EAAMtF,MAAQ5H,EAAKa,SAAU,CAClE,GAAI,MAAQ+B,KAAKgF,KACb,OAAQhF,KAAKgF,MACT,KAAK5H,EAAKoB,KAEN,OAAO,IAAIqJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,KAAK9H,EAAKqB,MAEN,OAAO,IAAIoJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,KAAK9H,EAAKsB,eAEN,OAAO,IAAImJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,KAAK9H,EAAKuB,SAEN,OAAO,IAAIkJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,SAEc,IAAIuE,GAAQ1E,SAAS3H,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAKmD,WAAa,kCAAmCnI,KAAKiF,IAAKjF,KAAKkF,QAI3K,OAAO,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKa,UAAYqM,EAAMtF,MAAQ5H,EAAKe,QAAS,CAClE,GAAI,MAAQ6B,KAAKgF,KACb,OAAQhF,KAAKgF,MACT,KAAK5H,EAAKoB,KAEN,OAAO,IAAIqJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,KAAK9H,EAAKqB,MAEN,OAAO,IAAIoJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,KAAK9H,EAAKsB,eAEN,OAAO,IAAImJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,KAAK9H,EAAKuB,SAEN,OAAO,IAAIkJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,SAEc,IAAIuE,GAAQ1E,SAAS3H,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAKmD,WAAa,kCAAmCnI,KAAKiF,IAAKjF,KAAKkF,QAI3K,OAAO,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKe,SAAWmM,EAAMtF,MAAQ5H,EAAKe,QAAS,CACjE,GAAI,MAAQ6B,KAAKgF,KACb,OAAQhF,KAAKgF,MACT,KAAK5H,EAAKoB,KAEN,OAAO,IAAIqJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,KAAK9H,EAAKqB,MAEN,OAAO,IAAIoJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,KAAK9H,EAAKsB,eAEN,OAAO,IAAImJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,KAAK9H,EAAKuB,SAEN,OAAO,IAAIkJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,SAEc,IAAIuE,GAAQ1E,SAAS3H,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAKmD,WAAa,kCAAmCnI,KAAKiF,IAAKjF,KAAKkF,QAI3K,OAAO,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKa,UAAYqM,EAAMtF,MAAQ5H,EAAKa,SAAU,CACnE,GAAI,MAAQ+B,KAAKgF,KACb,OAAQhF,KAAKgF,MACT,KAAK5H,EAAKoB,KAEN,OAAO,IAAIqJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKiB,OAAQjB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC7H,KAAK9H,EAAKqB,MAEN,OAAO,IAAIoJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKc,OAAQd,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC7H,KAAK9H,EAAKsB,eAEN,OAAO,IAAImJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKc,OAAQd,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC7H,KAAK9H,EAAKuB,SAEN,OAAO,IAAIkJ,GAAM,IAAI4B,GAAQ5G,oBAAoBwH,EAAMxG,MAAO,IAAKyG,EAAMzG,OAAQzG,EAAKe,QAASf,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAC9H,SAEc,IAAIuE,GAAQ1E,SAAS3H,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAKmD,WAAa,kCAAmCnI,KAAKiF,IAAKjF,KAAKkF,QAI3K,OAAO,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKa,UAAYqM,EAAMtF,MAAQ5H,EAAKiB,OAAQ,CACjE,GAAI2B,KAAKgF,MAAQ5H,EAAKoB,KAElB,OAAO,IAAIqJ,EAAMwC,EAAMxG,MAAQyG,EAAMzG,MAAMsE,WAAY/K,EAAKiB,OAAQjB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAGzF,IAAIuE,EAAMrM,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAKmD,WAAa,kCAAmCnI,KAAKiF,IAAKjF,KAAKkF,QACpJ,OAAO,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKiB,QAAUiM,EAAMtF,MAAQ5H,EAAKa,SAAU,CACjE,GAAI+B,KAAKgF,MAAQ5H,EAAKoB,KAElB,OAAO,IAAIqJ,EAAMwC,EAAMxG,MAAQyG,EAAMzG,MAAMsE,WAAY/K,EAAKiB,OAAQjB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,QAGzF,IAAIuE,EAAMrM,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAKmD,WAAa,kCAAmCnI,KAAKiF,IAAKjF,KAAKkF,QACpJ,OAAO,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKiB,QAAUiM,EAAMtF,MAAQ5H,EAAKiB,OAAQ,CAC/D,GAAI2B,KAAKgF,MAAQ5H,EAAKoB,KAElB,OAAO,IAAIqJ,EAAMwC,EAAMxG,MAAMsE,WAAamC,EAAMzG,MAAMsE,WAAY/K,EAAKiB,OAAQjB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,SAGpG,IAAIuE,GAAQ1E,SAAS3H,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAKmD,WAAa,kCAAmCnI,KAAKiF,IAAKjF,KAAKkF,QAC/J,OAAO,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKiB,QAAUiM,EAAMtF,MAAQ5H,EAAKgB,KAAM,CAC7D,GAAI4B,KAAKgF,MAAQ5H,EAAKoB,KAElB,OAAO,IAAIqJ,EAAMwC,EAAMxG,MAAMsE,WAAamC,EAAMzG,MAAMsE,WAAY/K,EAAKiB,OAAQjB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,SAGpG,IAAIuE,GAAQ1E,SAAS3H,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAKmD,WAAa,kCAAmCnI,KAAKiF,IAAKjF,KAAKkF,QAC/J,OAAO,KACJ,GAAImF,EAAMrF,MAAQ5H,EAAKgB,MAAQkM,EAAMtF,MAAQ5H,EAAKiB,OAAQ,CAC7D,GAAI2B,KAAKgF,MAAQ5H,EAAKoB,KAElB,OAAO,IAAIqJ,EAAMwC,EAAMxG,MAAMsE,WAAamC,EAAMzG,MAAMsE,WAAY/K,EAAKiB,OAAQjB,EAAKW,MAAOiC,KAAKiF,IAAKjF,KAAKkF,SAGpG,IAAIuE,GAAQ1E,SAAS3H,EAAKG,UAAW,qCAAuCyC,KAAKgF,KAAKmD,WAAa,kCAAmCnI,KAAKiF,IAAKjF,KAAKkF,QAC/J,OAAO,QAIT,IAAIuE,GAAQ1E,SAAS3H,EAAKG,UAAW,yCAA0CyC,KAAKiF,IAAKjF,KAAKkF,QACxG,OAAO,S,KAKAuF,a,+CC1UA7B,UAbX,WAAYtD,EAAQC,EAAOC,EAAWC,EAAYC,EAASC,EAASC,EAAKC,EAASC,GAAM,oBACpF9F,KAAKgF,KAAOO,EACZvF,KAAK+F,SAAWP,EAChBxF,KAAKgG,SAAWP,EAChBzF,KAAKiG,OAASP,EACd1F,KAAKkG,OAASP,EACd3F,KAAKO,GAAKqF,EACV5F,KAAKgE,MAAQsB,EACbtF,KAAKmG,QAAUN,EACf7F,KAAKkB,IAAM4E,I,kCCXnB,oNAoGWiF,EAAc,WACzB,IAAIC,EAAE,SAASC,EAAEC,EAAEF,EAAEJ,GAAG,IAAII,EAAEA,GAAG,GAAGJ,EAAEK,EAAE1J,OAAOqJ,IAAII,EAAEC,EAAEL,IAAIM,GAAG,OAAOF,GAAGG,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,GAAG,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,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","file":"static/js/main.7f6e6f9a.chunk.js","sourcesContent":["const Type = {\r\n    LEXICO: 'LEXICO',\r\n    SINTACTICO: 'SINTACTICO',\r\n    SEMANTICO: 'SEMANTICO',\r\n    LOCAL: 'LOCAL',\r\n    VOID: 'VOID',\r\n    VAR: 'VAR',\r\n    CONST: 'CONST',\r\n    GLOBAL: 'GLOBAL',\r\n    OBJETO: 'OBJETO',\r\n    PRIMITIVO: 'PRIMITIVO',\r\n    VALOR: 'VALOR',\r\n    VECTOR: 'VECTOR',\r\n    CARACTER: 'CARACTER',\r\n    ENTERO: 'ENTERO',\r\n    DECIMAL: 'DECIMAL',\r\n    BOOL: 'BOOL',\r\n    CADENA: 'CADENA',\r\n    NULL: 'NULL',\r\n    DEFAULT: 'DEFAULT',\r\n    SUMA: 'SUMA',\r\n    RESTA: 'RESTA',\r\n    MULTIPLICACION: 'MULTIPLICACION',\r\n    DIVISION: 'DIVISION',\r\n    MODULO: 'MODULO',\r\n    POTENCIA: 'POTENCIA',\r\n    MAYOR: 'MAYOR',\r\n    MENOR: 'MENOR',\r\n    MAYORIGUAL: 'MAYORIGUAL',\r\n    MENORIGUAL: 'MENORIGUAL',\r\n    IDENTICO: 'IDENTICO',\r\n    REFERECIA: 'REFERENCIA',\r\n    DIFERENTE: 'DIFERENTE',\r\n    INCREMENTO: 'INCREMENTO',\r\n    DECREMENTO: 'DECREMENTO',\r\n    AND: 'AND',\r\n    OR: 'OR',\r\n    NOT: 'NOT',\r\n    XOR: 'XOR',\r\n    ID: 'ID',\r\n    ACCESS: 'ACESS',\r\n    LLAMADA: 'LLAMADA'\r\n}\r\n\r\nexport default Type;","const Type = require('./Type');\r\n\r\nfunction Counter() {\r\n\r\n    this.clearAll = function () {\r\n        Counter.temporals = 0;\r\n        Counter.labels = 0;\r\n        Counter.output = '';\r\n        Counter.errors = '';\r\n        Counter.exitret = [];\r\n        Counter.id = 0;\r\n        Counter.p = 0;\r\n        Counter.h = 0;\r\n        Counter.relative = [];\r\n        Counter.inits = [];\r\n        Counter.finals = [];\r\n        Counter.Rsymbol = [];\r\n        Counter.Rerror = [];\r\n        Counter.Rfunction = [];\r\n        Counter.tagsvf = [];\r\n    }\r\n\r\n    this.setExitRet = function (tag) {\r\n        Counter.exitret.push(tag);\r\n    }\r\n\r\n    this.clearExitRet = function () {\r\n        Counter.exitret.pop();\r\n    }\r\n\r\n    this.getExitRet = function () {\r\n        return Counter.exitret[Counter.exitret.length - 1];\r\n    }\r\n\r\n    this.getLastFinal = function () {\r\n        return Counter.finals[Counter.finals.length - 1];\r\n    }\r\n\r\n    this.getLengthFinal = function () {\r\n        return Counter.finals.length;\r\n    }\r\n\r\n    this.pushFinal = function (tag) {\r\n        Counter.finals.push(tag);\r\n    }\r\n\r\n    this.popFinal = function (tag) {\r\n        Counter.finals.pop();\r\n    }\r\n\r\n    this.pushTagsvf = function (tag) {\r\n        Counter.tagsvf.push(tag);\r\n    }\r\n\r\n    this.popTagsvf = function () {\r\n        Counter.tagsvf.pop();\r\n    }\r\n\r\n    this.getTagsvf = function () {\r\n        return Counter.tagsvf[Counter.tagsvf.length-1];\r\n    }\r\n\r\n    this.getTagsSize = function () {\r\n        return Counter.tagsvf.length;\r\n    }\r\n\r\n    this.getLastInit = function () {\r\n        return Counter.inits[Counter.inits.length - 1];\r\n    }\r\n\r\n    this.getLengthInit = function () {\r\n        return Counter.inits.length;\r\n    }\r\n\r\n    this.pushInit = function (tag) {\r\n        Counter.inits.push(tag);\r\n    }\r\n\r\n    this.popInit = function (tag) {\r\n        Counter.inits.pop();\r\n    }\r\n\r\n    this.getPPlus = function () {\r\n        const r = Counter.p;\r\n        Counter.p++\r\n        return r;\r\n    }\r\n\r\n    this.getHPlus = function () {\r\n        const r = Counter.h;\r\n        Counter.h++;\r\n        return r;\r\n    }\r\n\r\n    this.getP = function () {\r\n        return Counter.p;\r\n    }\r\n\r\n    this.getH = function () {\r\n        return Counter.h;\r\n    }\r\n\r\n    this.getRelativePlus = function () {\r\n        const r = Counter.relative[Counter.relative.length - 1];\r\n        Counter.relative[Counter.relative.length - 1]++;\r\n        return r;\r\n    }\r\n\r\n    this.getRelative = function () {\r\n        return Counter.relative[Counter.relative.length - 1];\r\n    }\r\n\r\n    this.newRelative = function () {\r\n        Counter.relative.push(0);\r\n    }\r\n\r\n    this.resetRelative = function () {\r\n        Counter.relative.pop();\r\n    }\r\n\r\n    this.generateInstruction = function (left, op, right) {\r\n        var t = this.getNextTemporal();\r\n        this.putInstruction(t + ' = ' + left + ' ' + op + ' ' + right + ';');\r\n        return t;\r\n    }\r\n\r\n    this.generateIf = function (left, op, right) {\r\n        var t = this.getNextLabel();\r\n        this.putInstruction('if(' + right + ' ' + op + ' ' + left + ') goto ' + t + ';');\r\n        return t;\r\n    }\r\n\r\n    this.generateIf2 = function (left, op, right, t) {\r\n        //var t = this.getNextLabel();\r\n        this.putInstruction('if(' + right + ' ' + op + ' ' + left + ') goto ' + t + ';');\r\n\r\n    }\r\n\r\n    this.operateRelational = function (left, op, right) {\r\n        var tv = this.getNextLabel();\r\n        var to = this.getNextLabel();\r\n        var t1 = this.getNextTemporal();\r\n        this.putInstruction('if(' + left + ' ' + op + ' ' + right + ') goto ' + tv + ';');\r\n        this.putInstruction(t1 + ' = 0;');\r\n        this.putInstruction('goto ' + to + ';');\r\n        this.putInstruction(tv + ':');\r\n        this.putInstruction(t1 + ' = 1;');\r\n        this.putInstruction(to + ':');\r\n        return t1;\r\n    }\r\n\r\n    this.generateDeclaration = function (tipo, value, relative) {\r\n        var t = this.getNextTemporal();\r\n        if (Type.GLOBAL == tipo) {\r\n            this.putInstruction(t + ' = H;');\r\n            this.putInstruction('H = H + 1;');\r\n            //Counter.tempor++;\r\n            this.putInstruction('heap[' + t + '] = ' + value + ';')\r\n        } else {\r\n\r\n            this.putInstruction(t + ' = P + ' + relative + ';');\r\n            this.putInstruction('stack[' + t + '] = ' + value + ';')\r\n        }\r\n        return t;\r\n    }\r\n\r\n    this.paramFunc = function (tipo, relative) {\r\n        var t = this.getNextTemporal();\r\n        if (Type.GLOBAL == tipo) {\r\n            this.putInstruction(t + ' = H;');\r\n            this.putInstruction('H = H + 1;');\r\n        } else {\r\n\r\n            this.putInstruction(t + ' = P + ' + relative + ';');\r\n        }\r\n        return t;\r\n    }\r\n\r\n    this.paramCall = function (tipo, ambit, value, relative) {\r\n        var t = this.getNextTemporal();\r\n        if (Type.GLOBAL == tipo) {\r\n            this.putInstruction(t + ' = H;');\r\n            this.putInstruction('H = H + 1;');\r\n            //Counter.tempor++;\r\n            this.putInstruction('heap[' + t + '] = ' + value + ';')\r\n        } else {\r\n\r\n            this.putInstruction(t + ' = ' + ambit + ' + ' + relative + ';');\r\n            this.putInstruction('stack[' + t + '] = ' + value + ';')\r\n        }\r\n        return t;\r\n    }\r\n\r\n    this.getNextTemporal = function () {\r\n        var n = Counter.temporals;\r\n        Counter.temporals++\r\n        return 't' + n;\r\n    }\r\n\r\n    this.getNextLabel = function () {\r\n        var r = Counter.labels;\r\n        Counter.labels++;\r\n        return 'l' + r;\r\n    }\r\n\r\n    this.getActualTemporal = function () {\r\n        return 't' + Counter.temporals;\r\n    }\r\n\r\n    this.getActualLabel = function () {\r\n        return 'l' + Counter.labels;\r\n    }\r\n\r\n    this.getOutput = function () {\r\n        var temp = 'var t0';\r\n        for (var i = 1; i <= Counter.temporals; i++) {\r\n            temp += ',t' + i\r\n        }\r\n        temp += ';\\nvar Stack[];\\nvar Heap[];\\nvar P=0;\\nvar H=0;\\n\\n';\r\n        Counter.output = temp + Counter.output;\r\n        return Counter.output;\r\n    }\r\n\r\n    this.getGlobals = function () {\r\n        var r = Counter.output;\r\n        Counter.output = '';\r\n        return r;\r\n    }\r\n\r\n    this.joinString = function (s1) {\r\n        Counter.output = s1 + '\\n' + Counter.output;\r\n    }\r\n\r\n    this.putPrincipal = function (idd, L) {\r\n        Counter.output = 'call ' + idd + ';\\n\\ngoto ' + L + ';\\n\\n' + Counter.output;\r\n    }\r\n\r\n    this.putInstruction = function (instruction) {\r\n        Counter.output += instruction + '\\n';\r\n    }\r\n\r\n    this.getError = function () {\r\n        //return Counter.errors;\r\n        return Counter.Rerror;\r\n    }\r\n\r\n    this.putError = function (type, instruction, row, column) {\r\n        //Counter.errors += 'ERROR ' + type + ', ' + instruction + ', Fila: ' + row + ', Columna: ' + column + '\\n';\r\n        Counter.Rerror.push({type: type, message: instruction, row: row, column: column});\r\n    }\r\n\r\n    this.getSymbol = function () {\r\n        //return Counter.errors;\r\n        return Counter.Rsymbol;\r\n    }\r\n\r\n    this.putSymbol = function (_ambit, _type, _type_exp, _type_var,  _type_c, _type_o, _id, _pointer,_tag) {\r\n        //Counter.errors += 'ERROR ' + type + ', ' + instruction + ', Fila: ' + row + ', Columna: ' + column + '\\n';\r\n        Counter.Rsymbol.push({ambit: _ambit, type: _type, type_exp: _type_exp, type_var: _type_var, type_c:  _type_c, type_o: _type_o, id: _id, pointer: _pointer});\r\n    }\r\n\r\n    this.getFunction = function () {\r\n        //return Counter.errors;\r\n        return Counter.Rfunction;\r\n    }\r\n\r\n    this.putFunction = function (_ambit, _type, _type_exp, _type_o, _id, _param, _size, _row, _col) {\r\n        //Counter.errors += 'ERROR ' + type + ', ' + instruction + ', Fila: ' + row + ', Columna: ' + column + '\\n';\r\n        Counter.Rfunction.push({ambit: _ambit, type: _type, type_exp: _type_exp, type_o: _type_o, id: _id, param: _param, size: _size, row: _row, column: _col});\r\n    }\r\n\r\n    this.newId = function () {\r\n        return Counter.id++;\r\n    }\r\n\r\n    this.getId = function () {\r\n        return Counter.id;\r\n    }\r\n\r\n}\r\n\r\nCounter.temporals = 0;\r\nCounter.labels = 0;\r\nCounter.output = '';\r\nCounter.errors = '';\r\nCounter.exitret = [];\r\nCounter.id = 0;\r\nCounter.p = 0;\r\nCounter.h = 0;\r\nCounter.relative = [];\r\nCounter.inits = [];\r\nCounter.finals = [];\r\nCounter.Rsymbol = [];\r\nCounter.Rerror = [];\r\nCounter.Rfunction = [];\r\nCounter.tagsvf = [];\r\n\r\nexport default Counter;","class SymbolTable{\r\n    \r\n    constructor(_tsuper) {\r\n        if (_tsuper != null) {\r\n            this.functions = _tsuper.functions;\r\n        }\r\n        this.symbols = [];\r\n        this.tsuper = _tsuper;\r\n    }\r\n\r\n    /*\r\n    SymbolTable(_tsuper) {\r\n        if (_tsuper != null) \r\n            this.functions = this.tsuper.functions;\r\n        else\r\n            this.functions = [];\r\n        this.symbols = [];\r\n        this.functions = [];\r\n        this.tsuper = null;\r\n    }\r\n    */\r\n\r\n    addSymbol(symb) {\r\n        if (!this.exists(symb.id)) {\r\n            this.symbols.push(symb);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    addSymbolDirect(symb) {\r\n        this.symbols.push(symb);\r\n        return true;\r\n    }\r\n\r\n    getSymbol(name) {\r\n        for (var i=0; i<this.symbols.length; i++) {\r\n            if (name === this.symbols[i].id) {\r\n                return this.symbols[i];\r\n            }\r\n        }\r\n        if (this.tsuper != null) {\r\n            return this.tsuper.getSymbol(name);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    exists(val) {\r\n        for (var i=0; i<this.symbols.length; i++) {\r\n            if (this.symbols[i].id === val) {\r\n                return true;\r\n            }\r\n        }\r\n        if (this.tsuper != null) {\r\n            return this.tsuper.exists(val);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    existsDirect(val) {\r\n        for (var i=0; i<this.symbols.length; i++) {\r\n            if (this.symbols[i].id === val) {\r\n                return true;\r\n            }\r\n        }\r\n//        if(tsuper != null)\r\n//        {\r\n//            return tsuper.exists(val);\r\n//        }\r\n        return false;\r\n    }\r\n\r\n    unionTables(t) {\r\n        for (var s in t.symbols) {\r\n            this.addSymbol(s);\r\n        }\r\n    }\r\n\r\n    addFunction(fun) {\r\n        if (!this.existsFunction(fun.id)) {\r\n            this.functions.push(fun);\r\n            return true;\r\n        } else {\r\n            //olc2_p1.IDE.txtExec += \"Error Sintactico, Funcion: \"+fun.id+\", Ya Declarada. Linea: \" + fun.row + \" Columna: \" + fun.column + \"\\n\";\r\n            //var er = new cont().putError(Type.SINTACTICO, \"Funcion: \"+fun.id+\", Ya Declarada.\", fun.row, fun.column);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFunction(name) {\r\n        for (var f =0; f<this.functions.length; f++) {\r\n            if (name === this.functions[f].id) {\r\n                return this.functions[f];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    existsFunction(val) {\r\n        for (var f = 0; f< this.functions.length; f++) {\r\n            if (this.functions[f].id === val) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default SymbolTable;","const Type = require('./Type')\r\nconst count = require('./Counters');\r\n\r\nclass Value {\r\n    type_var = '';\r\n    constructor(val, t, te, _row, _column) {\r\n        this.value = val;\r\n        this.type = t;\r\n        this.type_exp = te;\r\n        this.row = _row;\r\n        this.column = _column;\r\n    }\r\n\r\n    operate(tab) {\r\n        const cont = new count();\r\n        if (this.type_exp == Type.VALOR) {\r\n            //LinkedList<Object> rr = new LinkedList<>();\r\n            switch (this.type) {\r\n                case Type.ENTERO:\r\n                    return new Value(this.value, this.type, this.type_exp, this.row, this.column);\r\n\r\n                case Type.DECIMAL:\r\n                    return new Value(this.value, this.type, this.type_exp, this.row, this.column);\r\n\r\n                case Type.DEFAULT:\r\n                    return new Value(this.value, this.type, this.type_exp, this.row, this.column);\r\n\r\n                case Type.CADENA:\r\n                    this.value = this.value.replace(/\\\\n/g, '\\n');\r\n                    this.value = this.value.replace(/\\\\t/g, '\\t');\r\n                    this.value = this.value.replace(/\\\\r/g, '\\r');\r\n                    if (this.value.toString().startsWith(\"\\\"\")) {\r\n                        this.value = this.value.toString().substring(1, this.value.toString().length - 1);\r\n                    }\r\n                    this.value = this.value.toString().replace(/\\\\\\\"/g, \"\\\"\");\r\n                    //return new this.Value(this.value.toString().replace(\"\\\"\", \"\"), type, type_exp, row, column);\r\n                    var ini = cont.generateDeclaration(Type.GLOBAL,this.value.charCodeAt(0),0);\r\n                    for(var i = 1; i<this.value.length; i++){\r\n                        cont.generateDeclaration(Type.GLOBAL,this.value.charCodeAt(i),0);\r\n                    }\r\n                    cont.generateDeclaration(Type.GLOBAL,0,0);\r\n                    return new Value(ini, this.type, this.type_exp, this.row, this.column);\r\n\r\n                case Type.BOOL:\r\n                    if(this.value == true){\r\n                        return new Value(1, this.type, this.type_exp, this.row, this.column);\r\n                    }\r\n                    return new Value(0, this.type, this.type_exp, this.row, this.column);\r\n                case Type.NULL:\r\n                    return new Value('null', Type.NULL, Type.VALOR, this.row, this.column);\r\n                case Type.CARACTER:\r\n                    var ret = this.value.replace(/'/g,'');\r\n                    \r\n                    if(String(ret) === \"\\\\n\"){\r\n                        return new Value(10, Type.CARACTER, Type.VALOR, this.row, this.column);\r\n                    } else if(ret === \"\\\\r\"){\r\n                        return new Value(8, Type.CARACTER, Type.VALOR, this.row, this.column);\r\n                    } else if(ret === \"\\\\t\"){\r\n                        return new Value(9, Type.CARACTER, Type.VALOR, this.row, this.column);\r\n                    }\r\n                    return new Value(ret.charCodeAt(0), Type.CARACTER, Type.VALOR, this.row, this.column);\r\n                case Type.ID:\r\n                    var a = tab.exists(this.value);\r\n                    if (a) {\r\n                        var r = tab.getSymbol(this.value);\r\n                        const tag = this.count.getNextTemporal();\r\n                        const tag2 = this.count.getNextTemporal();\r\n                        if (r.type_var == Type.GLOBAL) {\r\n                            this.count.putInstruction(tag + ' = heap[' + r.tag + '];');\r\n                        } else {\r\n                            this.count.putInstruction(tag2 + ' = P + ' + r.pointer + ';');\r\n                            this.count.putInstruction(tag + ' = stack[' + tag2 + '];');\r\n                        }\r\n                        var s = new Value(tag, r.type, r.type_exp, r.row, r.column);\r\n                        s.type_var = r.type_var;\r\n                        return s;\r\n\r\n                    } else {\r\n                        //console.log(\"Error Semantico, Variable \" + this.value.toString() + \" no encontrada. Linea: \" + this.row + \" Columna: \" + this.column + \"\\n\");\r\n                        this.count.putError(Type.SEMANTICO, \"Variable \" + this.value + \" no encontrada.\", this.row, this.column);\r\n                        //System.out.println(\"Error Variable no encontrada\");\r\n                        return null;\r\n                    }\r\n                default:\r\n                    //console.log(\"Error Semantico, Tipo \" + type.toString() + \" no Valido. Linea: \" + this.row + \" Columna: \" + this.column + \"\\n\");\r\n                    this.count.putError(Type.SEMANTICO, \"Tipo \" + this.type + \" no Valido.\", this.row, this.column);\r\n                    return new Value(null, Type.ERROR, Type.ERROR, this.row, this.column);\r\n            }\r\n        } else {\r\n\r\n            /*\r\n            switch (this.type_exp) {\r\n                case HIST:\r\n                //return createGraph(tab);\r\n                default:\r\n                    //console.log(\"Error Semantico, Tipo \" + type.toString() + \" no Valido. Linea: \" + this.row + \" Columna: \" + this.column + \"\\n\");\r\n                    this.count.putError(Type.SEMANTICO, \"Tipo \" + this.type + \" no Valido.\", this.row, this.column);\r\n                    return new Value(null, Type.ERROR, Type.ERROR, this.row, this.column);\r\n            }\r\n\r\n            */\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Value;","const count = require('./Counters');\r\nconst Symbol = require('./Symbol');\r\nconst Value = require('./Value');\r\nconst Type = require('./Type');\r\n\r\n\r\nclass Declaration {\r\n    constructor(_id, _value, _type, _type_exp, _type_var, _type_c, _type_o, _ambit, _row, _column) {\r\n        this.id = _id;\r\n        this.value = _value;\r\n        this.type = _type;\r\n        this.type_exp = _type_exp;\r\n        this.type_var = _type_var;\r\n        this.type_c = _type_c;\r\n        this.type_o = _type_o;\r\n        this.ambit = _ambit;\r\n        this.row = _row;\r\n        this.column = _column;\r\n    }\r\n\r\n    operate(tab) {\r\n        const cont = new count();\r\n\r\n\r\n        var tmpExp = null;\r\n\r\n        if (this.value != null) {\r\n            this.count.putInstruction('##Operando la expresion para la Declaracion');\r\n\r\n            if (!Array.isArray(this.value)) {//} instanceof Value){\r\n                tmpExp = this.value.operate(tab);\r\n            } else {\r\n                tmpExp = this.value[0].operate(tab);         ///////////////////aca se debe modificar para la recursion de llamadas\r\n            }\r\n            if (tmpExp == null) {\r\n                cont.putError(Type.SEMANTICO, \"Hubo un error al realizar la declaracion de la variable \" + this.id + \".\", this.row, this.column);\r\n                return null;\r\n            }\r\n            if (this.checkType(tmpExp, cont)) {\r\n                return null;\r\n            }\r\n        }\r\n        for (var i = 0; i < this.id.length; i++) {\r\n            var a = false;\r\n            if (this.type_var == Type.GLOBAL) {\r\n                a = tab.exists(this.id[i]);\r\n            } else {\r\n                a = tab.existsDirect(this.id[i]);\r\n            }\r\n            this.count.putInstruction('##Declarando la variable ' + this.id[i]);\r\n            if (tmpExp == null) {\r\n                switch (this.type) {\r\n                    case Type.DECIMAL:\r\n                        tmpExp = new Value(null, 0.0, this.type, this.type_exp, this.type_var, this.ambit, this.row, this.column);\r\n                        break;\r\n                    case Type.ENTERO:\r\n                        tmpExp = new Value(null, 0, this.type, this.type_exp, this.type_var, this.ambit, this.row, this.column);\r\n                        break;\r\n                    case Type.CHAR:\r\n                        tmpExp = new Value(null, '\\0', this.type, this.type_exp, this.type_var, this.ambit, this.row, this.column);\r\n                        break;\r\n                    case Type.BOOL:\r\n                        tmpExp = new Value(null, false, this.type, this.type_exp, this.type_var, this.ambit, this.row, this.column);\r\n                        break;\r\n                }\r\n            }\r\n            if (a == false) {\r\n                var r = cont.getRelativePlus();\r\n                var tag = cont.generateDeclaration(this.type_var, tmpExp.value, r)\r\n                tab.addSymbolDirect(new Symbol(this.ambit, tmpExp.type, tmpExp.type_exp, this.type_var, this.type_c, this.type_o, this.id[i], r, tag));\r\n                \r\n                this.count.putSymbol(this.ambit, tmpExp.type, tmpExp.type_exp, this.type_var, this.type_c, this.type_o, this.id[i], r, tag);\r\n            } else {\r\n                cont.putError(Type.SEMANTICO, \"La variable \" + this.id[i] + \" ya fue declarada en este ambito.\", this.row, this.column);\r\n            }\r\n\r\n        }\r\n        //console.log(tab);\r\n        //olc2_p1.IDE.txtExec += \"Error Semantico, Hubo un error al realizar la asignacion de la variable \\\"\" + id + \"\\\". Linea: \" + row + \" Columna: \" + column + \"\\n\";\r\n        //cont.putError(Type.SEMANTICO, \"Hubo un error al realizar la asignacion de la variable \" + this.id + \".\", this.row, this.column);\r\n        return null;\r\n    }\r\n\r\n    checkType(val, cont) {\r\n        switch (this.type) {\r\n            case Type.ENTERO:\r\n                if (val.type == Type.ENTERO) {\r\n                    return false;\r\n                } else if (val.type == Type.CARACTER) {\r\n                    val.type = Type.ENTERO;\r\n                    return false;\r\n                } else {\r\n                    cont.putError(Type.SEMANTICO, 'Tipo de la EXPRESION ' + val.type + ' No Asignable a un ENTERO.', this.row, this.column);\r\n                    return true;\r\n                }\r\n                break;\r\n            case Type.DECIMAL:\r\n                if (val.type == Type.DECIMAL) {\r\n                    return false;\r\n                } else if (val.type == Type.ENTERO) {\r\n                    val.type = Type.DECIMAL;\r\n                    return false;\r\n                } else if (val.type == Type.CARACTER) {\r\n                    val.type = Type.DECIMAL;\r\n                    return false;\r\n                } else {\r\n                    cont.putError(Type.SEMANTICO, 'Tipo de la EXPRESION ' + val.typ + ' No Asignable a un DOUBLE.', this.row, this.column);\r\n                    return true;\r\n                }\r\n                break;\r\n            case Type.CARACTER:\r\n                if (val.type != Type.CARACTER) {\r\n                    cont.putError(Type.SEMANTICO, 'Tipo de la EXPRESION ' + val.type + ' No Asignable a un CARACTER.', this.row, this.column);\r\n                    return true;\r\n                }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default Declaration;","const Count = require('./Counters');\r\nconst SymbolTable = require('./SymbolTable');\r\nconst Symbol = require('./Symbol');\r\nconst Type = require('./Type');\r\n\r\nclass Function {\r\n\r\n    constructor(_ambit, _type, _type_exp, _type_o, _id, _param, _body, _size, _idd, _row, _col) {\r\n        this.ambit = _ambit;\r\n        this.type = _type;\r\n        this.type_exp = _type_exp;\r\n        this.type_o = _type_o;\r\n        this.id = _id;\r\n        if (_param == null) {\r\n            this.param = []\r\n        } else {\r\n            this.param = _param;\r\n        }\r\n        this.body = _body;\r\n        this.size = _size;\r\n        this.row = _row;\r\n        this.column = _col;\r\n        this.idd = _idd;\r\n        this.symbolTab = null;\r\n    }\r\n\r\n    addParamet() {\r\n        this.symbolTab = new SymbolTable(null);\r\n        //count.putInstruction('##Insertando return de Funcion. Posicion ' + 0)\r\n        var r2 = 0;\r\n        var tag2 = '';\r\n        //count.putInstruction('stack[' + tag2 + '] = null;');\r\n\r\n        this.symbolTab.addSymbolDirect(new Symbol(-1, this.type, this._type_exp, Type.LOCAL, Type.VAR, this.type_o, 'return', r2, tag2));\r\n        if (this.param != null) {\r\n\r\n            for (var i = 0; i < this.param.length; i++) {\r\n                //count.putInstruction('##Insertando parametros de Funcion. Posicion ' + (i + 1))\r\n                //var r = count.getRelativePlus();\r\n                //var tag = count.paramFunc(Type.LOCAL, r)\r\n                this.symbolTab.addSymbolDirect(new Symbol(-1, this.param[i].type, Type.VALOR, Type.LOCAL, Type.VAR, this.type_o, this.param[i].id[0], i + 1, ''));\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    operate(tab) {\r\n\r\n        var f = tab.getFunction(this.id);\r\n        var count = new Count();\r\n        if (f != null) {\r\n\r\n\r\n            var exit = count.getNextLabel();\r\n            count.setExitRet(exit);\r\n            count.putInstruction('##Insertando Funcion ' + this.id)\r\n            count.putInstruction('proc ' + this.idd + ' begin')\r\n            //var actual = count.getNextTemporal()\r\n            this.ambit = count.getNextTemporal();\r\n            count.newRelative();\r\n            //count.putInstruction(actual + '= P;')\r\n            //count.putInstruction('P = ' + this.ambit + ';')\r\n            this.symbolTab.tsuper = tab;\r\n            this.symbolTab.functions = tab.functions;\r\n            count.putInstruction('##Insertando return de Funcion. Posicion ' + 0)\r\n            var r2 = count.getRelativePlus();\r\n            var tag2 = count.paramFunc(Type.LOCAL, r2)\r\n            count.putInstruction('stack[' + tag2 + '] = null;');\r\n            //this.symbolTab.addSymbolDirect(new Symbol(-1, this.type, this._type_exp, Type.LOCAL, Type.VAR, this.type_o, 'return', r2, tag2, false));\r\n            this.symbolTab.symbols[0].pointer = r2;\r\n            this.symbolTab.symbols[0].tag = tag2;\r\n            if (this.param != null) {\r\n\r\n                for (var i = 0; i < this.param.length; i++) {\r\n                    count.putInstruction('##Insertando parametros de Funcion. Posicion ' + (i + 1))\r\n                    var r = count.getRelativePlus();\r\n                    var tag = count.paramFunc(Type.LOCAL, r)\r\n                    //this.symbolTab.addSymbolDirect(new Symbol(-1, this.param[i].type, Type.VALOR, Type.LOCAL, Type.VAR, this.type_o, this.param[i].id[0], r, tag, false));\r\n                    this.symbolTab.symbols[i+1].pointer = r;\r\n                    this.symbolTab.symbols[i+1].tag = tag;\r\n                }\r\n            }\r\n            count.putInstruction('##Empezo el cuerpo de la funcion.')\r\n            for (var i = 0; i < this.body.length; i++) {\r\n                this.body[i].operate(this.symbolTab);\r\n                count.putInstruction('');\r\n            }\r\n\r\n\r\n            /*switch(f.type){\r\n                case Type.ENTERO:\r\n    \r\n                break;\r\n                case Type.DECIMAL:\r\n                break;\r\n                case Type.CHAR:\r\n                break;\r\n                case Type.VOID:\r\n                    if(symb.tag != null){\r\n                        count.putError(Type.SEMANTICO,'Se retorno una Expresion en la Funcion '+f.id+' de tipo Void',this.row,this.column);\r\n                        return null;\r\n                    }\r\n                break;\r\n                default:\r\n                break;\r\n            }*/\r\n            this.size = count.getRelative() + 1;\r\n            //count.putInstruction('P = P -' + this.size + ';')\r\n            count.clearExitRet();\r\n            count.putInstruction(exit + ':');\r\n            count.putInstruction('end\\n');\r\n            count.resetRelative();\r\n            if (this.param != null) {\r\n                count.putFunction(this.ambit, this.type, this.type_exp, this.type_o, this.id, this.param.length, this.size, this.row, this.column)\r\n            } else {\r\n                count.putFunction(this.ambit, this.type, this.type_exp, this.type_o, this.id, 0, this.size, this.row, this.column)\r\n            }\r\n        } else {\r\n            count.putError(Type.SEMANTICO, 'Error Funcion ' + this.id + ' No encontrada.', this.row, this.column)\r\n\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nexport default Function;","const Type = require('./Type');\r\nconst Value = require('./Value');\r\nconst Cont = require('./Counters');\r\n\r\nclass Logical {\r\n    constructor(left, right, t, te, _row, _column) {\r\n        this.type = t;\r\n        this.node_left = left;\r\n        this.node_right = right;\r\n        this.type_exp = te;\r\n        this.row = _row;\r\n        this.column = _column;\r\n    }\r\n\r\n    operate(tab) {\r\n        var cont = new Cont();\r\n        var tempL = null;\r\n        var tempR = null;\r\n        /*var tf = '';\r\n        if (cont.getTagsSize() == 0) {\r\n            tf = cont.getNextLabel();\r\n            //cont.pushTagsvf(tf);\r\n        } else {\r\n            tf = cont.getTagsvf();\r\n            //cont.pushTagsvf(tf);\r\n        }*/\r\n        if (this.node_right != null) {\r\n            tempR = this.node_right.operate(tab);\r\n        }\r\n\r\n        if (this.node_left != null) {\r\n            tempL = this.node_left.operate(tab);\r\n        }\r\n\r\n        if (tempR != null && tempL != null) {\r\n            if (tempL.type_exp == Type.VALOR && tempR.type_exp == Type.VALOR) {\r\n                if (tempL.type == Type.BOOL && tempR.type == Type.BOOL) {\r\n                    if (null != this.type) {\r\n                        var tf = cont.getNextLabel();\r\n                        var to = cont.getNextLabel();\r\n                        var t1 = cont.getNextTemporal();\r\n                        switch (this.type) {\r\n                            case Type.AND:\r\n                                //return new Value(tempL.value && tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                                //return new Value(cont.generateInstruction(tempL.value, '&&', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n\r\n                                cont.putInstruction('if(' + tempL.value + ' <> 1) goto ' + tf + ';');\r\n                                cont.putInstruction('if(' + tempR.value + ' <> 1) goto ' + tf + ';');\r\n                                //cont.popTagsvf()\r\n                                /*if (cont.getTagsSize() == 0) {\r\n                                    var to = cont.getNextLabel();\r\n                                    cont.putInstruction(t1 + ' = 1' + ';');\r\n                                    cont.putInstruction('goto ' + to + ';');\r\n                                    cont.putInstruction(tf + ':');\r\n                                    cont.putInstruction(t1 + ' = 0' + ';');\r\n                                    cont.putInstruction(to + ':');\r\n                                    return new Value(t1, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                                }*/\r\n                                cont.putInstruction(t1 + ' = 1' + ';');\r\n                                cont.putInstruction('goto ' + to + ';');\r\n                                cont.putInstruction(tf + ':');\r\n                                cont.putInstruction(t1 + ' = 0' + ';');\r\n                                cont.putInstruction(to + ':');\r\n                                return new Value(t1, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                            case Type.OR:\r\n                                //return new Value(tempL.value || tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                                //return new Value(cont.generateInstruction(tempL.value, '||', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                                cont.putInstruction('if(' + tempL.value + ' == 1) goto ' + tf + ';');\r\n                                cont.putInstruction('if(' + tempR.value + ' == 1) goto ' + tf + ';');\r\n                                //cont.popTagsvf()\r\n                                /*if (cont.getTagsSize() == 0) {\r\n                                    var to = cont.getNextLabel();\r\n                                    cont.putInstruction(t1 + ' = 0' + ';');\r\n                                    cont.putInstruction('goto ' + to + ';');\r\n                                    cont.putInstruction(tf + ':');\r\n                                    cont.putInstruction(t1 + ' = 1' + ';');\r\n                                    cont.putInstruction(to + ':');\r\n                                    return new Value(t1, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                                }*/\r\n                                cont.putInstruction(t1 + ' = 0' + ';');\r\n                                cont.putInstruction('goto ' + to + ';');\r\n                                cont.putInstruction(tf + ':');\r\n                                cont.putInstruction(t1 + ' = 1' + ';');\r\n                                cont.putInstruction(to + ':');\r\n                                return new Value(t1, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                            case Type.XOR:\r\n                                //return new Value(!(tempL.value == tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                                //return new Value(cont.generateInstruction(!(tempL.value, '==', tempR.value)), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                                cont.putInstruction('if(' + tempL.value + ' <> ' + tempR.value + ') goto ' + tf + ';');\r\n                                //cont.popTagsvf()\r\n                                /*if (cont.getTagsSize() == 0) {\r\n                                    var to = cont.getNextLabel();\r\n                                    cont.putInstruction(t1 + ' = 0' + ';');\r\n                                    cont.putInstruction('goto ' + to + ';');\r\n                                    cont.putInstruction(tf + ':');\r\n                                    cont.putInstruction(t1 + ' = 1' + ';');\r\n                                    cont.putInstruction(to + ':');\r\n                                    return new Value(t1, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                                }*/\r\n                                cont.putInstruction(t1 + ' = 0' + ';');\r\n                                cont.putInstruction('goto ' + to + ';');\r\n                                cont.putInstruction(tf + ':');\r\n                                cont.putInstruction(t1 + ' = 1' + ';');\r\n                                cont.putInstruction(to + ':');\r\n                                return new Value(t1, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                            default:\r\n                                break;\r\n                        }\r\n                    }\r\n                    //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" Columna: \" + this.column + \"\\n\";\r\n                    cont.putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                }\r\n            }\r\n        } else if (tempR == null && tempL != null) {\r\n            if (tempL.type_exp == Type.VALOR) {\r\n                if (this.type == Type.NOT) {\r\n                    var tf = cont.getNextLabel();\r\n                    var to = cont.getNextLabel();\r\n                    var t1 = cont.getNextTemporal();\r\n                    cont.putInstruction('if(' + tempL.value + ' == 1) goto ' + tf + ';');\r\n\r\n                    cont.putInstruction(t1 + ' = 1' + ';');\r\n                    cont.putInstruction('goto ' + to + ';');\r\n                    cont.putInstruction(tf + ':');\r\n                    cont.putInstruction(t1 + ' = 0' + ';');\r\n                    cont.putInstruction(to + ':');\r\n                    /*if (tempL.value == true) {\r\n                        //cont.popTagsvf()\r\n                        return new Value(0, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else {\r\n                        //cont.popTagsvf()\r\n                        return new Value(1, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    }*/\r\n                    return new Value(t1, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                }\r\n            }\r\n            //cont.popTagsvf()\r\n            //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + type.toString() + \", No reconocida o No Permitida. Linea: \" + row + \" Columna: \" + column + \"\\n\";\r\n            cont.putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type + \", No reconocida o No Permitida.\", this.row, this.column);\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nexport default Logical;","const Type = require('./Type');\r\nconst Value = require('./Value');\r\nconst  count = require('./Counters');\r\n\r\nclass Relational {\r\n    constructor(left, right, t, te, _row, _column) {\r\n        this.type = t;\r\n        this.node_left = left;\r\n        this.node_right = right;\r\n        this.type_exp = te;\r\n        this.row = _row;\r\n        this.column = _column;\r\n    }\r\n\r\n    operate(tab){\r\n        var cont = new count();\r\n        var tempL = null;\r\n        var tempR = null;\r\n        if (this.node_right != null) {\r\n            tempR = this.node_right.operate(tab);\r\n        }\r\n\r\n        if (this.node_left != null) {\r\n            tempL = this.node_left.operate(tab);\r\n        }\r\n\r\n        if (tempR != null && tempL != null) {\r\n            if (tempR.type_exp == Type.VALOR && tempL.type_exp == Type.VALOR) {\r\n                if (tempL.type == Type.ENTERO && tempR.type == Type.ENTERO) {\r\n                    if (this.type == Type.IDENTICO) {\r\n                        //return new Value(tempL.value == tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        //return new Value(cont.generateInstruction(tempL.value,'==', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        //return new Value(cont.generateIf(tempL.value,'<>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'==', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.DIFERENTE) {\r\n                        //return new Value(tempL.value != tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        //return new Value(cont.generateInstruction(tempL.value,'<>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        //return new Value(cont.generateIf(tempL.value,'==', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'<>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYOR) {\r\n                        //return new Value(tempL.value > tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        //return new Value(cont.generateInstruction(tempL.value,'>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENOR) {\r\n                        //return new Value(tempL.value < tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        //return new Value(cont.generateInstruction(tempL.value,'<', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        //return new Value(cont.generateIf(tempL.value,'<', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'<', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYORIGUAL) {\r\n                        //return new Value(tempL.value >= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        //return new Value(cont.generateInstruction(tempL.value,'>=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        //return new Value(cont.generateIf(tempL.value,'>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'>=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENORIGUAL) {\r\n                        //return new Value(tempL.value <= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        //return new Value(cont.generateInstruction(tempL.value,'<=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        //return new Value(cont.generateIf(tempL.value,'<', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'<=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    }\r\n                    return null;\r\n                } else if (tempL.type == Type.ENTERO && tempR.type == Type.DECIMAL) {\r\n                    if (this.type == Type.IDENTICO) {\r\n                        //return new Value(tempL.value == tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'==', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.DIFERENTE) {\r\n                        //return new Value(tempL.value != tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'<>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYOR) {\r\n                        //return new Value(tempL.value > tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENOR) {\r\n                        //return new Value(tempL.value < tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'<', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYORIGUAL) {\r\n                        //return new Value(tempL.value >= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'>=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENORIGUAL) {\r\n                        //return new Value(tempL.value <= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'<=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    }\r\n                } else if (tempL.type == Type.DECIMAL && tempR.type == Type.ENTERO) {\r\n                    if (this.type == Type.IDENTICO) {\r\n                        //return new Value(tempL.value == tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'==', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.DIFERENTE) {\r\n                        //return new Value(tempL.value != tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'<>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYOR) {\r\n                        //return new Value(tempL.value > tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENOR) {\r\n                        //return new Value(tempL.value < tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'<', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYORIGUAL) {\r\n                        //return new Value(tempL.value >= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'>=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENORIGUAL) {\r\n                        //return new Value(tempL.value <= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'<=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    }\r\n                } else if (tempL.type == Type.ENTERO && tempR.type == Type.CARACTER) {\r\n                    if (this.type == Type.IDENTICO) {\r\n                        //return new Value(tempL.value == tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'==', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.DIFERENTE) {\r\n                        //return new Value(tempL.value != tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'<>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYOR) {\r\n                        //return new Value(tempL.value > tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENOR) {\r\n                        //return new Value(tempL.value < tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'<', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYORIGUAL) {\r\n                        //return new Value(tempL.value >= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'>=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENORIGUAL) {\r\n                        //return new Value(tempL.value <= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'<=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    }\r\n                } else if (tempL.type == Type.CARACTER && tempR.type == Type.ENTERO) {\r\n                    if (this.type == Type.IDENTICO) {\r\n                        //return new Value(tempL.value == tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'==', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.DIFERENTE) {\r\n                        //return new Value(tempL.value != tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'<>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYOR) {\r\n                        //return new Value(tempL.value > tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENOR) {\r\n                        //return new Value(tempL.value < tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'<', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYORIGUAL) {\r\n                        //return new Value(tempL.value >= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'>=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENORIGUAL) {\r\n                        //return new Value(tempL.value <= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'<=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    }\r\n                } else if (tempL.type == Type.DECIMAL && tempR.type == Type.CARACTER) {\r\n                    if (this.type == Type.IDENTICO) {\r\n                        //return new Value(tempL.value == tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'==', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.DIFERENTE) {\r\n                        //return new Value(tempL.value != tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'<>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYOR) {\r\n                        //return new Value(tempL.value > tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENOR) {\r\n                        //return new Value(tempL.value < tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'<', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYORIGUAL) {\r\n                        //return new Value(tempL.value >= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'>=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENORIGUAL) {\r\n                        //return new Value(tempL.value <= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'<=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    }\r\n                } else if (tempL.type == Type.CARACTER && tempR.type == Type.DECIMAL) {\r\n                    if (this.type == Type.IDENTICO) {\r\n                        //return new Value(tempL.value == tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'==', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.DIFERENTE) {\r\n                        //return new Value(tempL.value != tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'<>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYOR) {\r\n                        //return new Value(tempL.value > tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENOR) {\r\n                        //return new Value(tempL.value < tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'<', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYORIGUAL) {\r\n                        //return new Value(tempL.value >= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'>=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENORIGUAL) {\r\n                        //return new Value(tempL.value <= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'<=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    }\r\n                } else if (tempL.type == Type.DECIMAL && tempR.type == Type.DECIMAL) {\r\n                    if (this.type == Type.IDENTICO) {\r\n                        //return new Value(tempL.value == tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'==', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.DIFERENTE) {\r\n                        //return new Value(tempL.value != tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'<>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYOR) {\r\n                        //return new Value(tempL.value > tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENOR) {\r\n                        //return new Value(tempL.value < tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'<', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYORIGUAL) {\r\n                        //return new Value(tempL.value >= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'>=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENORIGUAL) {\r\n                        //return new Value(tempL.value <= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'<=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    }\r\n                } else if (tempL.type == Type.CARACTER && tempR.type == Type.CARACTER) {\r\n                    if (this.type == Type.IDENTICO) {\r\n                        //return new Value(tempL.value == tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'==', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.DIFERENTE) {\r\n                        //return new Value(tempL.value != tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'<>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYOR) {\r\n                        //return new Value(tempL.value > tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENOR) {\r\n                        //return new Value(tempL.value < tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'<', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MAYORIGUAL) {\r\n                        //return new Value(tempL.value >= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'>=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.MENORIGUAL) {\r\n                        //return new Value(tempL.value <= tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'<=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    }\r\n                } else if (tempL.type == Type.CADENA && tempR.type == Type.CADENA) {\r\n                    if (this.type == Type.IDENTICO) {\r\n                        //return new Value(tempL.value == tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(count.operateRelational(tempL.value,'==', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.DIFERENTE) {\r\n                        //return new Value(tempL.value != tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'<>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.REFERECIA) {\r\n                        //return new Value(tempL.value > tempR.value, Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    }\r\n                } else if (tempL.type == Type.BOOL && tempR.type == Type.BOOL) {\r\n                    if (this.type == Type.IDENTICO) {\r\n                        //return new Value(cont.generateInstruction(tempL.value, '==', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value, '==', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    } else if (this.type == Type.DIFERENTE) {\r\n                        //return new Value(cont.generateInstruction(tempL.value,'!=', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                        return new Value(cont.operateRelational(tempL.value,'<>', tempR.value), Type.BOOL, Type.VALOR, this.row, this.column);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        cont.putError(Type.SEMANTICO,'Operacion no permitida '+this.type,this.row,this.column);\r\n        return null;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Relational;","const Type = require('./Type')\r\nconst Value = require('./Value');\r\nconst Count = require('./Counters');\r\n\r\n\r\nclass Arithmetical {\r\n\r\n    constructor(left, right, t, te, _row, _column) {\r\n        this.type = t;\r\n        this.node_left = left;\r\n        this.node_right = right;\r\n        this.type_exp = te;\r\n        this.row = _row;\r\n        this.column = _column;\r\n    }\r\n\r\n    operate(tab) {\r\n        var tempL = null;\r\n        var tempR = null;\r\n        if (this.node_right != null) {\r\n            if(!(this.node_right instanceof Array)){\r\n                tempR = this.node_right.operate(tab);\r\n            }else{\r\n                tempR = this.node_right[0].operate(tab);\r\n            }\r\n            \r\n        }\r\n\r\n        if (this.node_left != null) {\r\n            if(!(this.node_left instanceof Array)){\r\n                tempL = this.node_left.operate(tab);\r\n            }else{\r\n                tempL = this.node_left[0].operate(tab);\r\n            }\r\n            \r\n        }\r\n\r\n        if (tempR != null && tempL != null) {\r\n            var count = new Count();\r\n            if (tempR.type_exp == Type.VALOR && tempL.type_exp == Type.VALOR) {\r\n                if (tempL.type == Type.ENTERO && tempR.type == Type.ENTERO) {\r\n                    if (null != this.type) {\r\n                        switch (this.type) {\r\n                            case Type.SUMA:\r\n                                //return new Value(tempL.value + tempR.value, Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                                var ret = count.generateInstruction(tempL.value, '+', tempR.value)\r\n                                return new Value(ret, Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                            case Type.RESTA:\r\n                                //return new Value(tempL.value - tempR.value, Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                                var ret = count.generateInstruction(tempL.value, '-', tempR.value)\r\n                                return new Value(ret, Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                            case Type.MULTIPLICACION:\r\n                                //return new Value(tempL.value * tempR.value, Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                                var ret = count.generateInstruction(tempL.value, '*', tempR.value)\r\n                                return new Value(ret, Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                            case Type.DIVISION:\r\n                                //return new Value(tempL.value / tempR.value, Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                                var ret = count.generateInstruction(tempL.value, '/', tempR.value)\r\n                                return new Value(ret, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.POTENCIA:\r\n                                //return new Value(Math.pow(tempL.value, tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                var op1 = count.generateInstruction(tempL.value,'', '')\r\n                                var op2 = count.generateInstruction(tempR.value,'', '')\r\n                                var l = count.generateInstruction(op1,'', '')\r\n                                var tagin = count.getNextLabel();\r\n                                var tagout = count.getNextLabel();\r\n                                count.putInstruction(tagin+':');\r\n                                count.putInstruction('if(2 >'+op2+') goto '+tagout+';');\r\n                                count.putInstruction(l+' = '+l+' * '+op1+';');\r\n                                count.putInstruction(op2+' = '+op2+' - 1;');\r\n                                count.putInstruction('goto '+tagin+';');\r\n                                count.putInstruction(tagout+':');\r\n                                return new Value(l, Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                            case Type.MODULO:\r\n                                //return new Value(tempL.value % tempR.value, Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                                var ret = count.generateInstruction(tempL.value, '%', tempR.value)\r\n                                return new Value(ret, Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                            default:\r\n                                //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                                var err = count.putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                                break;\r\n                        }\r\n                    }\r\n                    return null;\r\n                } else if (tempL.type == Type.ENTERO && tempR.type == Type.DECIMAL) {\r\n                    if (null != this.type) {\r\n                        switch (this.type) {\r\n                            case Type.SUMA:\r\n                                //return new Value(tempL.value + tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '+', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.RESTA:\r\n                                //return new Value(tempL.value - tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '-', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.MULTIPLICACION:\r\n                                //return new Value(tempL.value * tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '*', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.DIVISION:\r\n                                //return new Value(tempL.value / tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '/', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            default:\r\n                                var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                                break;\r\n                        }\r\n                    }\r\n                    return null;\r\n                } else if (tempL.type == Type.DECIMAL && tempR.type == Type.ENTERO) {\r\n                    if (null != this.type) {\r\n                        switch (this.type) {\r\n                            case Type.SUMA:\r\n                                //return new Value(tempL.value + tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '+', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.RESTA:\r\n                                //return new Value(tempL.value - tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '-', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.MULTIPLICACION:\r\n                                //return new Value(tempL.value * tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '*', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.DIVISION:\r\n                                //return new Value(tempL.value / tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '/', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            default:\r\n                                var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                                break;\r\n                        }\r\n                    }\r\n                    return null;\r\n                } else if (tempL.type == Type.ENTERO && tempR.type == Type.CARACTER) {\r\n                    if (null != this.type) {\r\n                        switch (this.type) {\r\n                            case Type.SUMA:\r\n                                //return new Value(tempL.value + tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '+', tempR.value), Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                            case Type.RESTA:\r\n                                //return new Value(tempL.value - tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '-', tempR.value), Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                            case Type.MULTIPLICACION:\r\n                                //return new Value(tempL.value * tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '*', tempR.value), Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                            case Type.DIVISION:\r\n                                //return new Value(tempL.value / tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '/', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            default:\r\n                                var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                                break;\r\n                        }\r\n                    }\r\n                    return null;\r\n                } else if (tempL.type == Type.CARACTER && tempR.type == Type.ENTERO) {\r\n                    if (null != this.type) {\r\n                        switch (this.type) {\r\n                            case Type.SUMA:\r\n                                //return new Value(tempL.value + tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '+', tempR.value), Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                            case Type.RESTA:\r\n                                //return new Value(tempL.value - tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '-', tempR.value), Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                            case Type.MULTIPLICACION:\r\n                                //return new Value(tempL.value * tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '*', tempR.value), Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                            case Type.DIVISION:\r\n                                //return new Value(tempL.value / tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '/', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            default:\r\n                                var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                                break;\r\n                        }\r\n                    }\r\n                    return null;\r\n                } else if (tempL.type == Type.ENTERO && tempR.type == Type.CADENA) {\r\n                    if (null != this.type) {\r\n                        switch (this.type) {\r\n                            case Type.SUMA:\r\n                                //return new Value(tempL.value + tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '+', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            default:\r\n                                var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                                break;\r\n                        }\r\n                    }\r\n                    return null;\r\n                } else if (tempL.type == Type.CADENA && tempR.type == Type.ENTERO) {\r\n                    if (null != this.type) {\r\n                        switch (this.type) {\r\n                            case Type.SUMA:\r\n                                //return new Value(tempL.value + tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '+', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            default:\r\n                                var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                                break;\r\n                        }\r\n                    }\r\n                    return null;\r\n                } else if (tempL.type == Type.DECIMAL && tempR.type == Type.CADENA) {\r\n                    if (this.type == Type.SUMA) {\r\n                        //return new Value(tempL.value + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                        return new Value(tempL.value + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                    }\r\n                    //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                    var err = new Count(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                    return null;\r\n                } else if (tempL.type == Type.CADENA && tempR.type == Type.DECIMAL) {\r\n                    if (this.type == Type.SUMA) {\r\n                        //return new Value(tempL.value + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                        return new Value(tempL.value + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                    }\r\n                    //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                    var err = new Count(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                    return null;\r\n                } else if (tempL.type == Type.DECIMAL && tempR.type == Type.CARACTER) {\r\n                    if (null != this.type) {\r\n                        switch (this.type) {\r\n                            case Type.SUMA:\r\n                                //return new Value(tempL.value + tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '+', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.RESTA:\r\n                                //return new Value(tempL.value - tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '-', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.MULTIPLICACION:\r\n                                //return new Value(tempL.value * tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '*', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.DIVISION:\r\n                                //return new Value(tempL.value / tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '/', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            default:\r\n                                //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                                var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                                break;\r\n                        }\r\n                    }\r\n                    return null;\r\n                } else if (tempL.type == Type.CARACTER && tempR.type == Type.DECIMAL) {\r\n                    if (null != this.type) {\r\n                        switch (this.type) {\r\n                            case Type.SUMA:\r\n                                //return new Value(tempL.value + tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '+', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.RESTA:\r\n                                //return new Value(tempL.value - tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '-', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.MULTIPLICACION:\r\n                                //return new Value(tempL.value * tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '*', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.DIVISION:\r\n                                //return new Value(tempL.value / tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '/', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            default:\r\n                                //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                                var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                                break;\r\n                        }\r\n                    }\r\n                    return null;\r\n                } else if (tempL.type == Type.DECIMAL && tempR.type == Type.DECIMAL) {\r\n                    if (null != this.type) {\r\n                        switch (this.type) {\r\n                            case Type.SUMA:\r\n                                //return new Value(tempL.value + tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '+', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.RESTA:\r\n                                //return new Value(tempL.value - tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '-', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.MULTIPLICACION:\r\n                                //return new Value(tempL.value * tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '*', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.DIVISION:\r\n                                //return new Value(tempL.value / tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '/', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            default:\r\n                                //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                                var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                                break;\r\n                        }\r\n                    }\r\n                    return null;\r\n                } else if (tempL.type == Type.CARACTER && tempR.type == Type.CARACTER) {\r\n                    if (null != this.type) {\r\n                        switch (this.type) {\r\n                            case Type.SUMA:\r\n                                //return new Value(tempL.value + tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '+', tempR.value), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                            case Type.RESTA:\r\n                                //return new Value(tempL.value - tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '-', tempR.value), Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                            case Type.MULTIPLICACION:\r\n                                //return new Value(tempL.value * tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '*', tempR.value), Type.ENTERO, Type.VALOR, this.row, this.column);\r\n                            case Type.DIVISION:\r\n                                //return new Value(tempL.value / tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value, '/', tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            default:\r\n                                //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                                var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                                break;\r\n                        }\r\n                    }\r\n                    return null;\r\n                } else if (tempL.type == Type.CARACTER && tempR.type == Type.CADENA) {\r\n                    if (this.type == Type.SUMA) {\r\n                        //return new Value(tempL.value + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                        return new Value(tempL.value + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                    }\r\n                    //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                    var err = new Count(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                    return null;\r\n                } else if (tempL.type == Type.CADENA && tempR.type == Type.CARACTER) {\r\n                    if (this.type == Type.SUMA) {\r\n                        //return new Value(tempL.value + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                        return new Value(tempL.value + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                    }\r\n                    //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                    var err = new Count(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                    return null;\r\n                } else if (tempL.type == Type.CADENA && tempR.type == Type.CADENA) {\r\n                    if (this.type == Type.SUMA) {\r\n                        //return new Value(tempL.value.toString() + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                        return new Value(tempL.value.toString() + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                    }\r\n                    //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                    var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                    return null;\r\n                } else if (tempL.type == Type.CADENA && tempR.type == Type.BOOL) {\r\n                    if (this.type == Type.SUMA) {\r\n                        //return new Value(tempL.value.toString() + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                        return new Value(tempL.value.toString() + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                    }\r\n                    //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                    var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                    return null;\r\n                } else if (tempL.type == Type.BOOL && tempR.type == Type.CADENA) {\r\n                    if (this.type == Type.SUMA) {\r\n                        //return new Value(tempL.value.toString() + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                        return new Value(tempL.value.toString() + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                    }\r\n                    //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                    var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        var err = new Count().putError(Type.SEMANTICO, 'No se Encontrado una Operacion Valida.', this.row, this.column);\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nexport default Arithmetical;\r\n\r\n\r\n/* else if (tempL.type == Type.DECIMAL && tempR.type == Type.ENTERO) {\r\n                    if (null != this.type) {\r\n                        switch (this.type) {\r\n                            case Type.SUMA:\r\n                                //return new Value(tempL.value + tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value,'+',tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.RESTA:\r\n                                //return new Value(tempL.value - tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value,'-',tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.MULTIPLICACION:\r\n                                //return new Value(tempL.value * tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value,'*',tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.DIVISION:\r\n                                //return new Value(tempL.value / tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                return new Value(new Count().generateInstruction(tempL.value,'/',tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.POTENCIA:\r\n                                //return new Value(Math.pow(tempL.value, tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                //return new Value(Math.pow(tempL.value, tempR.value), Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            case Type.MODULO:\r\n                                //return new Value(tempL.value % tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                                //return new Value(tempL.value % tempR.value, Type.DECIMAL, Type.VALOR, this.row, this.column);\r\n                            default:\r\n                                //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                                var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                                break;\r\n                        }\r\n                    }\r\n                    return null;\r\n                }*/\r\n\r\n\r\n/* else if (tempL.type == Type.CADENA && tempR.type == Type.ENTERO) {\r\n                    if (this.type == Type.SUMA) {\r\n                        //return new Value(tempL.value.toString() + tempR.value, Type.CADENA, Type.VALOR, this.row, this.column);\r\n                        return new Value(tempL.value.toString() + tempR.value, Type.CADENA, Type.VALOR, this.row, this.column);\r\n                    }\r\n                    //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                    var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                    return null;\r\n                } else if (tempL.type == Type.ENTERO && tempR.type == Type.CADENA) {\r\n                    if (this.type == Type.SUMA) {\r\n                        //return new Value(tempL.value + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                        return new Value(tempL.value + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                    }\r\n                    //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                    var err = new Count.putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                    return null;\r\n                } else if (tempL.type == Type.CADENA && tempR.type == Type.DECIMAL) {\r\n                    if (this.type == Type.SUMA) {\r\n                        //return new Value(tempL.value.toString() + tempR.value, Type.CADENA, Type.VALOR, this.row, this.column);\r\n                        return new Value(tempL.value.toString() + tempR.value, Type.CADENA, Type.VALOR, this.row, this.column);\r\n                    }\r\n                    //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                    var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                    return null;\r\n                } else if (tempL.type == Type.CADENA && tempR.type == Type.BOOL) {\r\n                    if (this.type == Type.SUMA) {\r\n                        //return new Value(tempL.value.toString() + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                        return new Value(tempL.value.toString() + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                    }\r\n                    //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                    var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                    return null;\r\n                } else if (tempL.type == Type.BOOL && tempR.type == Type.CADENA) {\r\n                    if (this.type == Type.SUMA) {\r\n                        //return new Value(tempL.value.toString() + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                        return new Value(tempL.value.toString() + tempR.value.toString(), Type.CADENA, Type.VALOR, this.row, this.column);\r\n                    }\r\n                    //olc2_p1.IDE.txtExec += \"Error Semantico, No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida. Linea: \" + this.row + \" this.Columna: \" + this.column + \"\\n\";\r\n                    var err = new Count().putError(Type.SEMANTICO, \"No se puede ejecutar la operacion \" + this.type.toString() + \", No reconocida o No Permitida.\", this.row, this.column);\r\n                    return null;\r\n                }*/","class Symbol {\r\n    \r\n    constructor(_ambit, _type, _type_exp, _type_var,  _type_c, _type_o, _id, _pointer,_tag){\r\n        this.type = _type;\r\n        this.type_exp = _type_exp;\r\n        this.type_var = _type_var;\r\n        this.type_c = _type_c;\r\n        this.type_o = _type_o;\r\n        this.id = _id;\r\n        this.ambit = _ambit;\r\n        this.pointer = _pointer\r\n        this.tag = _tag;\r\n    }\r\n}\r\n\r\nexport default Symbol;","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\n\nimport Node from './clases/Node';\nimport Logical from './clases/Logical';\nimport Relational from './clases/Relational';\nimport Arithmetical from './clases/Arithmetical';\nimport Value from './clases/Value';\nimport Print from './clases/Print';\nimport Declaration from './clases/Declaration.js';\nimport Function from './clases/Function';\nimport Return from './clases/Return';\nimport Call from './clases/Call';\nimport IfList from './clases/IfList';\nimport Else from './clases/Else';\nimport If from './clases/If';\nimport While from './clases/While';\nimport DoWhile from './clases/DoWhile';\nimport Assignment from './clases/Assignment';\nimport Switch from './clases/Switch';\nimport For from './clases/For';\nimport Unary from './clases/Unary'; \nimport Break from './clases/Break';\nimport Continue from './clases/Continue';\nimport Cast from './clases/Cast';\nimport Type from './clases/Type';\nimport Count from './clases/Counters';\nimport SymbolTable from './clases/SymbolTable';\n\nexport var interprete = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[2,22],$V1=[1,13],$V2=[1,16],$V3=[2,35],$V4=[1,20],$V5=[1,29],$V6=[1,26],$V7=[1,27],$V8=[1,28],$V9=[1,30],$Va=[1,24],$Vb=[1,51],$Vc=[1,53],$Vd=[1,60],$Ve=[1,61],$Vf=[1,48],$Vg=[1,49],$Vh=[1,50],$Vi=[1,63],$Vj=[1,55],$Vk=[1,56],$Vl=[1,57],$Vm=[1,58],$Vn=[1,59],$Vo=[9,10,13,19,31,43,83,84],$Vp=[9,10,13,19,31,43,44,83,84],$Vq=[13,31],$Vr=[2,5,8,12,50,51,58,59,60,70,72,73,76,77,78,79,80,87],$Vs=[2,8,12,50,51,58,59,60,72,73,76,77,78,79,80,87],$Vt=[1,89],$Vu=[1,84],$Vv=[1,83],$Vw=[1,80],$Vx=[1,82],$Vy=[1,85],$Vz=[1,86],$VA=[1,87],$VB=[1,88],$VC=[1,99],$VD=[1,94],$VE=[1,96],$VF=[1,97],$VG=[1,101],$VH=[1,102],$VI=[1,106],$VJ=[2,8,12,50,51,58,59,60,70,72,73,76,77,78,79,80,87],$VK=[1,116],$VL=[1,117],$VM=[13,14,19,31,42,43,45,83,84,88,90,92,93,94,96,97,98,99],$VN=[1,121],$VO=[13,14,19,31,42,43,45,83,84,88,90,92,93,94,96,97,98,99,101,102,103,104],$VP=[2,135],$VQ=[1,124],$VR=[1,125],$VS=[13,19,83,84],$VT=[2,46],$VU=[1,136],$VV=[19,31],$VW=[1,161],$VX=[13,14,19,31,83,84,88],$VY=[13,14,19,31,83,84,88,90],$VZ=[13,14,19,31,83,84,88,90,92,93,94],$V_=[13,14,19,31,42,43,83,84,88,90,92,93,94,96,97],$V$=[13,14,19,31,42,43,45,83,84,88,90,92,93,94,96,97,98,99,101,102,103],$V01=[12,76,77];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"ini\":3,\"FUNCTION\":4,\"EOF\":5,\"DEFTYPES\":6,\"restype\":7,\"id\":8,\"igual\":9,\"corchetea\":10,\"ATTRIB\":11,\"corchetec\":12,\"coma\":13,\"dospuntos\":14,\"TYPES\":15,\"INSTRUCTIONSG\":16,\"INSTRUCTIONG\":17,\"DECLARATION\":18,\"puntocoma\":19,\"ASSIGNMENT\":20,\"IF\":21,\"SWITCH\":22,\"WHILE\":23,\"DOWHILE\":24,\"FOR\":25,\"PRINT\":26,\"CALLF\":27,\"resfunction\":28,\"parenta\":29,\"LISTAPARAMETROS\":30,\"parentc\":31,\"RETURNT\":32,\"BLOCK\":33,\"TYPESF\":34,\"resvoid\":35,\"TYPE\":36,\"resnumber\":37,\"resboolean\":38,\"resstring\":39,\"resundefined\":40,\"resarray\":41,\"menor\":42,\"mayor\":43,\"llavea\":44,\"llavec\":45,\"BETHA\":46,\"LISTAPARAMETROSPRIMA\":47,\"ALPHA\":48,\"TYPEVAR\":49,\"resconst\":50,\"reslet\":51,\"LISTID\":52,\"ASSVALUE\":53,\"EXPRT\":54,\"BLOCK2\":55,\"INSTRUCTIONS\":56,\"INSTRUCTION\":57,\"resbreak\":58,\"rescontinue\":59,\"resreturn\":60,\"EXP\":61,\"ASSRECURSIVE\":62,\"LISTACCESS\":63,\"punto\":64,\"CONTENTAS\":65,\"DECINC\":66,\"PARAMETROUNITARIO\":67,\"CELSE\":68,\"ELSE\":69,\"reselse\":70,\"IFF\":71,\"resif\":72,\"resswitch\":73,\"CASES\":74,\"DEFAULT\":75,\"rescase\":76,\"resdefault\":77,\"reswhile\":78,\"resdo\":79,\"resfor\":80,\"DEC\":81,\"FINON\":82,\"resof\":83,\"resin\":84,\"incremento\":85,\"decremento\":86,\"resprint\":87,\"or\":88,\"EXPRT2\":89,\"and\":90,\"EXPR\":91,\"diferente\":92,\"identico\":93,\"referencias\":94,\"EXPR1\":95,\"mayorigual\":96,\"menorigual\":97,\"suma\":98,\"resta\":99,\"EXP1\":100,\"multiplicacion\":101,\"slash\":102,\"modulo\":103,\"potencia\":104,\"EXP2\":105,\"not\":106,\"EXP3\":107,\"number\":108,\"DECINCEXP\":109,\"cadena\":110,\"caracter\":111,\"restrue\":112,\"resfalse\":113,\"PARAMETERS\":114,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",7:\"restype\",8:\"id\",9:\"igual\",10:\"corchetea\",12:\"corchetec\",13:\"coma\",14:\"dospuntos\",19:\"puntocoma\",28:\"resfunction\",29:\"parenta\",31:\"parentc\",35:\"resvoid\",37:\"resnumber\",38:\"resboolean\",39:\"resstring\",40:\"resundefined\",41:\"resarray\",42:\"menor\",43:\"mayor\",44:\"llavea\",45:\"llavec\",50:\"resconst\",51:\"reslet\",58:\"resbreak\",59:\"rescontinue\",60:\"resreturn\",64:\"punto\",70:\"reselse\",72:\"resif\",73:\"resswitch\",76:\"rescase\",77:\"resdefault\",78:\"reswhile\",79:\"resdo\",80:\"resfor\",83:\"resof\",84:\"resin\",85:\"incremento\",86:\"decremento\",87:\"resprint\",88:\"or\",90:\"and\",92:\"diferente\",93:\"identico\",94:\"referencias\",96:\"mayorigual\",97:\"menorigual\",98:\"suma\",99:\"resta\",101:\"multiplicacion\",102:\"slash\",103:\"modulo\",104:\"potencia\",106:\"not\",108:\"number\",110:\"cadena\",111:\"caracter\",112:\"restrue\",113:\"resfalse\"},\nproductions_: [0,[3,2],[6,6],[11,5],[11,3],[16,2],[16,1],[16,1],[17,1],[17,2],[17,2],[17,1],[17,1],[17,1],[17,1],[17,2],[17,1],[17,2],[17,2],[4,7],[4,6],[32,2],[32,0],[34,1],[34,1],[36,1],[36,1],[36,1],[36,1],[36,1],[15,4],[15,3],[15,1],[30,2],[47,2],[47,0],[46,3],[48,4],[49,1],[49,1],[18,2],[52,6],[52,4],[52,4],[52,2],[53,2],[53,0],[33,2],[55,2],[55,1],[56,2],[56,1],[57,2],[57,2],[57,1],[57,1],[57,1],[57,2],[57,1],[57,2],[57,2],[57,2],[57,2],[57,3],[57,2],[57,1],[20,2],[63,6],[63,3],[63,1],[62,1],[62,4],[65,2],[65,1],[67,3],[21,2],[68,3],[68,1],[69,2],[69,0],[71,3],[22,6],[74,5],[74,4],[74,4],[74,3],[75,3],[75,2],[75,0],[23,3],[24,4],[25,10],[25,7],[81,1],[81,1],[81,0],[82,1],[82,1],[66,1],[66,1],[26,2],[54,3],[54,1],[89,3],[89,1],[91,3],[91,3],[91,3],[91,1],[95,3],[95,3],[95,3],[95,3],[95,1],[61,3],[61,3],[61,1],[100,3],[100,3],[100,3],[100,3],[100,1],[105,2],[105,1],[107,2],[107,2],[107,3],[107,1],[107,1],[107,1],[107,1],[107,2],[107,1],[109,1],[109,1],[109,0],[27,4],[114,3],[114,1],[114,0]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n /*add_traduction($$[$0-1]); console.log(traduction); /*for (let entry of structures) {console.log(entry); }*/ \nbreak;\ncase 2:\n this.$ = $$[$0-5] + \" \" + $$[$0-4] + \" \" + $$[$0-3] + \" \" + $$[$0-2] + \"\\n    \" + $$[$0-1] + \"\\n\" + $$[$0] + \"\\n\"; \nbreak;\ncase 3:\n this.$ = $$[$0-4] + $$[$0-3] + \"\\n    \" + $$[$0-2] + $$[$0-1] + \" \" + $$[$0]; /*structures[structures.length - 1].atributes.push({name: $$[$0-2], type: $$[$0]});*/ \nbreak;\ncase 4:\n this.$ = $$[$0-2] + $$[$0-1] + \" \" + $$[$0]; /*structures[structures.length - 1].atributes.push({name: $$[$0-2], type: $$[$0]});*/ \nbreak;\ncase 5: case 66: case 75: case 78: case 100:\n this.$ = $$[$0-1] + $$[$0]; \nbreak;\ncase 6: case 8: case 11: case 13: case 14: case 16: case 21: case 23: case 33: case 54: case 55: case 56: case 58: case 69: case 70: case 73: case 77: case 96: case 97: case 102: case 104: case 108: case 113: case 116: case 121: case 123: case 127: case 128: case 129: case 130: case 132: case 133: case 134: case 138:\n this.$ = $$[$0]; \nbreak;\ncase 9: case 10: case 17: case 18: case 52: case 53: case 87:\n this.$ = $$[$0-1] + $$[$0] + \"\\n\"; \nbreak;\ncase 12:\n this.$ = $$[$0] + \"\\n\"; \nbreak;\ncase 15: case 48: case 57:\n this.$ = $$[$0-1]; \nbreak;\ncase 19:\n this.$ = new Function(0,$$[$0-1].id,$$[$0-1].access,$$[$0-1].type,$$[$0-5],$$[$0-3],$$[$0],0,'m'+count.newId(),this._$.first_line,this._$.first_column); \nbreak;\ncase 20:\n this.$ = new Function(0,$$[$0-1].id,$$[$0-5].access,$$[$0-5].type,$$[$0-4],null,$$[$0],0,'m'+count.newId(),this._$.first_line,this._$.first_column); \nbreak;\ncase 22:\n this.$ = \"void\"; \nbreak;\ncase 24:\n this.$ = {id: $$[$0], access: Type.VOID, type: Type.VALOR}; \nbreak;\ncase 25:\n this.$ = Type.ENTERO; \nbreak;\ncase 26:\n this.$ = Type.BOOL; \nbreak;\ncase 27:\n this.$ = Type.CARACTER; \nbreak;\ncase 28: case 29:\n this.$ = Type.OBJETO; \nbreak;\ncase 30:\n this.$ = {id: $$[$0-1], access: Type.VECTOR, type: Type.PRIMITIVO}; \nbreak;\ncase 31:\n this.$ = {id: $$[$0-2], access: Type.VECTOR, type: Type.OBJETO}; \nbreak;\ncase 32:\n this.$ = {id: $$[$0], access: Type.VALOR, type: Type.OBJETO}; \nbreak;\ncase 34:\n this.$ = $$[$0-2];\nbreak;\ncase 36:\n this.$ = []; this.$.push(new Declaration([$$[$0-2]],null,$$[$0].id,$$[$0].access,Type.LOCAL,Type.VAR,Type.PRIMITIVO,0,this._$.first_line,this._$.first_column)); \nbreak;\ncase 37:\n this.$ = $$[$0-4]; this.$.push(new Declaration([$$[$0-2]],null,$$[$0].id,$$[$0].access,Type.LOCAL,Type.VAR,Type.PRIMITIVO,0,this._$.first_line,this._$.first_column)); \nbreak;\ncase 38: case 39: case 93: case 94: case 98: case 99:\nthis.$ = $$[$0];\nbreak;\ncase 40: case 44: case 45: case 72: case 122: case 124: case 125: case 131:\n this.$ = $$[$0-1] + \" \" + $$[$0]; \nbreak;\ncase 41:\n this.$ = $$[$0-5] + $$[$0-4] + \" \" + $$[$0-3] + $$[$0-2] + \" \" + $$[$0-1] + $$[$0];  \nbreak;\ncase 42:\n this.$ = $$[$0-3] + $$[$0-2] + \" \" + $$[$0-1] + \" \" + $$[$0]; \nbreak;\ncase 43:\n this.$ = $$[$0-3] + $$[$0-2] + \" \" + $$[$0-1] + \" \" + $$[$0];  \nbreak;\ncase 46: case 79: case 135: case 139:\n this.$ = \"\"; \nbreak;\ncase 47:\n this.$ = $$[$0];  \nbreak;\ncase 49:\n this.$ = [];\nbreak;\ncase 50:\n $$[$0] = \"\\n\" + $$[$0]; this.$ =  $$[$0-1] + $$[$0]; \nbreak;\ncase 51:\n this.$ = \"\\n\" + $$[$0]; \nbreak;\ncase 59: case 60: case 61: case 62: case 64:\n this.$ = $$[$0-1] + $$[$0] ; \nbreak;\ncase 63:\n this.$ = $$[$0-2] + $$[$0-1] + $$[$0] ; \nbreak;\ncase 65:\n try{ errores.push( {error: yytext, type: 'SINTACTICO', line: _$[$0].first_line, column: _$[$0].first_column} ); }catch(e){} \nbreak;\ncase 67:\n this.$ = $$[$0-5] + $$[$0-4] + $$[$0-3] + $$[$0-2] + $$[$0-1] + $$[$0];  \nbreak;\ncase 68:\n this.$ = $$[$0-2] + $$[$0-1] + $$[$0];  \nbreak;\ncase 71:\n this.$ = $$[$0-3] + $$[$0-2] + \" \" + $$[$0-1] + $$[$0];\nbreak;\ncase 74:\n this.$ = $$[$0-2] + \" \" + $$[$0-1] + \" \" + $$[$0];  \nbreak;\ncase 76:\n this.$ = $$[$0-2] + \"\\n\" + $$[$0-1] + \" \" + $$[$0]; \nbreak;\ncase 80: case 105: case 106: case 107: case 109: case 110: case 111: case 112: case 114: case 115: case 117: case 118: case 119: case 120: case 126: case 137:\n this.$ = $$[$0-2] + \" \" + $$[$0-1] + \" \" + $$[$0]; \nbreak;\ncase 81:\n  this.$ = $$[$0-5] + \" \" + $$[$0-4] + \" \" + $$[$0-3] + \"\\n\" + $$[$0-2] + $$[$0-1] + \"\\n\" + $$[$0]; \nbreak;\ncase 82:\n this.$ = $$[$0-4] + \" \" + $$[$0-3] + \" \" + $$[$0-2] + \"\\n\" + $$[$0-1] + $$[$0] + \"\\n\"; \nbreak;\ncase 83:\n this.$ = $$[$0-3] + $$[$0-2] + \" \" + $$[$0-1] + $$[$0]; \nbreak;\ncase 84:\n this.$ = $$[$0-3] + \" \" + $$[$0-2] + $$[$0-1] + \"\\n    \" + $$[$0] ; \nbreak;\ncase 85:\n this.$ = $$[$0-2] + \" \" + $$[$0-1] + $$[$0]; \nbreak;\ncase 86:\n this.$ = $$[$0-2] + $$[$0-1] + \"\\n\" + $$[$0]; \nbreak;\ncase 89:\n this.$ = $$[$0-2] + $$[$0-1] + $$[$0]; \nbreak;\ncase 90:\n this.$ = $$[$0-3] + $$[$0-2] + $$[$0-1] + $$[$0]; \nbreak;\ncase 91:\n this.$ = $$[$0-9] + $$[$0-8] + $$[$0-7] + $$[$0-6] + \" \" + $$[$0-5] + \" \" + $$[$0-4] + \" \" + $$[$0-3] + $$[$0-2] + $$[$0-1] + $$[$0];  \nbreak;\ncase 92:\n this.$ = $$[$0-6] + $$[$0-5] + $$[$0-4] + $$[$0-3] + $$[$0-2] + $$[$0-1] + $$[$0] ;  \nbreak;\ncase 95:\nthis.$ = \"\";\nbreak;\ncase 101: case 103:\n this.$ = $$[$0-2] + \" \" + $$[$0-1]; \nbreak;\ncase 136:\n this.$ = $$[$0-3] + \" \" + $$[$0-2] + \" \" + $$[$0-1]; \nbreak;\n}\n},\ntable: [{3:1,4:2,28:[1,3]},{1:[3]},{5:[1,4]},{8:[1,5]},{1:[2,1]},{29:[1,6]},{8:[1,10],30:7,31:[1,8],46:9},{31:[1,11]},{10:$V0,14:$V1,32:12},{13:$V2,31:$V3,47:14,48:15},{14:[1,17]},{10:$V0,14:$V1,32:18},{10:$V4,33:19},{8:$V5,15:22,34:21,35:[1,23],36:25,37:$V6,38:$V7,39:$V8,40:$V9,41:$Va},{31:[2,33]},{13:$V2,31:$V3,47:31,48:15},{8:[1,32]},{8:$V5,15:33,36:25,37:$V6,38:$V7,39:$V8,40:$V9,41:$Va},{10:$V4,33:34},{5:[2,20]},{2:$Vb,8:$Vc,12:[1,37],18:39,20:40,21:41,22:42,23:43,24:44,25:45,26:46,27:47,49:52,50:$Vd,51:$Ve,55:35,56:36,57:38,58:$Vf,59:$Vg,60:$Vh,68:54,71:62,72:$Vi,73:$Vj,78:$Vk,79:$Vl,80:$Vm,87:$Vn},{10:[2,21]},{10:[2,23]},{10:[2,24]},{42:[1,64]},o($Vo,[2,32],{44:[1,65]}),o($Vp,[2,25]),o($Vp,[2,26]),o($Vp,[2,27]),o($Vp,[2,28]),o($Vp,[2,29]),{31:[2,34]},{14:[1,66]},o($Vq,[2,36]),{5:[2,19]},o($Vr,[2,47]),{2:$Vb,8:$Vc,12:[1,67],18:39,20:40,21:41,22:42,23:43,24:44,25:45,26:46,27:47,49:52,50:$Vd,51:$Ve,57:68,58:$Vf,59:$Vg,60:$Vh,68:54,71:62,72:$Vi,73:$Vj,78:$Vk,79:$Vl,80:$Vm,87:$Vn},o($Vr,[2,49]),o($Vs,[2,51]),{19:[1,69]},{19:[1,70]},o($Vs,[2,54]),o($Vs,[2,55]),o($Vs,[2,56]),{19:[1,71]},o($Vs,[2,58]),{19:[1,72]},{19:[1,73]},{19:[1,74]},{19:[1,75]},{8:$Vt,19:[1,77],27:90,29:$Vu,61:76,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},o($Vs,[2,65]),{8:[1,92],52:91},{9:$VC,29:$VD,44:$VE,62:93,63:95,64:$VF,65:98,66:100,85:$VG,86:$VH},o($Vs,[2,79],{69:103,70:[1,104]}),{29:$VI,67:105},{29:$VI,67:107},{10:$V4,33:108},{29:[1,109]},{29:$VI,67:110},{8:[2,38]},{8:[2,39]},o($VJ,[2,77]),{29:$VI,67:111},{8:$V5,15:112,36:25,37:$V6,38:$V7,39:$V8,40:$V9,41:$Va},{45:[1,113]},{8:$V5,15:114,36:25,37:$V6,38:$V7,39:$V8,40:$V9,41:$Va},o($Vr,[2,48]),o($Vs,[2,50]),o($Vs,[2,52]),o($Vs,[2,53]),o($Vs,[2,57]),o($Vs,[2,59]),o($Vs,[2,60]),o($Vs,[2,61]),o($Vs,[2,62]),{19:[1,115],98:$VK,99:$VL},o($Vs,[2,64]),o($VM,[2,116],{101:[1,118],102:[1,119],103:[1,120],104:$VN}),o($VO,[2,121]),{8:$Vt,27:90,29:$Vu,99:$Vv,105:122,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},o($VO,[2,123]),o($VO,$VP,{109:123,85:$VQ,86:$VR}),{108:[1,126]},{8:$Vt,27:90,29:$Vu,54:127,61:131,89:128,91:129,95:130,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},o($VO,[2,127]),o($VO,[2,128]),o($VO,[2,129]),o($VO,[2,130]),o($VO,$VP,{109:132,29:$VD,85:$VQ,86:$VR}),o($VO,[2,132]),o([19,83,84],[2,40],{13:[1,133]}),o($VS,$VT,{53:135,9:$VU,14:[1,134]}),{19:[2,66]},o($Vq,[2,139],{100:78,105:79,107:81,27:90,89:128,91:129,95:130,61:131,114:137,54:138,8:$Vt,29:$Vu,99:$Vv,106:$Vw,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB}),{19:[2,70]},{8:$Vt,27:90,29:$Vu,61:139,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{8:[1,140]},{19:[2,69]},{8:$Vt,27:90,29:$Vu,54:141,61:131,89:128,91:129,95:130,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{19:[2,73]},o($VV,[2,98]),o($VV,[2,99]),o($Vs,[2,75]),{10:$V4,33:143,71:142,72:$Vi},{10:[1,144]},{8:$Vt,27:90,29:$Vu,54:145,61:131,89:128,91:129,95:130,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{10:$V4,33:146},{78:[1,147]},{8:[1,151],18:149,19:[2,95],20:150,49:52,50:$Vd,51:$Ve,81:148},{19:[2,100]},{10:$V4,33:152},{43:[1,153]},o($Vo,[2,31]),o($Vq,[2,37]),o($Vs,[2,63]),{8:$Vt,27:90,29:$Vu,61:154,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{8:$Vt,27:90,29:$Vu,61:155,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{8:$Vt,27:90,29:$Vu,99:$Vv,100:156,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{8:$Vt,27:90,29:$Vu,99:$Vv,100:157,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{8:$Vt,27:90,29:$Vu,99:$Vv,100:158,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{8:$Vt,27:90,29:$Vu,99:$Vv,100:159,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},o($VO,[2,122]),o($VO,[2,124]),o($VO,[2,133]),o($VO,[2,134]),o($VO,[2,125]),{31:[1,160],88:$VW},o($VX,[2,102],{90:[1,162]}),o($VY,[2,104],{92:[1,163],93:[1,164],94:[1,165]}),o($VZ,[2,108],{42:[1,167],43:[1,166],96:[1,168],97:[1,169]}),o($V_,[2,113],{98:$VK,99:$VL}),o($VO,[2,131]),{8:[1,170]},{8:$V5,15:171,36:25,37:$V6,38:$V7,39:$V8,40:$V9,41:$Va},o($VS,[2,44]),{8:$Vt,27:90,29:$Vu,54:172,61:131,89:128,91:129,95:130,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{13:[1,174],31:[1,173]},o($Vq,[2,138],{88:$VW}),{45:[1,175],98:$VK,99:$VL},{9:$VC,44:[1,176],63:177,64:$VF,65:98,66:100,85:$VG,86:$VH},{19:[2,72],88:$VW},o($VJ,[2,76]),o($Vs,[2,78]),{74:178,76:[1,179]},{31:[1,180],88:$VW},o($Vs,[2,89]),{29:$VI,67:181},{19:[1,182]},{19:[2,93],82:183,83:[1,184],84:[1,185]},{19:[2,94]},{9:$VC,44:$VE,62:93,63:95,64:$VF,65:98,66:100,85:$VG,86:$VH},o($VJ,[2,80]),o($Vo,[2,30]),o($VM,[2,114]),o($VM,[2,115]),o($V$,[2,117],{104:$VN}),o($V$,[2,118],{104:$VN}),o($V$,[2,119],{104:$VN}),o($V$,[2,120],{104:$VN}),o($VO,[2,126]),{8:$Vt,27:90,29:$Vu,54:186,61:131,89:128,91:129,95:130,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{8:$Vt,27:90,29:$Vu,61:131,89:187,91:129,95:130,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{8:$Vt,27:90,29:$Vu,61:131,91:188,95:130,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{8:$Vt,27:90,29:$Vu,61:131,91:189,95:130,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{8:$Vt,27:90,29:$Vu,61:131,91:190,95:130,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{8:$Vt,27:90,29:$Vu,61:131,95:191,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{8:$Vt,27:90,29:$Vu,61:131,95:192,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{8:$Vt,27:90,29:$Vu,61:131,95:193,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{8:$Vt,27:90,29:$Vu,61:131,95:194,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},o($VS,$VT,{53:196,9:$VU,14:[1,195]}),o($VS,$VT,{53:197,9:$VU}),o($VS,[2,45],{88:$VW}),o($VO,[2,136]),{8:$Vt,27:90,29:$Vu,54:198,61:131,89:128,91:129,95:130,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{9:$VC,63:199,64:$VF,65:98,66:100,85:$VG,86:$VH},{8:$Vt,27:90,29:$Vu,61:200,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{19:[2,68]},{12:[2,88],75:201,76:[1,202],77:[1,203]},{8:$Vt,27:90,29:$Vu,54:204,61:131,89:128,91:129,95:130,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},o([10,19],[2,74]),{19:[2,90]},{8:$Vt,27:90,29:$Vu,54:205,61:131,89:128,91:129,95:130,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{8:[1,206]},{8:[2,96]},{8:[2,97]},o($VX,[2,101]),o($VY,[2,103]),o($VZ,[2,105]),o($VZ,[2,106]),o($VZ,[2,107]),o($V_,[2,109]),o($V_,[2,110]),o($V_,[2,111]),o($V_,[2,112]),{8:$V5,15:207,36:25,37:$V6,38:$V7,39:$V8,40:$V9,41:$Va},o($VS,[2,43]),o($VS,[2,42]),o($Vq,[2,137],{88:$VW}),{19:[2,71]},{45:[1,208],98:$VK,99:$VL},{12:[1,209]},{8:$Vt,27:90,29:$Vu,54:210,61:131,89:128,91:129,95:130,99:$Vv,100:78,105:79,106:$Vw,107:81,108:$Vx,110:$Vy,111:$Vz,112:$VA,113:$VB},{14:[1,211]},{14:[1,212],88:$VW},{19:[1,213],88:$VW},{31:[1,214]},o($VS,$VT,{53:215,9:$VU}),{9:$VC,63:216,64:$VF,65:98,66:100,85:$VG,86:$VH},o($Vs,[2,81]),{14:[1,217],88:$VW},{2:$Vb,8:$Vc,12:[2,87],18:39,20:40,21:41,22:42,23:43,24:44,25:45,26:46,27:47,49:52,50:$Vd,51:$Ve,56:218,57:38,58:$Vf,59:$Vg,60:$Vh,68:54,71:62,72:$Vi,73:$Vj,78:$Vk,79:$Vl,80:$Vm,87:$Vn},o($V01,[2,85],{57:38,18:39,20:40,21:41,22:42,23:43,24:44,25:45,26:46,27:47,49:52,68:54,71:62,56:219,2:$Vb,8:$Vc,50:$Vd,51:$Ve,58:$Vf,59:$Vg,60:$Vh,72:$Vi,73:$Vj,78:$Vk,79:$Vl,80:$Vm,87:$Vn}),{8:[1,220]},{10:$V4,33:221},o($VS,[2,41]),{19:[2,67]},o($V01,[2,83],{57:38,18:39,20:40,21:41,22:42,23:43,24:44,25:45,26:46,27:47,49:52,68:54,71:62,56:222,2:$Vb,8:$Vc,50:$Vd,51:$Ve,58:$Vf,59:$Vg,60:$Vh,72:$Vi,73:$Vj,78:$Vk,79:$Vl,80:$Vm,87:$Vn}),{2:$Vb,8:$Vc,12:[2,86],18:39,20:40,21:41,22:42,23:43,24:44,25:45,26:46,27:47,49:52,50:$Vd,51:$Ve,57:68,58:$Vf,59:$Vg,60:$Vh,68:54,71:62,72:$Vi,73:$Vj,78:$Vk,79:$Vl,80:$Vm,87:$Vn},o($V01,[2,84],{18:39,20:40,21:41,22:42,23:43,24:44,25:45,26:46,27:47,49:52,68:54,71:62,57:68,2:$Vb,8:$Vc,50:$Vd,51:$Ve,58:$Vf,59:$Vg,60:$Vh,72:$Vi,73:$Vj,78:$Vk,79:$Vl,80:$Vm,87:$Vn}),{66:223,85:$VG,86:$VH},o($Vs,[2,92]),o($V01,[2,82],{18:39,20:40,21:41,22:42,23:43,24:44,25:45,26:46,27:47,49:52,68:54,71:62,57:68,2:$Vb,8:$Vc,50:$Vd,51:$Ve,58:$Vf,59:$Vg,60:$Vh,72:$Vi,73:$Vj,78:$Vk,79:$Vl,80:$Vm,87:$Vn}),{31:[1,224]},{10:$V4,33:225},o($Vs,[2,91])],\ndefaultActions: {4:[2,1],14:[2,33],19:[2,20],21:[2,21],22:[2,23],23:[2,24],31:[2,34],34:[2,19],60:[2,38],61:[2,39],93:[2,66],95:[2,70],98:[2,69],100:[2,73],110:[2,100],150:[2,94],177:[2,68],181:[2,90],184:[2,96],185:[2,97],199:[2,71],216:[2,67]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse (input) {\n    var self = this,\n        stack = [0],\n        tstack = [], // token stack\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    var args = lstack.slice.call(arguments, 1);\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    // copy state\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack (n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n_token_stack:\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length - 1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n_handle_error:\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var error_rule_depth;\n            var errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                var stack_probe = stack.length - 1;\n                var depth = 0;\n\n                // try to recover from error\n                for(;;) {\n                    // check for error recovery rule in this state\n                    if ((TERROR.toString()) in table[state]) {\n                        return depth;\n                    }\n                    if (state === 0 || stack_probe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n                    stack_probe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stack_probe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n\n                // Report error\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == EOF ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected,\n                    recoverable: (error_rule_depth !== false)\n                });\n            } else if (preErrorSymbol !== EOF) {\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (error_rule_depth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n            popStack(error_rule_depth);\n\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yyloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2:\n                // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                if (ranges) {\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\n                }\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3:\n                // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n\n\n//in file of react i need to put all import to start file and export the function of parser\n\n/*\nimport Node from './clases/Node';\nimport Logical from './clases/Logical';\nimport Relational from './clases/Relational';\nimport Arithmetical from './clases/Arithmetical';\nimport Value from './clases/Value';\nimport Print from './clases/Print';\nimport Declaration from './clases/Declaration.js';\nimport Function from './clases/Function';\nimport Return from './clases/Return';\nimport Call from './clases/Call';\nimport IfList from './clases/IfList';\nimport Else from './clases/Else';\nimport If from './clases/If';\nimport While from './clases/While';\nimport DoWhile from './clases/DoWhile';\nimport Assignment from './clases/Assignment';\nimport Switch from './clases/Switch';\nimport For from './clases/For';\nimport Unary from './clases/Unary'; \nimport Break from './clases/Break';\nimport Continue from './clases/Continue';\nimport Cast from './clases/Cast';\nimport Type from './clases/Type';\nimport Count from './clases/Counters';\nimport SymbolTable from './clases/SymbolTable';\n*/\n\n     var symbolt = new SymbolTable(null);\n     var count = new Count();\n     var errores = [];\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-sensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:// comentario simple línea\nbreak;\ncase 1:// comentario multiple líneas\nbreak;\ncase 2:return 85;\nbreak;\ncase 3:return 86;\nbreak;\ncase 4:return 98;\nbreak;\ncase 5:return 99;   \nbreak;\ncase 6:return 101;\nbreak;\ncase 7:return 104;\nbreak;\ncase 8:return 102;\nbreak;\ncase 9:return 103;\nbreak;\ncase 10:return 96;\nbreak;\ncase 11:return 97;\nbreak;\ncase 12:return 42;\nbreak;\ncase 13:return 43;\nbreak;\ncase 14:return 93;\nbreak;\ncase 15:return 94;\nbreak;\ncase 16:return 92;\nbreak;\ncase 17:return 44;     \nbreak;\ncase 18:return 45;\nbreak;\ncase 19:return 10;     \nbreak;\ncase 20:return 12;\nbreak;\ncase 21:return 29;     \nbreak;\ncase 22:return 31;\nbreak;\ncase 23:return 13;\nbreak;\ncase 24:return 64;\nbreak;\ncase 25:return 9;\nbreak;\ncase 26:return 19;\nbreak;\ncase 27:return 14;\nbreak;\ncase 28:return 106;\nbreak;\ncase 29:return 90;\nbreak;\ncase 30:return 88;\nbreak;\ncase 31:return 40;\nbreak;\ncase 32:return 28;\nbreak;\ncase 33:return 41;\nbreak;\ncase 34:return 37;\nbreak;\ncase 35:return 51;\nbreak;\ncase 36:return 50;\nbreak;\ncase 37:return 7;\nbreak;\ncase 38:return 39;\nbreak;\ncase 39:return 112;\nbreak;\ncase 40:return 113;\nbreak;\ncase 41:return 72;\nbreak;\ncase 42:return 70;\nbreak;\ncase 43:return 73;\nbreak;\ncase 44:return 76;\nbreak;\ncase 45:return 77;\nbreak;\ncase 46:return 58;\nbreak;\ncase 47:return 59;\nbreak;\ncase 48:return 60;\nbreak;\ncase 49:return 87;\nbreak;\ncase 50:return 35;\nbreak;\ncase 51:return 80;\nbreak;\ncase 52:return 78;\nbreak;\ncase 53:return 79;\nbreak;\ncase 54:return 38;\nbreak;\ncase 55:return 84;\nbreak;\ncase 56:return 83;\nbreak;\ncase 57:\nbreak;\ncase 58:return 108;\nbreak;\ncase 59:return 110;\nbreak;\ncase 60:return 8;\nbreak;\ncase 61:return 5;\nbreak;\ncase 62: try{ errores.push( {error: yy_.yytext, type: 'LEXICO', line: yy_.yylloc.first_line, column: yy_.yylloc.first_column} ); }catch(e){} \nbreak;\n}\n},\nrules: [/^(?:\\/\\/.*)/,/^(?:[/][*][^*]*[*]+([^/*][^*]*[*]+)*[/])/,/^(?:\\+\\+)/,/^(?:--)/,/^(?:\\+)/,/^(?:-)/,/^(?:\\*)/,/^(?:\\^)/,/^(?:\\/)/,/^(?:%)/,/^(?:>=)/,/^(?:<=)/,/^(?:<)/,/^(?:>)/,/^(?:==)/,/^(?:===)/,/^(?:!=)/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:,)/,/^(?:\\.)/,/^(?:=)/,/^(?:;)/,/^(?::)/,/^(?:!)/,/^(?:&&)/,/^(?:\\|\\|)/,/^(?:undefined\\b)/,/^(?:function\\b)/,/^(?:Array\\b)/,/^(?:number\\b)/,/^(?:let\\b)/,/^(?:const\\b)/,/^(?:type\\b)/,/^(?:string\\b)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:if\\b)/,/^(?:else\\b)/,/^(?:switch\\b)/,/^(?:case\\b)/,/^(?:default\\b)/,/^(?:break\\b)/,/^(?:continue\\b)/,/^(?:return\\b)/,/^(?:console\\.log\\b)/,/^(?:void\\b)/,/^(?:for\\b)/,/^(?:while\\b)/,/^(?:do\\b)/,/^(?:boolean\\b)/,/^(?:in\\b)/,/^(?:of\\b)/,/^(?:[ \\r\\t\\n]+)/,/^(?:[0-9]+\\.[0-9]+\\b|[0-9]+\\b)/,/^(?:([\\\"](\\\\\"|[^\"])*[^\\\\][\\\"])|[\\\"][\\\"]|'[^]')/,/^(?:([a-zA-Z\"_\"])[a-z0-9A-Z\"_\"\"ñ\"\"Ñ\"]*)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = interprete;\nexports.Parser = interprete.Parser;\nexports.parse = function () { return interprete.parse.apply(interprete, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","const Type = require('./Type');\r\nconst Count = require('./Counters');\r\nvar Logical = require('./Logical');\r\nvar Relational = require('./Relational');\r\nvar Arithmetical = require('./Arithmetical');\r\nvar Value = require('./Value');\r\n\r\nclass Print {\r\n    constructor(val, _type, _type_exp, _row, _column) {\r\n        this.value = val;\r\n        this.type = _type;\r\n        this.type_exp = _type_exp;\r\n        this.row = _row;\r\n        this.column = _column;\r\n    }\r\n\r\n    operate(tab) {\r\n        var count = new Count();\r\n        count.putInstruction('##Operando la expresion de Print');\r\n        var e = null;\r\n        if (!Array.isArray(this.value)) {\r\n            e = this.value.operate(tab);\r\n        } else {\r\n            var e = this.value[0].operate(tab);       ///////////////////aca se debe modificar para la recursion de llamadas\r\n        }\r\n\r\n        if (e != null) {\r\n            if (Type.VALOR == e.type_exp && e.type != Type.CADENA) {\r\n                var type = '';\r\n                switch (e.type) {\r\n                    case Type.DECIMAL:\r\n                        type = '%d'\r\n                        break;\r\n                    case Type.ENTERO:\r\n                        type = '%i'\r\n                        break;\r\n                    case Type.CARACTER:\r\n                        type = '%c'\r\n                        break;\r\n                    case Type.BOOL:\r\n                        var l = count.getNextLabel();\r\n                        var l2 = count.getNextLabel();\r\n                        count.generateIf2(e.value,'==','0',l);\r\n                        count.putInstruction('print(\"%c\",116);');\r\n                        count.putInstruction('print(\"%c\",114);');\r\n                        count.putInstruction('print(\"%c\",117);');\r\n                        count.putInstruction('print(\"%c\",101);');\r\n                        count.putInstruction('goto '+l2+';');\r\n                        count.putInstruction(l+':');\r\n                        count.putInstruction('print(\"%c\",102);');\r\n                        count.putInstruction('print(\"%c\",97);');\r\n                        count.putInstruction('print(\"%c\",108);');\r\n                        count.putInstruction('print(\"%c\",115);');\r\n                        count.putInstruction('print(\"%c\",101);');\r\n                        count.putInstruction(l2+':');\r\n                        count.putInstruction('print(\"%c\",' + 10 + ');');\r\n                        return null;\r\n                    case Type.CADENA:\r\n                        type = '%i'\r\n                        break;\r\n                    default:\r\n                        count.putError(Type.SEMANTICO, 'Operacion ' + e.type + ' imposible de realizar con la funcion print.', this.row, this.column);\r\n                }\r\n                count.putInstruction('print(\"' + type + '\",' + e.value + ');');\r\n                count.putInstruction('print(\"%c\",' + 10 + ');');\r\n            } else if(e.type == Type.CADENA) {\r\n                var punt = count.getNextTemporal();\r\n                var punt2 = count.getNextTemporal();\r\n                var c = count.getNextTemporal();\r\n                var tmp = count.getNextTemporal();\r\n                var tag = count.getNextLabel();\r\n                var tago = count.getNextLabel();\r\n                count.putInstruction(punt2+' = '+ e.value + ';');\r\n                /*if(e.type_var != Type.GLOBAL){\r\n                    count.putInstruction('##asdasd');\r\n                    \r\n                }else{\r\n                    count.putInstruction(punt2+' = '+ e.value + ';');\r\n                }*/\r\n\r\n                count.putInstruction(c + ' = 0;');\r\n                count.putInstruction(tag + ':');\r\n                \r\n                count.putInstruction(punt+' = '+ punt2 + ' + ' + c + ';');\r\n                count.putInstruction(tmp+' = heap[' + punt + '];');\r\n                \r\n                count.generateIf2(tmp,'==','0',tago);\r\n                count.putInstruction('print(\"%c\",' + tmp + ');');\r\n                \r\n                count.putInstruction(c+' = '+c+' + 1;');\r\n                count.putInstruction('goto '+tag+';');\r\n                count.putInstruction(tago + ':');\r\n                count.putInstruction('print(\"%c\",' + 10 + ');');\r\n            }\r\n        } else {\r\n            //olc2_p1.IDE.txtExec += \"Hubo un error al Ejecutar Imprimir\\n\";\r\n            //olc2_p1.IDE.txtExec += \"Error Semantico, Hubo un error al Ejecutar Imprimir. Linea: \" + row + \" Columna: \" + column + \"\\n\";\r\n            count.putError(Type.SEMANTICO, \"Hubo un error al Ejecutar Imprimir.\", this.row, this.column);\r\n            //System.out.println(\"Hubo un error al imprimir\");\r\n        }\r\n        return null;\r\n    }\r\n\r\n    printValue(tmpExp, tab, tb) {\r\n        //        for (int j = 0; j < tb; j++) {\r\n        //            olc2_p1.IDE.txtExec += \"  \";\r\n        //        }\r\n        //olc2_p1.IDE.txtExec += ((Expression) tmpExp).operate(tab).value.toString() + \"\\n\";\r\n        //olc2_p1.IDE.txtExec += tmpExp.operate(tab).value.toString() + \"\\n\";\r\n    }\r\n\r\n    printVector(e, tab, tb) {\r\n        var tmpExp = e.value;\r\n        //olc2_p1.IDE.txtExec += \"Tipo: \" + e.type + \"****\\n\";\r\n        var i = 0;\r\n        //olc2_p1.IDE.txtExec += \"[\";\r\n        /*\r\n        for (var ex in tmpExp) {\r\n            //            for (int j = 0; j < tb; j++) {\r\n            //                olc2_p1.IDE.txtExec += \"  \";\r\n            //            }\r\n            olc2_p1.IDE.txtExec += \"[\" + (i + 1) + \"] \";\r\n            if (e.type == Type.CADENA) {\r\n                olc2_p1.IDE.txtExec += \"\\\"\";\r\n            }\r\n            olc2_p1.IDE.txtExec += ex.operate(tab).value.toString();\r\n            if (e.type == Type.CADENA) {\r\n                olc2_p1.IDE.txtExec += \"\\\"\";\r\n            }\r\n            olc2_p1.IDE.txtExec += \" \";\r\n            i++;\r\n        }\r\n\r\n        olc2_p1.IDE.txtExec += \"\\n\";\r\n        */\r\n    }\r\n\r\n}\r\nexport default Print;","const Type = require('./Type');\r\nconst Count = require('./Counters');\r\n\r\nclass Return {\r\n\r\n    constructor(_ambit, _value, _type, _type_exp, _row, _column) {\r\n        this.ambit = _ambit;\r\n        this.value = _value;\r\n        this.type = _type;\r\n        this.type_exp = _type_exp\r\n        this.row = _row;\r\n        this.column = _column;\r\n    }\r\n\r\n    operate(tab) {\r\n        var count = new Count();\r\n        var symb = null;\r\n        var i = 0;\r\n        symb = tab.getSymbol('return');\r\n        /*for(i; i< tab.symbols.length; i++){\r\n            if(tab.symbols[i].id === \"return\"){\r\n                symb = tab.symbols[i];\r\n                break;\r\n            }\r\n        }*/\r\n        if (symb == null) {\r\n            //error\r\n            return null;\r\n        }\r\n        if (this.value != null) {\r\n            var tmpExp = null;\r\n            if(!(this.value instanceof Array)){\r\n                tmpExp = this.value.operate(tab);\r\n            }else{\r\n                tmpExp = this.value[0].operate(tab);\r\n            }\r\n            \r\n            if (tmpExp == null) {\r\n                count.putError(Type.SEMANTICO, 'Error en la expresion de Retorno.', this.row, this.column);\r\n                return null;\r\n            }\r\n            \r\n            //tab.symbols[i].value = tmpExp.value;\r\n            //tab.symbols[i].type = tmpExp.type;\r\n            //tab.symbols[i].type_exp = tmpExp.type_exp;\r\n            symb.value = tmpExp.value;\r\n            symb.type = tmpExp.type;\r\n            symb.type_exp = tmpExp.type_exp;\r\n            count.generateDeclaration(Type.LOCAL, tmpExp.value, symb.pointer);\r\n        } else {\r\n            count.generateDeclaration(Type.LOCAL, null, tab.symbols[i].pointer);\r\n        }\r\n        count.putInstruction('goto '+count.getExitRet()+';')\r\n    }\r\n\r\n}\r\n\r\nexport default Return;","const Type = require('./Type');\r\nconst Count = require('./Counters');\r\nconst Value = require('./Value')\r\n\r\nclass Call {\r\n    constructor(_id, _type, _type_exp, _param, _row, _column) {\r\n        this.id = _id;\r\n        this.type = _type;\r\n        if (_param == null) {\r\n            this.param = []\r\n        } else {\r\n            this.param = _param;\r\n        }\r\n        this.type_exp = _type_exp;\r\n        this.column = _column;\r\n        this.row = _row;\r\n\r\n    }\r\n\r\n    operate(tab) {\r\n        var count = new Count();\r\n\r\n        this.type_exp = Type.LLAMADA;\r\n\r\n        var f = tab.getFunction(this.id);\r\n        if (f == null) {\r\n            //olc2_p1.IDE.txtExec += \"Error Semantico, Funcion: \" + id + \", No Declarada. Linea: \" + row + \" Columna: \" + column + \"\\n\";\r\n            count.putError(Type.SEMANTICO, \"Funcion: \" + this.id + \", No Declarada.\", this.row, this.column);\r\n            return null;\r\n        }\r\n        //var ss = new SymbolTable(null);\r\n        //var s = new SymbolTable(tab);\r\n        if (f.param != null) {\r\n            if (f.param.length != this.param.length) {\r\n                //olc2_p1.IDE.txtExec += \"Error Semantico, La Cantidad de parametros de la LLAMADA no Coinciden con la FUNCION. Linea: \" + row + \" Columna: \" + column + \"\\n\";\r\n                count.putError(Type.SEMANTICO, \"La Cantidad de parametros de la LLAMADA no Coinciden con la FUNCION.\", this.row, this.column);\r\n                return null;\r\n            }\r\n            var f1 = 0;\r\n            var f2 = 0;\r\n            for (var i = 0; i < this.param.length; i++) {\r\n                if (this.param[i].id == null) {\r\n                    f1++;\r\n                } else {\r\n                    f2++;\r\n                }\r\n            }\r\n            if (this.param.length == 0) {\r\n                f1++;\r\n            }\r\n            var t = count.getNextTemporal();\r\n            count.newRelative();\r\n            count.getRelativePlus()\r\n            if (f1 != 0 && f2 == 0) {\r\n                for (var i = 0; i < f.param.length; i++) {\r\n                    var symb = f.symbolTab.getSymbol(f.param[i].id[0]);\r\n                    if (symb != null) {\r\n                        var tmpV = null;\r\n                        if (!(this.param[i].value instanceof Array)) {\r\n                            tmpV = this.param[i].value.operate(tab);\r\n                        } else {\r\n                            var tmpV = this.param[i].value[0].operate(tab);    ///////////////////aca se debe modificar para la recursion de llamadas\r\n                        }\r\n\r\n                        if (tmpV == null) {\r\n                            //olc2_p1.IDE.txtExec += \"Error Semantico, Parametro en la posicion \" + (i + 1) + \" NO VALIDO. Linea: \" + row + \" Columna: \" + column + \"\\n\";\r\n                            count.putError(Type.SEMANTICO, \"Parametro en la posicion \" + (i + 1) + \" NO VALIDO.\", this.row, this.column);\r\n                            return null;\r\n                        }\r\n                        if (tmpV.type != f.param[i].type) {\r\n                            count.putError(Type.SEMANTICO, \"Funcion: \" + this.id + \", El tipo \" + tmpV.type + \" no coincide con el parametro \" + f.param[i].id[0] + \" de la Funcion.\", this.row, this.column);\r\n                            return null;\r\n                        }\r\n                        count.putInstruction('##Insertando los parametros de llamada. Posicion ' + (i + 1));\r\n                        count.putInstruction(t + ' = P + ' + (f.param.length + 1) + ';')\r\n                        count.paramCall(Type.PRIMITIVO, t, tmpV.value, symb.pointer);\r\n                        count.getRelativePlus()\r\n\r\n                    } else {\r\n                        count.putError(Type.SEMANTICO, \"Funcion: \" + this.id + \", Parametro invalido.\", this.row, this.column);\r\n                        return null;\r\n                    }\r\n\r\n                }\r\n            } else if (f1 == 0 && f2 != 0) {\r\n                for (var i = 0; i < f.param.length; i++) {\r\n                    var symb = f.symbolTab.getSymbol(this.param[i].id);\r\n                    /*if (symb != null) {\r\n                        var tmpV = this.param[i].value.operate(tab);\r\n                        if (tmpV == null) {\r\n                            //olc2_p1.IDE.txtExec += \"Error Semantico, Parametro en la posicion \" + (i + 1) + \" NO VALIDO. Linea: \" + row + \" Columna: \" + column + \"\\n\";\r\n                            count.putError(Type.SEMANTICO, \"Parametro en la posicion \" + (i + 1) + \" NO VALIDO.\", this.row, this.column);\r\n                            return null;\r\n                        }\r\n                        if (tmpV.type != f.param[i].type) {\r\n                            count.putError(Type.SEMANTICO, \"Funcion: \" + this.id + \", El tipo \" + tmpV.type + \" no coincide con el parametro \" + f.param[i].id[0] + \" de la Funcion.\", this.row, this.column);\r\n                            return null;\r\n                        }\r\n                        count.putInstruction('##Insertando los parametros de llamada. Posicion ' + i);\r\n                        count.paramCall(Type.PRIMITIVO, 'P', tmpV.value, symb.pointer);\r\n\r\n                    } else {\r\n                        count.putError(Type.SEMANTICO, \"Funcion: \" + this.id + \", Parametro invalido.\", this.row, this.column);\r\n                        return null;\r\n                    }*/\r\n                    if (symb != null) {\r\n                        var tmpV = null;\r\n                        if (!(this.param[i].value instanceof Array)) {\r\n                            tmpV = this.param[i].value.operate(tab);\r\n                        } else {\r\n                            var tmpV = this.param[i].value[0].operate(tab);    ///////////////////aca se debe modificar para la recursion de llamadas\r\n                        }\r\n\r\n                        if (tmpV == null) {\r\n                            //olc2_p1.IDE.txtExec += \"Error Semantico, Parametro en la posicion \" + (i + 1) + \" NO VALIDO. Linea: \" + row + \" Columna: \" + column + \"\\n\";\r\n                            count.putError(Type.SEMANTICO, \"Parametro en la posicion \" + (i + 1) + \" NO VALIDO.\", this.row, this.column);\r\n                            return null;\r\n                        }\r\n                        if (tmpV.type != f.param[i].type) {\r\n                            count.putError(Type.SEMANTICO, \"Funcion: \" + this.id + \", El tipo \" + tmpV.type + \" no coincide con el parametro \" + f.param[i].id[0] + \" de la Funcion.\", this.row, this.column);\r\n                            return null;\r\n                        }\r\n                        count.putInstruction('##Insertando los parametros de llamada. Posicion ' + (i + 1));\r\n                        count.putInstruction(t + ' = P + ' + (f.param.length + 1) + ';')\r\n                        count.paramCall(Type.PRIMITIVO, t, tmpV.value, symb.pointer);\r\n                        count.getRelativePlus()\r\n\r\n                    } else {\r\n                        count.putError(Type.SEMANTICO, \"Funcion: \" + this.id + \", Parametro invalido.\", this.row, this.column);\r\n                        return null;\r\n                    }\r\n\r\n                }\r\n            } else {\r\n                count.putError(Type.SEMANTICO, \"Solo se pude usar un tipo de parametro a la vez.\", this.row, this.column);\r\n                return null;\r\n            }\r\n\r\n\r\n        }\r\n        count.putInstruction('P = P + ' + count.getRelative() + ';');\r\n        //s.symbols = ss.symbols;\r\n        count.putInstruction('##Insertando la llama a la Funcion ' + f.id);\r\n        count.putInstruction('call ' + f.idd + ';');\r\n\r\n        count.resetRelative()\r\n        \r\n        //var symb = f.symbolTab.getSymbol('return');\r\n        var tag2 = null;\r\n        count.putInstruction('##Verificando si existe retorno.');\r\n        var tag = count.getNextTemporal();\r\n        tag2 = count.getNextTemporal();\r\n        count.putInstruction(tag + ' = P + 0;')\r\n        count.putInstruction(tag2 + ' = stack[' + tag + '];')\r\n        count.putInstruction('P = P - ' + count.getRelative() + ';');\r\n        if (symb != null) {\r\n            var ret = new Value(tag2, symb.type, symb.type_exp, this.row, this.column);\r\n            ret.type_var = symb.type_var;\r\n            return ret;\r\n        }\r\n\r\n\r\n        //return new Value(this.param, this.type, this.type_exp, row, column).operate(tab);\r\n    }\r\n    //        return null;\r\n    //return new Value(\"null\", Type.CADENA, Type.NULL, this.row, this.column);\r\n\r\n\r\n\r\n}\r\n\r\nexport default Call;","const Type = require('./Type');\r\nconst SymbolTable = require('./SymbolTable');\r\nconst Count = require('./Counters');\r\n\r\n\r\nclass IfList {\r\n\tconstructor() {\r\n\t\tthis.lif = [];\r\n\t\tthis.elsebody = [];\r\n\t}\r\n\r\n\toperate(tab) {\r\n\t\tvar count = new Count();\r\n\r\n\t\tvar out = count.getNextLabel();\r\n\t\tfor (var j = 0; j < this.lif.length; j++) {\r\n\t\t\tvar r = this.lif[j].exp.operate(tab);\r\n\t\t\tif (r == null) {\r\n\t\t\t\tcount.putError(Type.SINTACTICO, \"No se puede ejecutar la instruccion If, se necesita una condicion logica o relacional.\", this.lif[j].row, this.lif[j].column);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (r.type != Type.BOOL) {\r\n\t\t\t\t//olc2_p1.IDE.txtExec += \"Error Sintactico, No se puede ejecutar la operacion \" + aux.type.toString() + \", se necesita una condicion logica o relacional. Linea: \" + row + \" Columna: \" + column + \"\\n\";\r\n\t\t\t\tcount.putError(Type.SINTACTICO, \"No se puede ejecutar la operacion \" + r.type + \", se necesita una condicion logica o relacional.\", this.lif[j].row, this.lif[j].column);\r\n\t\t\t\t//System.out.println(\"Error No se encontro una condicion logica\");\r\n\t\t\t}\r\n\t\t\tvar aux = count.generateIf(r.value, '==', 0);\r\n\t\t\tvar s = new SymbolTable(tab);\r\n\t\t\tfor (var i = 0; i < this.lif[j].body.length; i++) {\r\n\t\t\t\tthis.lif[j].body[i].operate(s);\r\n\t\t\t}\r\n\r\n\t\t\tcount.putInstruction('goto ' + out + ';');\r\n\t\t\tcount.putInstruction(aux + ':');\r\n\r\n\r\n\t\t}\r\n\t\tif (this.elsebody != null) {\r\n\t\t\t//elsebody.used = used;\r\n\t\t\t//elsebody.execute(tab);\r\n\t\t\tvar body = this.elsebody.body;\r\n\t\t\tvar s = new SymbolTable(tab);\r\n\t\t\tfor (var i = 0; i < body.length; i++) {\r\n\r\n\t\t\t\tbody[i].operate(s);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tcount.putInstruction(out + ':');\r\n\t\t/*for(var i = 0; i<outs.length; i++){\r\n\t\t\tcount.putInstruction(outs[i] + ':');\r\n\t\t}*/\r\n\t\treturn null;\r\n\t}\r\n\r\n}\r\n\r\nexport default IfList;","const Type = require('./Type');\r\nconst SymbolTable = require('./SymbolTable');\r\nconst Count = require('./Counters');\r\n\r\nclass While {\r\n    constructor(e, c, _row, _column) {\r\n        this.row = _row;\r\n        this.column = _column;\r\n        this.exp = e;\r\n        this.body = c;\r\n    }\r\n\r\n    operate(tab) {\r\n        var count = new Count();\r\n        var init = count.getNextLabel();\r\n        count.putInstruction(init + ':');\r\n        var r = this.exp.operate(tab);\r\n        \r\n        if (r == null) {\r\n            count.putError(Type.SINTACTICO, \"No se puede ejecutar la operacion \" + r.type + \", se necesita una condicion logica o relacional.\", this.row, this.column);\r\n            return null;\r\n        }\r\n        if (r.type != Type.BOOL) {\r\n            //olc2_p1.IDE.txtExec += \"Error Sintactico, No se puede ejecutar la operacion \" + aux.type.toString() + \", se necesita una condicion logica o relacional. Linea: \" + row + \" Columna: \" + column + \"\\n\";\r\n            count.putError(Type.SINTACTICO, \"No se puede ejecutar la operacion \" + r.type + \", se necesita una condicion logica o relacional.\", this.row, this.column);\r\n            //System.out.println(\"Error No se encontro una condicion logica\");\r\n        }\r\n        \r\n        var aux = count.generateIf(r.value,'==',0);\r\n        count.pushFinal(aux);\r\n        count.pushInit(init);\r\n        var s = new SymbolTable(tab);\r\n        //for (int i = 0; i < body.size(); i++) {\r\n        for (var i = 0; i < this.body.length; i++) {\r\n\r\n            this.body[i].operate(s);\r\n        }\r\n\r\n        count.putInstruction('goto ' + init + ';');\r\n        count.putInstruction(aux + ':');\r\n        count.popInit();\r\n        count.popFinal();\r\n\r\n        return null;\r\n    }\r\n}\r\nexport default While;","const Type = require('./Type');\r\nconst SymbolTable = require('./SymbolTable');\r\nconst Count = require('./Counters');\r\n\r\nclass DoWhile {\r\n    constructor(e, c, _row, _column) {\r\n        this.row = _row;\r\n        this.column = _column;\r\n        this.exp = e;\r\n        this.body = c;\r\n    }\r\n\r\n    operate(tab) {\r\n        var count = new Count();\r\n        var init = count.getNextLabel();\r\n        count.putInstruction('##Iniciando el Do While');\r\n        count.putInstruction(init + ':');\r\n        count.pushInit(init);\r\n        var s = new SymbolTable(tab);\r\n        var r = this.exp.operate(tab);\r\n        var l = count.getNextLabel();\r\n        count.pushFinal(l);\r\n        if (r == null) {\r\n            count.putError(Type.SINTACTICO, \"No se puede ejecutar la operacion \" + r.type + \", se necesita una condicion logica o relacional.\", this.row, this.column);\r\n            return null;\r\n        }\r\n        if (r.type != Type.BOOL) {\r\n            //olc2_p1.IDE.txtExec += \"Error Sintactico, No se puede ejecutar la operacion \" + aux.type.toString() + \", se necesita una condicion logica o relacional. Linea: \" + row + \" Columna: \" + column + \"\\n\";\r\n            count.putError(Type.SINTACTICO, \"No se puede ejecutar la operacion \" + r.type + \", se necesita una condicion logica o relacional.\", this.row, this.column);\r\n            return null;\r\n        }\r\n        \r\n        //for (int i = 0; i < body.size(); i++) {\r\n        for (var i = 0; i < this.body.length; i++) {\r\n\r\n            this.body[i].operate(s);\r\n        }\r\n\r\n\r\n\r\n        count.generateIf2(r.value,'==',0,l);\r\n        //count.pushFinal(aux);\r\n        count.putInstruction('goto ' + init + ';');\r\n        count.putInstruction(l + ':');\r\n        count.popFinal();\r\n        count.popInit();\r\n        count.putInstruction('');\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default DoWhile;","const Type = require('./Type');\r\nconst Count = require('./Counters');\r\n\r\nclass Assignment {\r\n    constructor(_id, val, _row, _column) {\r\n        this.value = val;\r\n        this.id = _id;\r\n        this.row = _row;\r\n        this.column = _column;\r\n        //this.type = t;\r\n    }\r\n\r\n    operate(tab) {\r\n        var count = new Count();\r\n        var a = tab.getSymbol(this.id[0].value);\r\n        var tmpExp;\r\n        count.putInstruction('##Iniciando la Asignacion de ' + this.id[0].value);\r\n        if (!(Array.isArray(this.value))) {\r\n            tmpExp = this.value.operate(tab);\r\n        } else {\r\n            tmpExp = this.value[0].operate(tab);\r\n        }\r\n        if (tmpExp != null) {\r\n            if (a == null) {\r\n                //tab.addSymbol(new Symboll(0, tmpExp.type, tmpExp.type_exp, id, tempLL.clone()));\r\n                count.putError(Type.SEMANTICO, \"Variable \" + this.id[0] + \" no encontrada.\", this.row, this.column);\r\n            } else {\r\n                if (a.type_c == Type.CONST) {\r\n                    count.putError(Type.SEMANTICO, 'No se puede asignar VALOR a ' + a.id + ' por que es de tipo CONSTANTE.', this.row, this.column);\r\n                    return null;\r\n                }\r\n                if (this.checkType(tmpExp, a.type, count)) {\r\n                    return null;\r\n                }\r\n                a.type_exp = tmpExp.type_exp;\r\n                a.type = tmpExp.type;\r\n                var t = count.getNextTemporal();\r\n                if (a.type_var == Type.GLOBAL) {\r\n                    //count.putInstruction(t + ' = H + ' + a.pointer + ';');\r\n                    count.putInstruction('heap[' + a.tag + '] = ' + tmpExp.value + ';');\r\n                } else {\r\n                    count.putInstruction(t + ' = P + ' + a.pointer + ';');\r\n                    count.putInstruction('stack[' + t + '] = ' + tmpExp.value + ';');\r\n                }\r\n\r\n            }\r\n        } else {\r\n            //olc2_p1.IDE.txtExec += \"Error Semantico, Hubo un error al realizar la asignacion de la variable \\\"\" + id + \"\\\". Linea: \" + row + \" Columna: \" + column + \"\\n\";\r\n            count.putError(Type.SEMANTICO, \"Hubo un error al realizar la asignacion de la variable \" + this.id[0] + \".\", this.row, this.column);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkType(val, type, cont) {\r\n        switch (type) {\r\n            case Type.ENTERO:\r\n                if (val.type == Type.ENTERO) {\r\n                    return false;\r\n                } else if (val.type == Type.CARACTER) {\r\n                    val.type = Type.ENTERO;\r\n                    return false;\r\n                } else {\r\n                    cont.putError(Type.SEMANTICO, 'Tipo de la EXPRESION ' + val.type + ' No Asignable a un ENTERO.', this.row, this.column);\r\n                    return true;\r\n                }\r\n                break;\r\n            case Type.DECIMAL:\r\n                if (val.type == Type.DECIMAL) {\r\n                    return false;\r\n                } else if (val.type == Type.ENTERO) {\r\n                    val.type = Type.DECIMAL;\r\n                    return false;\r\n                } else if (val.type == Type.CARACTER) {\r\n                    val.type = Type.DECIMAL;\r\n                    return false;\r\n                } else {\r\n                    cont.putError(Type.SEMANTICO, 'Tipo de la EXPRESION ' + val.typ + ' No Asignable a un DOUBLE.', this.row, this.column);\r\n                    return true;\r\n                }\r\n                break;\r\n            case Type.CARACTER:\r\n                if (val.type != Type.CARACTER) {\r\n                    cont.putError(Type.SEMANTICO, 'Tipo de la EXPRESION ' + val.type + ' No Asignable a un CARACTER.', this.row, this.column);\r\n                    return true;\r\n                }\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport default Assignment;\r\n/*\r\n for (var i = 0; i < tab.symbols.length; i++) {\r\n                if (tab.symbols[i].id === this.id[0].value) {\r\n                    tab.symbols[i].type_exp = tmpExp.type_exp;\r\n                    tab.symbols[i].type = tmpExp.type;\r\n                    count.putInstruction('stack['+tab.symbols[i].tag+'] = '+tmpExp.value+';');\r\n                    return null;\r\n                }\r\n            }\r\n            count.putError(Type.SEMANTICO, \"Variable \" + this.id[0] + \" no encontrada.\", this.row, this.column);\r\n*/","const Type = require('./Type');\r\nconst SymbolTable = require('./SymbolTable');\r\nconst Count = require('./Counters');\r\n\r\nclass Switch {\r\n\r\n    constructor(_exp, _body, _default, _row, _column) {\r\n        this.exp = _exp;\r\n        this.cases = _body;\r\n        this.rdefault = _default;\r\n        this.row = _row;\r\n        this.column = _column;\r\n        //this.elsebody = new LinkedList<>();\r\n    }\r\n\r\n    operate(tab) {\r\n        var count = new Count();\r\n        var a = 0;\r\n        count.putInstruction('##Creando switch');\r\n        var sa = count.getNextLabel();\r\n        \r\n        count.pushFinal(sa);\r\n        if (this.exp == null) {\r\n            //olc2_p1.IDE.txtExec += \"Error Sintactico, Se necesita una EXPRESION para comparar en el Switch. Linea: \" + row + \" Columna: \" + column + \"\\n\";\r\n            count.putError(Type.SINTACTICO, \"Se necesita una EXPRESION pra comparar en el Switch.\", this.row, this.column);\r\n            return null;\r\n        }\r\n        var tmpExp = this.exp.operate(tab);\r\n        if (tmpExp == null || tmpExp.type_exp != Type.VALOR) {\r\n            //olc2_p1.IDE.txtExec += \"Error Semantico, Error al Evaluar la EXPRESSION en el Switch. Linea: \" + row + \" Columna: \" + column + \"\\n\";\r\n            count.putError(Type.SEMANTICO, \"Error al Evaluar la EXPRESION en el Switch.\", this.row, this.column);\r\n            return null;\r\n        }\r\n        //var tagout = count.getNextLabel();\r\n        for (var i = 0; i < this.cases.length; i++) {\r\n            var tmpV = this.cases[i].exp.operate(tab);\r\n            if (tmpV == null || tmpV.type_exp != Type.VALOR) {\r\n                //olc2_p1.IDE.txtExec += \"Error Semantico, Error al Evaluar la EXPRESSION en el Switch, se esperaba VALOR. Linea: \" + row + \" Columna: \" + column + \"\\n\";\r\n                count.putError(Type.SEMANTICO, \"Error al Evaluar la EXPRESSION en el Switch, se esperaba VALOR.\", this.row, this.column);\r\n                return null;\r\n            }\r\n            //this.putInstruction('if('+tmpExp+' == '+tmpV+') goto '+tagout+';');\r\n            var tagout = count.generateIf(tmpExp.value,'<>',tmpV.value);\r\n            \r\n            for (var s = 0; s < this.cases[i].body.length; s++) {\r\n\r\n                this.cases[i].body[s].operate(tab);\r\n            }\r\n            count.putInstruction(tagout+':');\r\n        }\r\n        if (this.rdefault != null) {\r\n            for (var i = 0; i< this.rdefault.length; i++) {\r\n                this.rdefault[i].operate(tab);\r\n\r\n            }\r\n        }\r\n        count.putInstruction(sa+':');\r\n        count.popFinal();\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nexport default Switch;","const Type = require('./Type');\r\nconst SymbolTable = require('./SymbolTable');\r\nconst Count = require('./Counters');\r\n\r\nclass For{\r\n    constructor(_decla, _exp,_assig, _body, _row, _col) {\r\n        this.declaration = _decla;\r\n        this.exp = _exp;\r\n        this.assignment = _assig\r\n        this.body = _body;\r\n        this.row = _row;\r\n        this.column = _col;\r\n    }\r\n\r\n    operate(tab) {\r\n        var count = new Count();\r\n        var s = new SymbolTable(tab);\r\n        count.putInstruction('##Generando el For');\r\n        if(this.declaration != null){\r\n            this.declaration.operate(s);\r\n        }\r\n        \r\n        \r\n        var tagin = count.getNextLabel();\r\n        count.putInstruction(tagin+':');\r\n        \r\n        var r = this.exp.operate(s);\r\n        if (r == null) {\r\n            count.putError(Type.SINTACTICO, \"No se puede ejecutar la operacion \" + r.type + \", se necesita una condicion logica o relacional.\", this.row, this.column);\r\n            return null;\r\n        }\r\n        if (r.type != Type.BOOL) {\r\n            //olc2_p1.IDE.txtExec += \"Error Sintactico, No se puede ejecutar la operacion \" + aux.type.toString() + \", se necesita una condicion logica o relacional. Linea: \" + row + \" Columna: \" + column + \"\\n\";\r\n            count.putError(Type.SINTACTICO, \"No se puede ejecutar la operacion \" + r.type + \", se necesita una condicion logica o relacional.\", this.row, this.column);\r\n            return null;\r\n        }\r\n        var e = count.generateIf(r.value,'==',0);\r\n        count.pushFinal(e);\r\n        var c = count.getNextLabel();\r\n        count.pushInit(c);\r\n        for(var i = 0; i<this.body.length; i++){\r\n            this.body[i].operate(s)\r\n        }\r\n        \r\n        if(this.assignment != null){\r\n            count.putInstruction(c+':');\r\n            console.log(this.assignment);\r\n            this.assignment.operate(s);\r\n        }\r\n        \r\n        count.putInstruction('goto '+tagin+';');\r\n        count.putInstruction(e+':');\r\n        count.popInit();\r\n        count.popFinal();\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default For;","const Type = require('./Type');\r\nconst SymbolTable = require('./SymbolTable');\r\nconst count = require('./Counters');\r\n\r\n\r\nclass Unary{\r\n    constructor(_id, _type, _row, _col){\r\n        this.id = _id;\r\n        this.type = _type;\r\n        this.row = _row;\r\n        this.column = _col;\r\n    }\r\n\r\n    operate(tab){\r\n        this.count = new count();\r\n        var a = tab.getSymbol(this.id);\r\n        if(a == null){\r\n            //error\r\n            return null;\r\n        }\r\n        var index =this.count.generateInstruction('P','+',a.pointer);\r\n        var tag =this.count.getNextTemporal();\r\n        if(a.type_ex == Type.GLOBAL){\r\n           this.count.putInstruction(tag+' = heap['+index+'];')\r\n        }else{\r\n           this.count.putInstruction(tag+' = stack['+index+'];')\r\n        }\r\n        if(this.type == Type.INCREMENTO){\r\n           this.count.putInstruction(tag+' = '+tag+' + 1;')\r\n        }else{\r\n           this.count.putInstruction(tag+' = '+tag+' - 1;')\r\n        }\r\n        \r\n        if(a.type_ex == Type.GLOBAL){\r\n           this.count.putInstruction('heap['+index+'] = '+tag+';')\r\n        }else{\r\n           this.count.putInstruction('stack['+index+'] = '+tag+';')\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nexport default Unary;","const Count = require('./Counters');\r\nconst Type = require('./Type');\r\n\r\nclass Break{\r\n\r\n    constructor(_type_exp, _row, _column) {\r\n        this.type_exp = _type_exp;\r\n        this.row = _row;\r\n        this.column = _column;\r\n    }\r\n\r\n    operate(tab) {\r\n        var count = new Count();\r\n        if(count.getLengthFinal() > 0){\r\n            count.putInstruction('goto '+count.getLastFinal()+';');\r\n            return;\r\n        }else{\r\n            count.putError(Type.SEMANTICO,'La instruccion BREAK solo puede estar dentro de While,For,DoWhile,Switch.',this.row,this.column);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Break;","const Count = require('./Counters');\r\nconst Type = require('./Type');\r\n\r\nclass Continue{\r\n\r\n    constructor(_type_exp, _row, _column) {\r\n        this.type_exp = _type_exp;\r\n        this.row = _row;\r\n        this.column = _column;\r\n    }\r\n\r\n    operate(tab) {\r\n        var count = new Count();\r\n        if(count.getLengthInit() > 0){\r\n            count.putInstruction('goto '+count.getLastInit()+';');\r\n        }else{\r\n            count.putError(Type.SEMANTICO,'La instruccion CONTINUE solo puede estar dentro de While,For,DoWhile.',this.row,this.column);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Continue;","const Count = require('./Counters');\r\nconst Type = require('./Type');\r\n\r\nclass Cast {\r\n    constructor(_type, _exp, _row, _column) {\r\n        this.type = _type;\r\n        this.exp = _exp;\r\n        this.row = _row;\r\n        this.column = _column;\r\n    }\r\n\r\n    operate(tab) {\r\n        var count = new Count();\r\n        var e = this.exp.operate(tab);\r\n        if (e == null) {\r\n            count.putError(Type.SEMANTICO, 'Expresion No valida para Castear.', this.row, this.column);\r\n            return null;\r\n        }\r\n        if(e.type_exp != Type.VALOR){\r\n            count.putError(Type.SEMANTICO, 'Los Casteos solo pueden ser aplicados a VALORES, tipo '+e.type_exp+' No Permitido.', this.row, this.column);\r\n            return null;\r\n        }\r\n        \r\n        switch (this.type) {\r\n            case Type.ENTERO:\r\n                if (e.type == Type.DECIMAL) {\r\n                    var t1 = count.getNextTemporal();\r\n                    e.type = Type.ENTERO;\r\n                    count.putInstruction(t1+' = '+e.value+' % 1;');\r\n                    count.putInstruction(t1+' = '+e.value+' - '+t1+';');\r\n                    e.value = t1;\r\n                    return e;\r\n                } else {\r\n                    count.putError(Type.SEMANTICO, 'No se puede Castear a INTEGER el tipo ' + e.type + '.', this.row, this.column);\r\n                    return null;\r\n                }\r\n                break;\r\n            case Type.CARACTER:\r\n                if (e.type == Type.DECIMAL) {\r\n                    var t1 = count.getNextTemporal();\r\n                    e.type = Type.CARACTER;\r\n                    count.putInstruction(t1+' = '+e.value+' % 1;');\r\n                    count.putInstruction(t1+' = '+e.value+' - '+t1+';');\r\n                    e.value = t1;\r\n                    return e;\r\n                } else if (e.type == Type.ENTERO) {\r\n                    e.type = Type.CARACTER;\r\n                    return e;\r\n                } else {\r\n                    count.putError(Type.SEMANTICO, 'No se puede Castear a INTEGER el tipo ' + e.type + '.', this.row, this.column);\r\n                    return null;\r\n                }\r\n                break;\r\n            default:\r\n                count.putError(Type.SEMANTICO, 'El tipo ' + this.type + ' No es permitido para Casteos.', this.row, this.column);\r\n                return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Cast;","import React, { Component } from 'react'\r\nimport {Controlled as CodeMirror} from 'react-codemirror2'\r\nimport 'codemirror/theme/eclipse.css';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/mode/javascript/javascript.js';\r\n\r\nclass TextArea extends Component {\r\n\r\n\ttext_area = React.createRef();\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t  code: ''\r\n\t\t};\r\n\t  }\r\n\t\r\n\trender() {\r\n\t\tlet options = {\r\n\t\t\tlineNumbers: true,\r\n\t\t\tmatchBrackets: true,\r\n\t\t\tstyleActiveLine: true,\r\n\t\t\ttheme: \"eclipse\",\r\n\t\t\tmode : \"javascript\",\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t  <div>\r\n\t\t\t  <CodeMirror\r\n\t\t\t\tvalue={this.state.value}\r\n\t\t\t\toptions={options}\r\n\t\t\t\tonBeforeChange={(editor, data, value) => {\r\n\t\t\t\t\tthis.setState({value});\r\n\t\t\t\t\tthis.props.get_text(value);\r\n\t\t\t\t}}\r\n\t\t\t\tonChange={(editor, data, value) => {\r\n\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t  </div>\r\n\t\t);\r\n\t}\r\n  }\r\n\r\n  export default TextArea;\r\n\r\n","import React, { Component } from 'react'; \nimport TextArea from './Components/TextArea';\nimport { Graphviz } from 'graphviz-react';\nimport { interprete } from './docs/interprete';\n\nclass App extends Component {\n\n  translate_input = (e) => {\n    console.log(this.text);\n    interprete.parse(this.text);\n  }\n\n  ejecutar_input = (e) => {\n    console.log(\"ingreso\");\n  }\n\n  report_errors = (e) => {\n    console.log(\"ingreso\");\n  }\n\n  report_symbols = (e) => {\n    console.log(\"ingreso\");\n  }\n\n  report_ast = (e) => {\n    console.log(\"ingreso\");\n  }\n\n  get_text = (texto) => {\n    this.text = texto;\n  }\n  render () {\n    let text = \"\";\n    return (\n      <div className=\"jumbotron\">\n        <div>\n          <ul className=\"nav nav-pills\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" role=\"button\" onClick={this.translate_input}>Traducir</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" role=\"button\"  onClick={this.ejecutar_input}>Ejecutar</a>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <a className=\"nav-link dropdown-toggle\" role=\"button\" data-toggle=\"dropdown\" href=\"#\"  aria-haspopup=\"true\" aria-expanded=\"false\">Reportes</a>\n              <div className=\"dropdown-menu\" >\n                <a className=\"dropdown-item\" onClick={this.report_errors}>Reporte de errores</a>\n                <a className=\"dropdown-item\" onClick={this.report_symbols}>Reporte de tabla de símbolos</a>\n                <a className=\"dropdown-item\" onClick={this.report_ast}>Reporte de AST</a>\n              </div>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card border-primary mb-3\">\n          <div className=\"card-body\">\n            <TextArea get_text = {this.get_text}></TextArea>\n          </div>\n        </div>\n\n        <div className=\"card border-primary mb-3\">\n          <div className=\"card-header\">Árbol de sintaxis abstracta</div>\n          <div className=\"card-body\">\n            <Graphviz dot={`digraph G {\n\nsubgraph cluster_0 {\n  style=filled;\n  color=lightgrey;\n  node [style=filled,color=white];\n  a0 -> a1 -> a2 -> a3;\n  label = \"process #1\";\n}\n\nsubgraph cluster_1 {\n  node [style=filled];\n  b0 -> b1 -> b2 -> b3;\n  label = \"process #2\";\n  color=blue\n}\nstart -> a0;\nstart -> b0;\na1 -> b3;\nb2 -> a3;\na3 -> a0;\na3 -> end;\nb3 -> end;\n\nstart [shape=Mdiamond];\nend [shape=Msquare];\n}`} />\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}